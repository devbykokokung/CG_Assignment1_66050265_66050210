package Frames;

import java.awt.*;
import java.awt.image.BufferedImage;

import Libs.BirbPath;

public class Frame3 {

    public static void drawFrame(Graphics2D g2) {
        drawPart0(g2);
        drawPart1(g2);
        drawPart2(g2);
        drawPart3(g2);
        drawPart4(g2);
    }

    private static void drawPart0(Graphics2D g2) {
        {
            BirbPath path0_0 = new BirbPath();
            path0_0.setFillColor(new Color(238, 239, 241));
            path0_0.moveTo(147.06, 599.90);
            path0_0.curveTo(99.44, 599.90, 51.81, 599.86, 4.19, 599.98);
            path0_0.curveTo(0.94, 599.98, 0.01, 599.57, 0.01, 595.98);
            path0_0.curveTo(0.12, 398.66, 0.12, 201.33, 0.00, 4.00);
            path0_0.curveTo(0.00, 0.40, 0.95, 0.00, 4.19, 0.00);
            path0_0.curveTo(53.81, 0.12, 103.43, 0.08, 153.06, 0.08);
            path0_0.curveTo(159.05, 9.60, 160.67, 20.28, 161.50, 31.21);
            path0_0.curveTo(161.55, 31.85, 164.13, 32.02, 164.87, 32.94);
            path0_0.curveTo(168.71, 37.72, 172.66, 42.46, 175.82, 47.68);
            path0_0.curveTo(176.77, 49.25, 176.06, 53.75, 174.80, 54.42);
            path0_0.curveTo(162.06, 61.15, 170.72, 67.82, 174.74, 74.18);
            path0_0.curveTo(179.63, 81.91, 184.33, 89.96, 190.41, 96.70);
            path0_0.curveTo(197.96, 105.09, 183.58, 103.79, 185.88, 108.10);
            path0_0.curveTo(189.98, 115.75, 195.26, 122.77, 200.04, 130.05);
            path0_0.lineTo(203.04, 134.05);
            path0_0.lineTo(204.04, 135.47);
            path0_0.curveTo(204.37, 135.00, 204.71, 134.52, 205.04, 134.05);
            path0_0.curveTo(205.71, 133.05, 206.37, 132.05, 207.04, 131.05);
            path0_0.curveTo(213.01, 130.27, 215.80, 134.67, 214.75, 138.79);
            path0_0.curveTo(211.13, 152.98, 218.55, 161.79, 228.03, 170.04);
            path0_0.curveTo(217.89, 182.80, 230.59, 191.09, 234.13, 201.17);
            path0_0.lineTo(234.24, 201.24);
            path0_0.curveTo(233.49, 201.75, 232.73, 202.26, 231.98, 202.77);
            path0_0.curveTo(231.81, 203.07, 231.55, 203.19, 231.21, 203.14);
            path0_0.curveTo(230.46, 203.43, 229.72, 203.73, 228.97, 204.02);
            path0_0.curveTo(228.32, 204.56, 227.68, 205.10, 227.03, 205.64);
            path0_0.curveTo(226.36, 205.72, 225.69, 205.80, 225.02, 205.88);
            path0_0.curveTo(224.21, 205.84, 223.39, 205.79, 222.58, 205.75);
            path0_0.curveTo(223.24, 206.18, 223.90, 206.62, 224.56, 207.05);
            path0_0.curveTo(224.56, 207.05, 224.85, 207.23, 224.85, 207.23);
            path0_0.lineTo(216.66, 209.49);
            path0_0.curveTo(215.47, 209.37, 214.28, 209.26, 213.09, 209.14);
            path0_0.curveTo(210.51, 207.13, 209.25, 207.96, 209.05, 211.03);
            path0_0.lineTo(196.20, 216.12);
            path0_0.curveTo(193.15, 217.09, 190.10, 218.06, 187.06, 219.03);
            path0_0.curveTo(177.08, 224.04, 167.09, 229.05, 157.11, 234.06);
            path0_0.curveTo(157.11, 234.06, 157.11, 234.06, 157.11, 234.06);
            path0_0.curveTo(153.07, 236.28, 149.04, 238.49, 145.00, 240.71);
            path0_0.curveTo(144.85, 240.99, 144.62, 241.14, 144.30, 241.16);
            path0_0.curveTo(143.56, 241.78, 142.82, 242.40, 142.08, 243.02);
            path0_0.curveTo(142.08, 243.02, 142.08, 243.02, 142.08, 243.02);
            path0_0.curveTo(141.46, 243.76, 140.85, 244.50, 140.23, 245.24);
            path0_0.curveTo(139.76, 245.81, 139.29, 246.38, 138.82, 246.95);
            path0_0.curveTo(136.88, 249.93, 134.94, 252.91, 133.01, 255.88);
            path0_0.lineTo(132.96, 255.94);
            path0_0.curveTo(132.40, 256.74, 131.84, 257.53, 131.28, 258.33);
            path0_0.lineTo(129.04, 260.99);
            path0_0.curveTo(119.17, 274.00, 116.08, 289.16, 115.05, 304.98);
            path0_0.curveTo(114.96, 305.65, 114.87, 306.32, 114.79, 306.98);
            path0_0.curveTo(101.01, 313.03, 115.98, 290.45, 103.28, 295.43);
            path0_0.curveTo(102.46, 292.50, 101.34, 289.60, 100.97, 286.61);
            path0_0.curveTo(100.83, 285.46, 102.66, 284.17, 103.07, 282.80);
            path0_0.curveTo(103.44, 281.57, 103.07, 280.12, 103.04, 278.76);
            path0_0.curveTo(98.32, 283.54, 93.59, 288.31, 88.87, 293.09);
            path0_0.curveTo(100.40, 297.31, 95.40, 317.48, 111.87, 316.92);
            path0_0.curveTo(111.47, 318.27, 111.08, 319.62, 110.68, 320.97);
            path0_0.curveTo(110.39, 322.27, 110.09, 323.58, 109.80, 324.88);
            path0_0.lineTo(109.52, 328.94);
            path0_0.curveTo(100.88, 331.42, 108.57, 338.68, 105.46, 342.78);
            path0_0.curveTo(105.28, 343.18, 105.09, 343.57, 104.91, 343.97);
            path0_0.curveTo(103.09, 345.65, 99.49, 347.90, 99.81, 348.92);
            path0_0.curveTo(100.65, 351.60, 103.19, 353.75, 105.05, 356.11);
            path0_0.curveTo(105.77, 356.50, 106.48, 356.90, 107.20, 357.29);
            path0_0.curveTo(105.02, 370.21, 102.84, 383.13, 100.65, 396.04);
            path0_0.curveTo(100.50, 397.38, 100.34, 398.73, 100.19, 400.07);
            path0_0.curveTo(100.20, 402.33, 100.21, 404.58, 100.22, 406.84);
            path0_0.curveTo(100.44, 407.57, 100.65, 408.31, 100.87, 409.04);
            path0_0.lineTo(100.78, 409.47);
            path0_0.lineTo(101.17, 409.68);
            path0_0.lineTo(101.31, 409.97);
            path0_0.curveTo(101.49, 410.36, 101.67, 410.75, 101.85, 411.13);
            path0_0.curveTo(107.66, 421.22, 113.47, 431.31, 119.28, 441.40);
            path0_0.curveTo(119.24, 441.61, 119.31, 441.78, 119.50, 441.89);
            path0_0.curveTo(120.29, 443.60, 121.07, 445.32, 121.86, 447.03);
            path0_0.curveTo(122.06, 447.34, 122.25, 447.65, 122.45, 447.95);
            path0_0.curveTo(123.60, 449.97, 124.76, 451.98, 125.91, 454.00);
            path0_0.curveTo(126.09, 454.31, 126.28, 454.62, 126.46, 454.93);
            path0_0.curveTo(126.88, 455.69, 127.31, 456.46, 127.73, 457.22);
            path0_0.curveTo(127.99, 457.78, 128.26, 458.35, 128.52, 458.91);
            path0_0.curveTo(129.38, 460.47, 130.24, 462.02, 131.10, 463.58);
            path0_0.curveTo(135.14, 469.74, 139.18, 475.90, 143.22, 482.05);
            path0_0.curveTo(143.46, 482.33, 143.69, 482.61, 143.93, 482.88);
            path0_0.curveTo(144.27, 483.32, 144.62, 483.75, 144.96, 484.19);
            path0_0.curveTo(145.20, 484.52, 145.43, 484.85, 145.67, 485.19);
            path0_0.curveTo(152.37, 494.24, 159.06, 503.28, 165.76, 512.33);
            path0_0.curveTo(165.76, 512.33, 165.47, 512.68, 165.47, 512.68);
            path0_0.curveTo(165.47, 516.05, 165.47, 519.42, 165.47, 522.80);
            path0_0.curveTo(165.03, 523.61, 164.59, 524.42, 164.15, 525.23);
            path0_0.curveTo(164.05, 525.79, 163.94, 526.35, 163.84, 526.91);
            path0_0.curveTo(162.28, 534.00, 160.71, 541.09, 159.15, 548.18);
            path0_0.curveTo(159.09, 548.68, 159.03, 549.17, 158.97, 549.67);
            path0_0.curveTo(158.08, 554.03, 157.18, 558.39, 156.29, 562.76);
            path0_0.curveTo(156.16, 563.48, 156.02, 564.19, 155.89, 564.91);
            path0_0.curveTo(152.96, 576.58, 150.02, 588.24, 147.09, 599.91);
            path0_0.lineTo(147.06, 599.90);
            path0_0.moveTo(125.31, 58.14);
            path0_0.curveTo(116.65, 49.50, 123.26, 35.85, 115.85, 27.01);
            path0_0.curveTo(111.91, 22.32, 110.56, 9.72, 104.71, 13.56);
            path0_0.curveTo(95.08, 19.88, 109.12, 24.72, 109.88, 30.24);
            path0_0.curveTo(111.50, 41.99, 131.06, 56.88, 105.63, 66.14);
            path0_0.curveTo(103.17, 67.03, 94.10, 71.25, 99.66, 78.99);
            path0_0.curveTo(105.12, 86.60, 103.93, 95.37, 103.81, 103.93);
            path0_0.curveTo(103.79, 105.53, 103.41, 107.12, 103.19, 108.71);
            path0_0.curveTo(105.01, 108.13, 107.10, 107.93, 108.62, 106.91);
            path0_0.curveTo(126.30, 95.01, 118.03, 74.30, 125.30, 58.14);
            path0_0.lineTo(125.31, 58.14);
            path0_0.moveTo(78.97, 459.38);
            path0_0.curveTo(80.51, 459.96, 84.62, 461.63, 84.67, 461.52);
            path0_0.curveTo(87.35, 455.40, 90.10, 449.23, 91.78, 442.80);
            path0_0.curveTo(92.24, 441.02, 89.41, 438.38, 88.09, 436.13);
            path0_0.curveTo(85.49, 442.76, 82.89, 449.39, 78.97, 459.38);
            path0_0.lineTo(78.97, 459.38);
            path0_0.moveTo(100.98, 270.18);
            path0_0.curveTo(101.21, 263.56, 97.79, 262.84, 94.52, 262.26);
            path0_0.curveTo(93.98, 262.17, 92.42, 263.94, 92.57, 264.56);
            path0_0.curveTo(93.47, 268.34, 94.72, 272.03, 95.85, 275.75);
            path0_0.curveTo(97.92, 273.50, 99.99, 271.26, 100.98, 270.18);
            path0_0.moveTo(157.64, 37.25);
            path0_0.curveTo(155.72, 34.85, 154.72, 33.59, 153.71, 32.34);
            path0_0.curveTo(151.56, 35.71, 149.35, 39.04, 147.41, 42.52);
            path0_0.curveTo(147.29, 42.73, 150.04, 44.96, 150.17, 44.84);
            path0_0.curveTo(152.62, 42.59, 154.88, 40.14, 157.63, 37.25);
            path0_0.lineTo(157.64, 37.25);
            path0_0.moveTo(67.15, 27.16);
            path0_0.curveTo(66.24, 24.74, 65.42, 22.58, 64.61, 20.42);
            path0_0.curveTo(63.77, 22.22, 62.33, 24.00, 62.29, 25.81);
            path0_0.curveTo(62.26, 27.36, 63.85, 28.95, 64.72, 30.52);
            path0_0.curveTo(65.50, 29.44, 66.29, 28.35, 67.15, 27.16);
            path0_0.lineTo(67.15, 27.16);
            path0_0.moveTo(153.63, 21.95);
            path0_0.curveTo(152.94, 20.04, 152.32, 18.35, 151.71, 16.67);
            path0_0.curveTo(150.83, 18.24, 149.22, 19.83, 149.26, 21.37);
            path0_0.curveTo(149.31, 23.16, 150.80, 24.91, 151.67, 26.68);
            path0_0.curveTo(152.30, 25.15, 152.93, 23.62, 153.63, 21.94);
            path0_0.lineTo(153.63, 21.95);
            path0_0.fill(g2);
        }

        {
            BirbPath path0_1 = new BirbPath();
            path0_1.setFillColor(new Color(235, 236, 238));
            path0_1.moveTo(200.04, 130.05);
            path0_1.curveTo(195.26, 122.77, 189.98, 115.75, 185.88, 108.10);
            path0_1.curveTo(183.57, 103.79, 197.96, 105.09, 190.41, 96.70);
            path0_1.curveTo(184.34, 89.95, 179.63, 81.91, 174.74, 74.18);
            path0_1.curveTo(170.72, 67.82, 162.06, 61.16, 174.80, 54.42);
            path0_1.curveTo(176.06, 53.75, 176.77, 49.25, 175.82, 47.68);
            path0_1.curveTo(172.66, 42.47, 168.71, 37.72, 164.87, 32.94);
            path0_1.curveTo(164.13, 32.02, 161.55, 31.85, 161.50, 31.21);
            path0_1.curveTo(160.67, 20.27, 159.04, 9.60, 153.06, 0.08);
            path0_1.curveTo(159.06, 0.08, 165.06, 0.08, 171.05, 0.08);
            path0_1.curveTo(174.98, 6.71, 179.35, 13.13, 182.66, 20.06);
            path0_1.curveTo(184.52, 23.96, 184.92, 24.95, 189.03, 21.94);
            path0_1.curveTo(206.70, 8.99, 184.58, 7.43, 183.05, 0.08);
            path0_1.curveTo(225.04, 0.08, 267.02, 0.08, 309.01, 0.08);
            path0_1.curveTo(307.74, 5.15, 303.69, 12.43, 305.67, 14.90);
            path0_1.curveTo(314.58, 26.03, 324.52, 36.61, 335.59, 45.54);
            path0_1.curveTo(338.92, 48.23, 347.09, 44.93, 353.04, 44.37);
            path0_1.curveTo(352.64, 43.14, 352.48, 41.00, 351.81, 40.82);
            path0_1.curveTo(342.84, 38.49, 346.48, 33.53, 348.63, 28.26);
            path0_1.curveTo(351.01, 22.42, 355.24, 25.84, 358.73, 25.50);
            path0_1.curveTo(374.22, 24.00, 376.55, 45.10, 391.40, 44.60);
            path0_1.curveTo(397.52, 44.40, 398.03, 47.67, 397.40, 52.57);
            path0_1.curveTo(396.45, 59.94, 386.08, 70.16, 396.65, 74.03);
            path0_1.curveTo(410.34, 79.04, 407.03, 87.95, 407.39, 96.92);
            path0_1.curveTo(407.58, 101.72, 399.20, 105.38, 405.42, 111.08);
            path0_1.curveTo(398.65, 116.60, 420.04, 127.76, 401.47, 131.05);
            path0_1.curveTo(401.40, 131.06, 401.34, 133.32, 401.87, 134.14);
            path0_1.curveTo(403.30, 136.38, 404.92, 138.56, 406.82, 140.39);
            path0_1.curveTo(407.15, 140.70, 410.33, 139.22, 410.36, 138.50);
            path0_1.curveTo(410.80, 127.00, 420.70, 115.53, 410.59, 103.89);
            path0_1.curveTo(409.67, 102.83, 410.16, 100.56, 410.00, 98.85);
            path0_1.curveTo(411.19, 98.96, 412.65, 98.67, 413.53, 99.25);
            path0_1.curveTo(424.32, 106.35, 433.55, 105.67, 440.82, 97.21);
            path0_1.curveTo(441.48, 96.44, 443.20, 96.59, 443.86, 95.83);
            path0_1.curveTo(449.81, 88.97, 457.30, 96.71, 463.97, 93.39);
            path0_1.curveTo(478.74, 86.02, 478.39, 80.80, 462.63, 76.02);
            path0_1.curveTo(461.56, 75.70, 461.51, 72.06, 460.97, 69.97);
            path0_1.curveTo(458.31, 59.75, 461.03, 44.32, 441.52, 50.48);
            path0_1.curveTo(439.72, 51.05, 434.81, 47.97, 434.53, 46.12);
            path0_1.curveTo(433.18, 37.01, 427.40, 35.42, 419.66, 34.93);
            path0_1.curveTo(411.08, 34.39, 402.21, 31.47, 397.79, 24.30);
            path0_1.curveTo(392.95, 16.45, 402.73, 13.21, 406.40, 8.07);
            path0_1.curveTo(408.18, 5.58, 409.48, 2.75, 410.99, 0.07);
            path0_1.curveTo(420.32, 0.07, 429.65, 0.07, 438.98, 0.07);
            path0_1.curveTo(435.59, 12.50, 446.26, 7.94, 450.69, 8.67);
            path0_1.curveTo(457.45, 9.79, 454.05, 3.32, 454.98, 0.07);
            path0_1.lineTo(460.98, 0.07);
            path0_1.curveTo(466.36, 8.50, 462.84, 24.16, 476.82, 24.70);
            path0_1.curveTo(482.49, 24.92, 488.32, 17.97, 493.45, 26.58);
            path0_1.curveTo(493.91, 27.36, 495.79, 27.29, 497.01, 27.62);
            path0_1.curveTo(496.48, 26.42, 495.98, 25.21, 495.42, 24.03);
            path0_1.curveTo(491.61, 16.04, 487.79, 8.06, 483.97, 0.07);
            path0_1.curveTo(488.97, 0.07, 493.97, 0.07, 498.97, 0.07);
            path0_1.curveTo(513.95, 5.68, 514.65, 16.60, 515.77, 31.44);
            path0_1.curveTo(517.35, 52.51, 529.41, 50.79, 543.45, 37.58);
            path0_1.curveTo(550.19, 31.24, 548.13, 18.63, 560.14, 16.74);
            path0_1.curveTo(563.56, 16.20, 566.55, 12.90, 569.73, 10.87);
            path0_1.curveTo(562.04, 10.68, 562.57, 5.32, 562.95, 0.06);
            path0_1.curveTo(574.28, 0.06, 585.61, -0.02, 596.94, 0.19);
            path0_1.curveTo(597.96, 0.21, 598.94, 2.06, 599.94, 3.06);
            path0_1.curveTo(598.44, 3.65, 596.94, 4.23, 595.44, 4.82);
            path0_1.curveTo(596.94, 5.57, 598.44, 6.31, 599.94, 7.06);
            path0_1.lineTo(599.94, 56.05);
            path0_1.curveTo(586.99, 56.26, 585.40, 76.39, 568.79, 72.83);
            path0_1.curveTo(563.03, 71.59, 557.40, 87.27, 546.68, 78.30);
            path0_1.curveTo(544.76, 76.69, 541.70, 76.43, 539.17, 75.55);
            path0_1.curveTo(539.31, 80.66, 537.59, 87.01, 539.99, 90.59);
            path0_1.curveTo(544.04, 96.61, 549.92, 103.03, 556.45, 105.44);
            path0_1.curveTo(570.46, 110.61, 585.38, 113.32, 599.93, 117.04);
            path0_1.lineTo(599.93, 132.04);
            path0_1.curveTo(598.47, 132.67, 597.02, 133.30, 595.56, 133.93);
            path0_1.curveTo(597.02, 134.30, 598.47, 134.67, 599.93, 135.04);
            path0_1.lineTo(599.93, 139.04);
            path0_1.curveTo(594.77, 138.02, 592.15, 141.30, 593.29, 145.28);
            path0_1.curveTo(594.48, 149.42, 590.07, 157.63, 599.93, 157.04);
            path0_1.lineTo(599.93, 193.03);
            path0_1.curveTo(593.10, 193.13, 587.60, 190.99, 584.46, 184.35);
            path0_1.curveTo(584.02, 183.42, 581.89, 182.35, 581.13, 182.69);
            path0_1.curveTo(579.41, 183.46, 578.06, 185.05, 576.56, 186.31);
            path0_1.curveTo(577.52, 187.22, 578.37, 188.29, 579.45, 189.01);
            path0_1.curveTo(585.21, 192.84, 590.54, 197.18, 588.75, 205.01);
            path0_1.curveTo(587.18, 211.90, 581.07, 208.16, 576.98, 209.00);
            path0_1.curveTo(568.07, 210.84, 559.05, 212.17, 550.22, 214.33);
            path0_1.curveTo(545.24, 215.55, 546.91, 220.37, 547.13, 223.71);
            path0_1.curveTo(547.27, 225.81, 549.40, 229.65, 550.23, 229.55);
            path0_1.curveTo(560.75, 228.20, 563.79, 207.69, 580.39, 218.67);
            path0_1.curveTo(583.59, 220.79, 593.25, 213.15, 599.93, 210.02);
            path0_1.lineTo(599.93, 245.01);
            path0_1.curveTo(594.51, 250.06, 587.46, 230.22, 583.14, 245.92);
            path0_1.curveTo(581.65, 251.34, 582.53, 257.41, 582.33, 263.18);
            path0_1.curveTo(586.74, 260.04, 591.09, 256.79, 595.62, 253.83);
            path0_1.curveTo(596.75, 253.09, 598.48, 253.26, 599.93, 253.01);
            path0_1.lineTo(599.93, 271.00);
            path0_1.curveTo(595.08, 273.54, 588.55, 273.14, 585.94, 279.58);
            path0_1.curveTo(578.77, 297.26, 599.64, 316.46, 582.98, 333.61);
            path0_1.curveTo(582.73, 333.87, 583.11, 334.67, 582.90, 335.06);
            path0_1.curveTo(582.12, 336.55, 581.22, 337.97, 580.37, 339.42);
            path0_1.curveTo(579.32, 337.50, 577.08, 335.35, 577.41, 333.71);
            path0_1.curveTo(580.43, 318.66, 561.39, 321.98, 559.20, 311.48);
            path0_1.curveTo(558.07, 311.92, 556.33, 312.03, 555.90, 312.84);
            path0_1.curveTo(551.81, 320.54, 554.28, 327.64, 558.28, 334.51);
            path0_1.curveTo(559.12, 335.94, 560.85, 337.24, 560.92, 338.67);
            path0_1.curveTo(561.23, 344.65, 562.24, 351.01, 560.58, 356.51);
            path0_1.curveTo(559.74, 359.31, 553.03, 362.92, 550.27, 362.05);
            path0_1.curveTo(543.04, 359.76, 546.30, 352.04, 544.77, 346.64);
            path0_1.curveTo(543.91, 343.61, 541.76, 340.68, 539.48, 338.41);
            path0_1.curveTo(537.03, 335.97, 533.56, 334.57, 530.89, 332.31);
            path0_1.curveTo(527.73, 329.63, 527.63, 326.58, 531.54, 324.41);
            path0_1.curveTo(534.44, 322.81, 537.60, 321.68, 540.64, 320.34);
            path0_1.curveTo(537.13, 319.50, 533.26, 317.30, 530.17, 318.10);
            path0_1.curveTo(522.32, 320.14, 524.98, 316.07, 524.44, 311.58);
            path0_1.curveTo(523.70, 305.43, 518.83, 299.64, 512.26, 304.32);
            path0_1.curveTo(505.97, 308.81, 498.29, 318.19, 502.81, 324.12);
            path0_1.curveTo(507.64, 330.47, 510.81, 336.80, 513.64, 343.82);
            path0_1.curveTo(513.75, 344.10, 515.68, 343.34, 516.46, 343.71);
            path0_1.curveTo(519.19, 345.01, 523.60, 346.16, 524.08, 348.15);
            path0_1.curveTo(525.38, 353.63, 527.25, 361.05, 524.67, 364.78);
            path0_1.curveTo(522.13, 368.45, 522.74, 360.42, 519.74, 359.55);
            path0_1.curveTo(513.80, 357.81, 505.53, 361.64, 502.66, 352.49);
            path0_1.curveTo(501.46, 353.58, 499.05, 355.30, 499.24, 355.65);
            path0_1.curveTo(502.52, 361.85, 497.01, 368.40, 498.55, 373.03);
            path0_1.curveTo(501.70, 382.57, 487.68, 394.11, 508.18, 403.51);
            path0_1.curveTo(523.65, 410.60, 489.02, 412.24, 494.95, 426.66);
            path0_1.curveTo(495.01, 426.80, 492.76, 427.89, 491.58, 428.54);
            path0_1.curveTo(491.04, 427.07, 490.09, 425.62, 490.02, 424.13);
            path0_1.curveTo(489.25, 408.67, 486.06, 392.71, 488.88, 377.91);
            path0_1.curveTo(490.73, 368.22, 473.04, 354.78, 492.73, 349.26);
            path0_1.curveTo(504.72, 345.90, 507.39, 342.98, 500.58, 331.09);
            path0_1.curveTo(493.90, 319.42, 475.73, 309.87, 489.27, 291.64);
            path0_1.curveTo(490.62, 289.82, 486.38, 285.82, 482.73, 287.42);
            path0_1.curveTo(477.95, 289.51, 476.06, 287.95, 474.08, 283.59);
            path0_1.curveTo(470.76, 276.32, 467.35, 268.91, 462.74, 262.45);
            path0_1.curveTo(454.33, 250.67, 437.84, 239.68, 437.60, 228.10);
            path0_1.curveTo(437.12, 205.08, 429.32, 190.81, 409.97, 180.94);
            path0_1.curveTo(409.09, 180.49, 408.25, 178.56, 408.51, 177.62);
            path0_1.curveTo(408.85, 176.38, 411.30, 175.17, 411.10, 174.41);
            path0_1.curveTo(408.78, 165.57, 402.85, 160.59, 393.74, 160.26);
            path0_1.curveTo(390.95, 160.16, 387.90, 161.63, 385.32, 163.02);
            path0_1.curveTo(383.47, 164.02, 382.19, 166.09, 380.66, 167.68);
            path0_1.curveTo(379.68, 164.91, 377.64, 162.04, 377.90, 159.39);
            path0_1.curveTo(379.26, 145.58, 381.20, 131.83, 382.94, 118.06);
            path0_1.curveTo(383.18, 116.37, 383.41, 114.67, 383.65, 112.98);
            path0_1.curveTo(383.91, 112.68, 384.18, 112.39, 384.44, 112.09);
            path0_1.curveTo(389.64, 105.18, 394.24, 98.15, 389.31, 89.10);
            path0_1.curveTo(388.23, 86.66, 387.15, 84.23, 386.06, 81.79);
            path0_1.curveTo(385.46, 80.88, 384.86, 79.97, 384.25, 79.07);
            path0_1.curveTo(383.45, 77.90, 382.65, 76.73, 381.86, 75.56);
            path0_1.curveTo(381.24, 74.75, 380.61, 73.94, 379.99, 73.13);
            path0_1.lineTo(379.97, 73.11);
            path0_1.curveTo(379.60, 69.07, 377.45, 66.74, 373.37, 66.30);
            path0_1.curveTo(371.26, 64.88, 369.16, 63.46, 367.05, 62.04);
            path0_1.curveTo(366.16, 61.63, 365.27, 61.22, 364.38, 60.81);
            path0_1.curveTo(363.61, 60.52, 362.85, 60.23, 362.08, 59.94);
            path0_1.lineTo(356.41, 57.67);
            path0_1.curveTo(355.59, 57.18, 354.78, 56.69, 353.96, 56.20);
            path0_1.curveTo(351.94, 55.26, 349.92, 54.32, 347.90, 53.37);
            path0_1.curveTo(347.30, 53.19, 346.71, 53.01, 346.11, 52.83);
            path0_1.curveTo(345.39, 52.64, 344.68, 52.45, 343.96, 52.25);
            path0_1.curveTo(342.35, 51.76, 340.73, 51.26, 339.12, 50.77);
            path0_1.curveTo(338.40, 50.60, 337.68, 50.44, 336.96, 50.27);
            path0_1.curveTo(335.68, 50.08, 334.41, 49.90, 333.13, 49.71);
            path0_1.curveTo(332.41, 49.56, 331.68, 49.40, 330.96, 49.25);
            path0_1.curveTo(328.66, 49.05, 326.36, 48.85, 324.05, 48.65);
            path0_1.curveTo(323.39, 48.36, 322.74, 48.07, 322.08, 47.79);
            path0_1.curveTo(317.01, 45.18, 311.96, 45.08, 306.94, 47.92);
            path0_1.curveTo(305.96, 47.89, 304.99, 47.87, 304.01, 47.84);
            path0_1.curveTo(301.68, 37.59, 298.82, 27.43, 297.24, 17.06);
            path0_1.curveTo(296.45, 11.90, 295.83, 5.95, 290.52, 5.93);
            path0_1.curveTo(285.05, 5.91, 276.93, 7.95, 274.58, 11.86);
            path0_1.curveTo(267.27, 24.06, 261.48, 37.34, 256.57, 50.73);
            path0_1.curveTo(255.15, 54.61, 251.95, 62.93, 261.63, 64.45);
            path0_1.curveTo(261.51, 64.88, 261.38, 65.32, 261.26, 65.75);
            path0_1.curveTo(260.17, 66.71, 259.08, 67.67, 257.99, 68.62);
            path0_1.curveTo(257.42, 68.60, 256.86, 68.59, 256.29, 68.58);
            path0_1.curveTo(255.29, 67.93, 254.30, 67.28, 253.30, 66.63);
            path0_1.curveTo(252.93, 68.59, 252.55, 70.54, 252.18, 72.50);
            path0_1.curveTo(249.29, 76.32, 246.40, 80.14, 243.51, 83.96);
            path0_1.curveTo(242.94, 84.75, 242.38, 85.55, 241.81, 86.34);
            path0_1.curveTo(241.46, 86.90, 241.12, 87.47, 240.77, 88.03);
            path0_1.curveTo(240.45, 88.47, 240.13, 88.90, 239.81, 89.34);
            path0_1.curveTo(238.45, 92.89, 237.08, 96.44, 235.72, 100.00);
            path0_1.curveTo(235.54, 101.42, 235.35, 102.83, 235.17, 104.25);
            path0_1.lineTo(235.49, 112.16);
            path0_1.curveTo(235.65, 113.45, 235.82, 114.74, 235.98, 116.04);
            path0_1.lineTo(236.43, 118.13);
            path0_1.curveTo(236.62, 119.12, 236.81, 120.12, 237.00, 121.11);
            path0_1.curveTo(237.65, 125.11, 238.31, 129.12, 238.96, 133.12);
            path0_1.curveTo(239.32, 134.11, 239.67, 135.09, 240.03, 136.08);
            path0_1.curveTo(241.37, 137.77, 242.71, 139.45, 244.04, 141.14);
            path0_1.curveTo(244.53, 143.78, 245.01, 146.42, 245.50, 149.06);
            path0_1.curveTo(246.68, 150.58, 247.86, 152.10, 249.04, 153.62);
            path0_1.curveTo(250.65, 153.62, 252.26, 153.60, 253.88, 153.59);
            path0_1.curveTo(255.28, 155.79, 256.68, 157.98, 258.08, 160.18);
            path0_1.curveTo(258.08, 160.44, 258.09, 160.69, 258.08, 160.95);
            path0_1.lineTo(259.89, 169.06);
            path0_1.curveTo(259.03, 173.35, 258.17, 177.64, 257.31, 181.94);
            path0_1.curveTo(256.88, 183.03, 256.46, 184.11, 256.03, 185.20);
            path0_1.lineTo(247.60, 185.13);
            path0_1.curveTo(243.20, 168.83, 231.60, 154.26, 235.74, 135.86);
            path0_1.curveTo(235.78, 135.68, 233.66, 135.01, 232.56, 134.56);
            path0_1.curveTo(232.12, 136.04, 231.44, 137.50, 231.27, 139.01);
            path0_1.curveTo(230.13, 149.36, 229.10, 159.72, 228.04, 170.08);
            path0_1.curveTo(218.56, 161.83, 211.14, 153.02, 214.76, 138.83);
            path0_1.curveTo(215.81, 134.71, 213.02, 130.31, 207.05, 131.09);
            path0_1.curveTo(205.38, 128.19, 203.72, 125.28, 202.05, 122.38);
            path0_1.curveTo(201.38, 124.95, 200.72, 127.52, 200.05, 130.09);
            path0_1.lineTo(200.04, 130.05);
            path0_1.moveTo(531.93, 193.03);
            path0_1.curveTo(531.00, 197.45, 527.86, 203.15, 529.54, 206.05);
            path0_1.curveTo(535.23, 215.85, 538.07, 204.29, 541.39, 202.60);
            path0_1.curveTo(545.85, 200.33, 553.01, 196.19, 550.03, 189.14);
            path0_1.curveTo(548.20, 184.80, 543.10, 181.83, 539.48, 178.24);
            path0_1.curveTo(536.96, 181.84, 534.45, 185.43, 531.93, 189.03);
            path0_1.curveTo(523.04, 179.78, 511.98, 171.38, 512.37, 157.03);
            path0_1.curveTo(512.69, 145.21, 520.73, 132.88, 508.47, 122.43);
            path0_1.curveTo(507.57, 121.67, 507.85, 119.24, 507.98, 117.61);
            path0_1.curveTo(508.83, 106.48, 497.97, 115.02, 495.01, 109.99);
            path0_1.curveTo(494.66, 109.39, 490.61, 109.85, 490.43, 110.45);
            path0_1.curveTo(489.51, 113.57, 488.40, 117.08, 489.00, 120.13);
            path0_1.curveTo(491.47, 132.69, 494.82, 144.23, 490.16, 158.01);
            path0_1.curveTo(486.92, 167.58, 481.81, 184.02, 500.29, 188.17);
            path0_1.curveTo(504.37, 189.09, 508.84, 175.71, 514.82, 187.57);
            path0_1.curveTo(518.55, 194.97, 513.42, 200.11, 511.33, 206.16);
            path0_1.curveTo(510.27, 209.23, 510.20, 212.64, 509.68, 215.89);
            path0_1.curveTo(512.30, 215.00, 515.86, 214.89, 517.36, 213.07);
            path0_1.curveTo(522.60, 206.70, 527.14, 199.75, 531.94, 193.02);
            path0_1.lineTo(531.93, 193.03);
            path0_1.moveTo(478.93, 186.41);
            path0_1.curveTo(471.78, 198.12, 462.19, 200.08, 453.57, 202.66);
            path0_1.curveTo(447.36, 204.52, 444.41, 200.37, 444.33, 194.03);
            path0_1.curveTo(444.31, 192.52, 442.76, 191.02, 441.92, 189.52);
            path0_1.curveTo(441.55, 191.69, 441.31, 193.89, 440.81, 196.03);
            path0_1.curveTo(435.69, 217.93, 459.64, 212.24, 467.10, 222.68);
            path0_1.curveTo(468.86, 225.14, 480.63, 222.43, 486.11, 219.22);
            path0_1.curveTo(488.26, 217.96, 488.00, 206.64, 485.04, 203.64);
            path0_1.curveTo(474.32, 192.76, 481.01, 177.75, 482.36, 169.46);
            path0_1.curveTo(485.51, 150.09, 469.61, 148.70, 462.42, 141.56);
            path0_1.curveTo(457.33, 136.51, 460.49, 149.13, 457.06, 152.30);
            path0_1.curveTo(455.85, 153.42, 454.72, 154.68, 453.38, 155.62);
            path0_1.curveTo(451.07, 157.24, 446.74, 158.49, 446.59, 160.20);
            path0_1.curveTo(446.15, 164.91, 448.45, 168.53, 453.42, 171.04);
            path0_1.curveTo(461.84, 175.29, 469.65, 180.74, 478.94, 186.43);
            path0_1.lineTo(478.93, 186.41);
            path0_1.moveTo(496.15, 198.03);
            path0_1.curveTo(493.77, 206.91, 492.96, 208.50, 492.99, 210.07);
            path0_1.curveTo(493.17, 221.96, 481.28, 226.68, 477.54, 236.50);
            path0_1.curveTo(473.56, 246.95, 482.80, 252.77, 484.15, 261.30);
            path0_1.curveTo(485.58, 270.32, 495.12, 274.32, 501.47, 271.88);
            path0_1.curveTo(510.49, 268.42, 497.42, 266.59, 498.58, 262.37);
            path0_1.curveTo(499.02, 260.76, 497.91, 258.80, 498.00, 257.02);
            path0_1.curveTo(498.86, 240.32, 500.06, 223.62, 500.51, 206.91);
            path0_1.curveTo(500.58, 204.40, 497.29, 201.80, 495.55, 199.24);
            path0_1.curveTo(494.64, 201.06, 493.73, 202.89, 496.16, 198.02);
            path0_1.lineTo(496.15, 198.03);
            path0_1.moveTo(222.52, 108.94);
            path0_1.curveTo(218.96, 104.80, 216.52, 101.89, 214.01, 99.06);
            path0_1.curveTo(203.71, 87.44, 203.04, 66.99, 182.54, 64.78);
            path0_1.curveTo(180.88, 64.60, 179.16, 64.95, 177.47, 65.06);
            path0_1.curveTo(178.26, 66.50, 178.81, 68.98, 179.88, 69.23);
            path0_1.curveTo(197.76, 73.41, 195.91, 88.87, 199.53, 101.73);
            path0_1.curveTo(201.32, 108.08, 204.79, 115.88, 213.62, 115.61);
            path0_1.curveTo(216.34, 115.53, 218.94, 111.75, 222.53, 108.94);
            path0_1.lineTo(222.52, 108.94);
            path0_1.moveTo(254.80, 49.23);
            path0_1.curveTo(249.29, 40.34, 243.97, 31.73, 238.64, 23.13);
            path0_1.curveTo(234.15, 26.22, 229.65, 29.30, 225.16, 32.39);
            path0_1.curveTo(235.07, 39.57, 235.17, 55.93, 249.60, 58.46);
            path0_1.curveTo(250.61, 58.64, 252.59, 53.26, 254.80, 49.23);
            path0_1.lineTo(254.80, 49.23);
            path0_1.moveTo(503.06, 286.02);
            path0_1.curveTo(503.44, 286.52, 505.52, 288.14, 506.10, 290.19);
            path0_1.curveTo(509.28, 301.33, 527.40, 290.84, 527.85, 305.34);
            path0_1.curveTo(527.96, 309.05, 528.89, 312.10, 532.85, 311.71);
            path0_1.curveTo(536.87, 311.32, 538.26, 307.63, 537.07, 304.23);
            path0_1.curveTo(532.23, 290.41, 519.67, 284.66, 508.16, 278.27);
            path0_1.curveTo(504.91, 276.46, 502.72, 280.24, 503.06, 286.02);
            path0_1.moveTo(580.71, 149.38);
            path0_1.curveTo(586.91, 146.75, 588.25, 146.18, 589.59, 145.61);
            path0_1.curveTo(588.42, 144.74, 587.22, 143.90, 586.08, 142.99);
            path0_1.curveTo(585.03, 142.14, 583.15, 141.12, 583.23, 140.34);
            path0_1.curveTo(583.37, 138.96, 584.48, 137.38, 585.65, 136.49);
            path0_1.curveTo(587.03, 135.44, 588.90, 135.03, 590.55, 134.35);
            path0_1.curveTo(588.90, 133.05, 587.42, 131.33, 585.55, 130.55);
            path0_1.curveTo(580.87, 128.61, 576.10, 126.73, 571.18, 125.56);
            path0_1.curveTo(568.43, 124.91, 565.34, 125.73, 562.40, 125.88);
            path0_1.curveTo(574.24, 128.18, 564.98, 153.70, 580.70, 149.37);
            path0_1.lineTo(580.71, 149.38);
            path0_1.moveTo(465.41, 186.67);
            path0_1.curveTo(463.34, 177.87, 455.69, 176.36, 448.33, 175.28);
            path0_1.curveTo(446.23, 174.97, 443.69, 177.66, 441.35, 178.98);
            path0_1.curveTo(446.04, 183.78, 442.60, 194.41, 450.83, 195.41);
            path0_1.curveTo(455.40, 195.97, 464.00, 196.33, 465.41, 186.67);
            path0_1.lineTo(465.41, 186.67);
            path0_1.moveTo(466.00, 112.36);
            path0_1.curveTo(472.38, 113.85, 472.65, 107.00, 473.48, 102.06);
            path0_1.curveTo(473.75, 100.45, 469.79, 98.12, 467.76, 96.12);
            path0_1.curveTo(463.90, 100.15, 458.48, 103.58, 456.66, 108.38);
            path0_1.curveTo(455.10, 112.49, 460.89, 111.72, 465.99, 112.36);
            path0_1.lineTo(466.00, 112.36);
            path0_1.moveTo(225.39, 135.88);
            path0_1.curveTo(222.38, 129.53, 218.89, 123.44, 211.09, 121.40);
            path0_1.curveTo(210.77, 121.32, 209.57, 122.78, 209.71, 123.05);
            path0_1.curveTo(214.18, 131.67, 218.77, 140.23, 223.34, 148.80);
            path0_1.curveTo(223.99, 144.68, 224.64, 140.57, 225.38, 135.88);
            path0_1.lineTo(225.39, 135.88);
            path0_1.moveTo(585.05, 166.32);
            path0_1.curveTo(586.25, 165.59, 587.83, 164.64, 589.41, 163.68);
            path0_1.curveTo(588.48, 162.84, 587.25, 161.11, 586.65, 161.30);
            path0_1.curveTo(580.95, 163.17, 569.82, 160.13, 570.47, 166.42);
            path0_1.curveTo(571.17, 173.09, 579.08, 163.52, 585.05, 166.31);
            path0_1.lineTo(585.05, 166.32);
            path0_1.moveTo(576.26, 19.04);
            path0_1.curveTo(577.76, 22.46, 579.15, 25.64, 580.55, 28.83);
            path0_1.curveTo(582.57, 27.52, 584.59, 26.22, 586.61, 24.91);
            path0_1.curveTo(583.92, 22.08, 581.24, 19.25, 578.55, 16.42);
            path0_1.curveTo(577.92, 17.14, 577.28, 17.87, 576.26, 19.04);
            path0_1.lineTo(576.26, 19.04);
            path0_1.moveTo(492.99, 86.33);
            path0_1.curveTo(491.14, 89.13, 489.09, 90.85, 489.29, 92.25);
            path0_1.curveTo(489.62, 94.54, 491.41, 96.63, 492.59, 98.80);
            path0_1.curveTo(494.35, 96.88, 496.96, 95.19, 497.54, 92.97);
            path0_1.curveTo(497.90, 91.58, 495.20, 89.39, 492.99, 86.33);
            path0_1.moveTo(170.47, 23.00);
            path0_1.curveTo(172.80, 20.39, 174.22, 18.81, 175.63, 17.22);
            path0_1.curveTo(173.72, 16.01, 171.91, 14.18, 169.86, 13.85);
            path0_1.curveTo(168.83, 13.69, 166.49, 16.18, 166.36, 17.62);
            path0_1.curveTo(166.24, 18.90, 168.36, 20.39, 170.47, 23.00);
            path0_1.lineTo(170.47, 23.00);
            path0_1.moveTo(519.89, 60.89);
            path0_1.curveTo(521.85, 63.60, 523.42, 65.76, 524.98, 67.92);
            path0_1.curveTo(525.93, 66.57, 527.96, 64.74, 527.62, 63.98);
            path0_1.curveTo(526.65, 61.82, 524.71, 60.10, 523.15, 58.21);
            path0_1.curveTo(522.31, 58.90, 521.47, 59.60, 519.89, 60.90);
            path0_1.lineTo(519.89, 60.89);
            path0_1.moveTo(518.88, 168.50);
            path0_1.curveTo(520.10, 170.46, 521.16, 172.16, 522.22, 173.86);
            path0_1.curveTo(523.08, 172.84, 524.81, 171.63, 524.64, 170.83);
            path0_1.curveTo(524.09, 168.27, 522.84, 165.85, 521.86, 163.38);
            path0_1.curveTo(520.99, 164.87, 520.13, 166.35, 518.88, 168.50);
            path0_1.lineTo(518.88, 168.50);
            path0_1.moveTo(592.58, 35.36);
            path0_1.curveTo(591.72, 37.19, 590.90, 38.13, 591.12, 38.59);
            path0_1.curveTo(591.96, 40.40, 593.14, 42.05, 594.19, 43.77);
            path0_1.curveTo(594.75, 42.93, 595.93, 41.88, 595.74, 41.29);
            path0_1.curveTo(595.16, 39.54, 594.04, 37.97, 592.59, 35.36);
            path0_1.lineTo(592.58, 35.36);
            path0_1.moveTo(508.55, 234.14);
            path0_1.curveTo(507.52, 235.92, 506.31, 237.09, 506.53, 237.89);
            path0_1.curveTo(506.76, 238.76, 508.24, 239.65, 509.30, 239.82);
            path0_1.curveTo(509.98, 239.93, 510.86, 238.76, 511.66, 238.16);
            path0_1.curveTo(510.82, 237.07, 509.99, 235.98, 508.56, 234.13);
            path0_1.lineTo(508.55, 234.14);
            path0_1.moveTo(310.69, 37.68);
            path0_1.curveTo(309.69, 38.45, 309.01, 38.97, 308.34, 39.49);
            path0_1.curveTo(309.61, 40.28, 310.81, 41.28, 312.19, 41.75);
            path0_1.curveTo(312.73, 41.94, 313.68, 40.94, 314.44, 40.48);
            path0_1.curveTo(313.25, 39.59, 312.06, 38.70, 310.69, 37.68);
            path0_1.moveTo(303.83, 26.60);
            path0_1.curveTo(303.19, 28.11, 302.36, 29.29, 302.61, 29.59);
            path0_1.curveTo(303.39, 30.52, 304.56, 31.11, 305.59, 31.83);
            path0_1.curveTo(305.97, 31.21, 306.82, 30.33, 306.65, 30.01);
            path0_1.curveTo(306.07, 28.95, 305.12, 28.09, 303.84, 26.60);
            path0_1.lineTo(303.83, 26.60);
            path0_1.moveTo(502.88, 301.21);
            path0_1.curveTo(503.75, 299.98, 504.66, 299.26, 504.62, 298.60);
            path0_1.curveTo(504.57, 297.82, 503.70, 297.09, 503.18, 296.33);
            path0_1.curveTo(502.51, 296.80, 501.25, 297.34, 501.30, 297.73);
            path0_1.curveTo(501.42, 298.73, 502.12, 299.65, 502.88, 301.21);
            path0_1.moveTo(428.10, 153.87);
            path0_1.curveTo(426.99, 153.18, 426.30, 152.52, 425.51, 152.37);
            path0_1.curveTo(425.19, 152.31, 424.18, 153.64, 424.31, 153.85);
            path0_1.curveTo(424.73, 154.56, 425.44, 155.26, 426.19, 155.51);
            path0_1.curveTo(426.52, 155.62, 427.22, 154.66, 428.10, 153.87);
            path0_1.lineTo(428.10, 153.87);
            path0_1.moveTo(405.15, 145.58);
            path0_1.curveTo(405.25, 145.34, 405.37, 145.10, 405.42, 144.85);
            path0_1.curveTo(405.43, 144.79, 405.15, 144.59, 405.10, 144.62);
            path0_1.curveTo(404.88, 144.75, 404.70, 144.94, 404.51, 145.10);
            path0_1.curveTo(404.71, 145.26, 404.91, 145.43, 405.15, 145.58);
            path0_1.fill(g2);
        }

        {
            BirbPath path0_2 = new BirbPath();
            path0_2.setFillColor(new Color(232, 233, 235));
            path0_2.moveTo(382.91, 118.03);
            path0_2.curveTo(381.17, 131.80, 379.23, 145.55, 377.87, 159.36);
            path0_2.curveTo(377.61, 162.01, 379.65, 164.88, 380.63, 167.65);
            path0_2.curveTo(382.16, 166.06, 383.44, 163.99, 385.29, 162.99);
            path0_2.curveTo(387.87, 161.60, 390.92, 160.13, 393.71, 160.23);
            path0_2.curveTo(402.82, 160.56, 408.75, 165.55, 411.07, 174.38);
            path0_2.curveTo(411.27, 175.14, 408.82, 176.35, 408.48, 177.59);
            path0_2.curveTo(408.22, 178.53, 409.06, 180.46, 409.94, 180.91);
            path0_2.curveTo(429.30, 190.79, 437.09, 205.05, 437.57, 228.07);
            path0_2.curveTo(437.81, 239.65, 454.30, 250.64, 462.71, 262.42);
            path0_2.curveTo(467.32, 268.88, 470.74, 276.29, 474.05, 283.56);
            path0_2.curveTo(476.04, 287.92, 477.93, 289.48, 482.70, 287.39);
            path0_2.curveTo(486.36, 285.79, 490.60, 289.78, 489.24, 291.61);
            path0_2.curveTo(475.70, 309.84, 493.87, 319.39, 500.55, 331.06);
            path0_2.curveTo(507.36, 342.95, 504.68, 345.87, 492.70, 349.23);
            path0_2.curveTo(473.01, 354.75, 490.70, 368.19, 488.85, 377.88);
            path0_2.curveTo(486.03, 392.68, 489.23, 408.64, 489.99, 424.10);
            path0_2.curveTo(490.06, 425.59, 491.01, 427.04, 491.55, 428.51);
            path0_2.curveTo(492.72, 427.86, 494.97, 426.77, 494.92, 426.63);
            path0_2.curveTo(488.98, 412.21, 523.62, 410.57, 508.15, 403.48);
            path0_2.curveTo(487.65, 394.08, 501.67, 382.54, 498.52, 373.00);
            path0_2.curveTo(496.99, 368.37, 502.50, 361.82, 499.21, 355.62);
            path0_2.curveTo(499.02, 355.27, 501.43, 353.54, 502.63, 352.46);
            path0_2.curveTo(505.50, 361.62, 513.77, 357.79, 519.71, 359.52);
            path0_2.curveTo(522.71, 360.40, 522.10, 368.43, 524.64, 364.75);
            path0_2.curveTo(527.22, 361.02, 525.36, 353.60, 524.05, 348.12);
            path0_2.curveTo(523.58, 346.13, 519.16, 344.98, 516.43, 343.68);
            path0_2.curveTo(515.65, 343.31, 513.72, 344.07, 513.61, 343.79);
            path0_2.curveTo(510.79, 336.77, 507.62, 330.44, 502.78, 324.09);
            path0_2.curveTo(498.26, 318.16, 505.94, 308.77, 512.23, 304.29);
            path0_2.curveTo(518.80, 299.61, 523.67, 305.40, 524.41, 311.55);
            path0_2.curveTo(524.95, 316.04, 522.29, 320.10, 530.14, 318.07);
            path0_2.curveTo(533.23, 317.27, 537.10, 319.47, 540.61, 320.31);
            path0_2.curveTo(537.57, 321.65, 534.41, 322.78, 531.51, 324.38);
            path0_2.curveTo(527.60, 326.54, 527.70, 329.59, 530.86, 332.28);
            path0_2.curveTo(533.53, 334.55, 537.00, 335.94, 539.45, 338.38);
            path0_2.curveTo(541.73, 340.65, 543.88, 343.59, 544.74, 346.61);
            path0_2.curveTo(546.27, 352.01, 543.01, 359.73, 550.24, 362.02);
            path0_2.curveTo(552.99, 362.89, 559.70, 359.28, 560.55, 356.48);
            path0_2.curveTo(562.21, 350.99, 561.20, 344.62, 560.89, 338.64);
            path0_2.curveTo(560.82, 337.21, 559.09, 335.91, 558.25, 334.48);
            path0_2.curveTo(554.24, 327.61, 551.78, 320.51, 555.87, 312.81);
            path0_2.curveTo(556.30, 312.00, 558.04, 311.89, 559.17, 311.45);
            path0_2.curveTo(561.36, 321.95, 580.40, 318.63, 577.38, 333.68);
            path0_2.curveTo(577.05, 335.32, 579.29, 337.48, 580.34, 339.39);
            path0_2.curveTo(581.19, 337.94, 582.09, 336.52, 582.87, 335.03);
            path0_2.curveTo(583.08, 334.64, 582.70, 333.84, 582.95, 333.58);
            path0_2.curveTo(599.61, 316.43, 578.73, 297.24, 585.91, 279.55);
            path0_2.curveTo(588.52, 273.11, 595.05, 273.51, 599.90, 270.97);
            path0_2.curveTo(599.90, 379.27, 599.88, 487.57, 600.00, 595.87);
            path0_2.curveTo(600.00, 599.29, 599.33, 599.98, 595.91, 599.97);
            path0_2.curveTo(546.93, 599.83, 497.94, 599.87, 448.96, 599.87);
            path0_2.curveTo(447.59, 582.83, 446.21, 565.78, 444.84, 548.74);
            path0_2.curveTo(449.57, 539.29, 454.30, 529.85, 459.04, 520.40);
            path0_2.curveTo(459.76, 519.70, 460.48, 518.99, 461.20, 518.29);
            path0_2.curveTo(462.79, 517.82, 464.38, 517.35, 465.97, 516.88);
            path0_2.curveTo(466.96, 516.62, 467.95, 516.37, 468.94, 516.11);
            path0_2.curveTo(469.40, 515.71, 469.86, 515.31, 470.32, 514.91);
            path0_2.curveTo(470.57, 514.48, 470.83, 514.04, 471.08, 513.61);
            path0_2.curveTo(471.46, 513.04, 471.85, 512.47, 472.23, 511.90);
            path0_2.curveTo(472.99, 510.60, 473.75, 509.30, 474.51, 508.00);
            path0_2.curveTo(474.66, 507.06, 474.81, 506.12, 474.96, 505.18);
            path0_2.curveTo(474.92, 503.98, 474.88, 502.79, 474.84, 501.59);
            path0_2.curveTo(475.50, 496.64, 471.36, 496.07, 468.35, 494.47);
            path0_2.curveTo(472.32, 478.72, 476.29, 462.98, 480.27, 447.23);
            path0_2.curveTo(480.42, 446.80, 480.58, 446.37, 480.73, 445.94);
            path0_2.curveTo(481.19, 444.30, 481.65, 442.65, 482.10, 441.01);
            path0_2.curveTo(482.40, 440.00, 482.70, 438.99, 483.01, 437.98);
            path0_2.curveTo(483.32, 436.92, 483.63, 435.85, 483.93, 434.79);
            path0_2.lineTo(485.08, 427.98);
            path0_2.curveTo(485.35, 425.95, 485.63, 423.92, 485.90, 421.88);
            path0_2.curveTo(486.01, 420.52, 486.13, 419.17, 486.24, 417.81);
            path0_2.curveTo(486.27, 416.56, 486.30, 415.30, 486.33, 414.05);
            path0_2.curveTo(485.87, 401.33, 485.40, 388.61, 484.94, 375.90);
            path0_2.curveTo(484.32, 373.25, 483.69, 370.59, 483.07, 367.94);
            path0_2.lineTo(483.01, 367.83);
            path0_2.curveTo(482.83, 367.50, 482.66, 367.18, 482.48, 366.85);
            path0_2.curveTo(482.28, 364.88, 482.08, 362.90, 481.88, 360.93);
            path0_2.lineTo(481.17, 357.95);
            path0_2.curveTo(474.01, 342.14, 464.24, 358.63, 456.02, 355.92);
            path0_2.lineTo(449.96, 355.97);
            path0_2.curveTo(452.07, 345.07, 455.64, 334.23, 451.50, 323.04);
            path0_2.curveTo(450.91, 321.45, 450.17, 319.90, 449.50, 318.34);
            path0_2.curveTo(448.91, 319.90, 448.36, 321.48, 447.73, 323.03);
            path0_2.curveTo(446.36, 326.44, 444.96, 329.85, 443.57, 333.25);
            path0_2.curveTo(442.73, 330.14, 441.67, 327.07, 441.08, 323.91);
            path0_2.curveTo(439.16, 313.61, 428.48, 326.86, 426.03, 318.24);
            path0_2.curveTo(425.36, 318.98, 424.09, 319.75, 424.12, 320.45);
            path0_2.curveTo(424.47, 327.06, 425.68, 333.68, 425.42, 340.26);
            path0_2.curveTo(424.90, 353.45, 434.75, 367.01, 421.11, 379.97);
            path0_2.curveTo(413.74, 386.97, 410.33, 376.86, 404.22, 380.02);
            path0_2.curveTo(389.27, 387.77, 403.30, 399.70, 399.00, 408.70);
            path0_2.curveTo(398.25, 410.27, 397.74, 411.96, 397.11, 413.60);
            path0_2.curveTo(396.07, 412.10, 394.68, 410.72, 394.04, 409.06);
            path0_2.curveTo(392.30, 404.55, 389.18, 401.07, 384.45, 402.32);
            path0_2.curveTo(379.47, 403.64, 383.14, 407.74, 383.32, 410.72);
            path0_2.curveTo(383.42, 412.33, 382.92, 413.97, 382.69, 415.60);
            path0_2.curveTo(381.23, 414.21, 379.20, 413.10, 378.41, 411.40);
            path0_2.curveTo(370.67, 394.77, 348.10, 384.81, 340.63, 395.03);
            path0_2.curveTo(323.67, 418.23, 305.10, 439.99, 283.93, 459.46);
            path0_2.curveTo(281.62, 461.58, 279.35, 466.92, 275.33, 462.00);
            path0_2.curveTo(272.23, 458.21, 269.61, 453.99, 276.25, 449.88);
            path0_2.curveTo(279.49, 447.87, 281.23, 443.43, 283.65, 440.09);
            path0_2.curveTo(279.72, 440.83, 275.43, 440.82, 271.93, 442.47);
            path0_2.curveTo(263.43, 446.50, 259.26, 440.77, 255.05, 435.53);
            path0_2.curveTo(254.30, 434.59, 255.45, 430.76, 256.83, 429.67);
            path0_2.curveTo(272.31, 417.47, 288.22, 405.81, 303.56, 393.45);
            path0_2.curveTo(313.28, 385.62, 313.70, 373.23, 316.66, 362.24);
            path0_2.curveTo(316.78, 361.80, 314.28, 360.65, 313.00, 359.84);
            path0_2.curveTo(315.34, 357.21, 317.67, 354.58, 320.01, 351.95);
            path0_2.curveTo(322.17, 351.44, 324.33, 350.93, 326.50, 350.42);
            path0_2.curveTo(324.30, 363.46, 325.89, 371.20, 340.63, 360.49);
            path0_2.curveTo(348.81, 380.80, 364.12, 368.59, 377.25, 369.73);
            path0_2.curveTo(392.28, 371.04, 403.60, 364.32, 408.47, 354.40);
            path0_2.curveTo(413.42, 344.31, 398.97, 338.07, 392.87, 330.22);
            path0_2.curveTo(391.69, 328.70, 391.35, 326.53, 390.62, 324.66);
            path0_2.curveTo(392.44, 325.29, 394.65, 325.48, 396.03, 326.64);
            path0_2.curveTo(402.22, 331.87, 408.14, 337.43, 414.26, 342.73);
            path0_2.curveTo(415.20, 343.55, 416.74, 343.68, 418.00, 344.14);
            path0_2.curveTo(417.71, 342.66, 417.87, 340.86, 417.07, 339.76);
            path0_2.curveTo(407.06, 326.01, 415.11, 303.94, 431.75, 300.07);
            path0_2.curveTo(441.55, 297.79, 442.67, 291.40, 440.76, 282.89);
            path0_2.curveTo(439.89, 279.02, 440.21, 274.88, 439.99, 270.86);
            path0_2.curveTo(440.64, 271.30, 441.79, 271.67, 441.86, 272.18);
            path0_2.curveTo(442.53, 277.78, 447.87, 276.68, 451.01, 278.69);
            path0_2.curveTo(451.99, 275.63, 454.23, 272.36, 453.74, 269.56);
            path0_2.curveTo(452.01, 259.72, 447.35, 248.52, 437.47, 248.36);
            path0_2.curveTo(429.20, 248.22, 438.06, 259.70, 434.02, 265.00);
            path0_2.curveTo(433.28, 265.97, 432.66, 267.04, 431.98, 268.06);
            path0_2.curveTo(431.44, 262.67, 427.19, 261.93, 423.11, 260.96);
            path0_2.curveTo(416.26, 257.82, 409.68, 258.77, 403.26, 262.26);
            path0_2.curveTo(402.84, 264.15, 402.43, 266.04, 402.01, 267.94);
            path0_2.curveTo(395.88, 257.83, 388.18, 269.23, 381.36, 266.64);
            path0_2.curveTo(380.61, 266.35, 377.78, 269.35, 377.19, 271.22);
            path0_2.curveTo(375.05, 278.00, 373.39, 284.88, 363.99, 284.06);
            path0_2.curveTo(362.71, 282.03, 361.43, 280.01, 360.15, 277.98);
            path0_2.curveTo(359.83, 277.91, 359.72, 277.71, 359.80, 277.40);
            path0_2.curveTo(359.29, 276.59, 358.77, 275.77, 358.26, 274.96);
            path0_2.curveTo(355.92, 268.29, 353.59, 261.62, 351.25, 254.95);
            path0_2.lineTo(350.78, 252.90);
            path0_2.curveTo(350.69, 251.31, 350.60, 249.72, 350.51, 248.13);
            path0_2.curveTo(350.61, 247.41, 350.70, 246.70, 350.80, 245.98);
            path0_2.curveTo(351.04, 243.70, 351.28, 241.41, 351.51, 239.13);
            path0_2.curveTo(351.58, 238.41, 351.65, 237.69, 351.72, 236.98);
            path0_2.curveTo(352.00, 234.37, 352.28, 231.76, 352.55, 229.14);
            path0_2.curveTo(352.99, 228.42, 353.44, 227.70, 353.88, 226.98);
            path0_2.curveTo(369.29, 237.79, 385.35, 219.91, 401.30, 228.21);
            path0_2.curveTo(407.00, 231.18, 414.65, 230.40, 421.42, 231.29);
            path0_2.curveTo(422.33, 231.41, 423.27, 231.34, 424.20, 231.36);
            path0_2.curveTo(423.86, 230.90, 423.60, 230.16, 423.16, 230.03);
            path0_2.curveTo(406.91, 225.13, 390.64, 220.28, 374.37, 215.43);
            path0_2.curveTo(372.27, 214.14, 370.18, 212.85, 368.08, 211.57);
            path0_2.curveTo(368.00, 211.09, 367.92, 210.62, 367.84, 210.14);
            path0_2.curveTo(372.91, 199.14, 362.79, 190.48, 362.94, 179.82);
            path0_2.curveTo(363.01, 175.04, 355.83, 180.67, 351.91, 179.99);
            path0_2.curveTo(355.33, 176.41, 358.74, 172.83, 362.16, 169.24);
            path0_2.curveTo(362.50, 168.93, 362.85, 168.62, 363.19, 168.32);
            path0_2.lineTo(363.36, 168.26);
            path0_2.curveTo(377.25, 157.51, 379.48, 142.00, 380.59, 126.03);
            path0_2.curveTo(381.37, 123.36, 382.15, 120.70, 382.93, 118.03);
            path0_2.lineTo(382.91, 118.03);
            path0_2.closePath();
            path0_2.fill(g2);
        }

        {
            BirbPath path0_3 = new BirbPath();
            path0_3.setFillColor(new Color(8, 7, 11));
            path0_3.moveTo(428.96, 599.90);
            path0_3.lineTo(303.00, 599.90);
            path0_3.curveTo(302.39, 598.88, 301.77, 597.86, 301.16, 596.84);
            path0_3.curveTo(301.08, 595.89, 301.00, 594.94, 300.92, 594.00);
            path0_3.curveTo(298.35, 589.74, 295.60, 585.58, 293.30, 581.18);
            path0_3.curveTo(292.59, 579.82, 293.07, 577.84, 293.00, 576.15);
            path0_3.curveTo(300.75, 576.08, 308.52, 576.34, 316.24, 575.81);
            path0_3.curveTo(321.47, 575.45, 330.35, 582.68, 331.11, 574.44);
            path0_3.curveTo(331.87, 566.22, 323.05, 561.59, 313.78, 562.95);
            path0_3.curveTo(303.72, 564.43, 293.70, 566.18, 283.66, 567.81);
            path0_3.curveTo(282.67, 564.88, 281.67, 561.96, 280.68, 559.03);
            path0_3.lineTo(279.87, 556.63);
            path0_3.curveTo(279.87, 556.16, 279.89, 555.69, 279.90, 555.22);
            path0_3.curveTo(280.12, 553.80, 280.34, 552.38, 280.56, 550.96);
            path0_3.curveTo(281.06, 550.78, 281.55, 550.60, 282.05, 550.43);
            path0_3.curveTo(282.42, 549.80, 282.80, 549.17, 283.17, 548.54);
            path0_3.lineTo(283.20, 548.45);
            path0_3.curveTo(283.27, 546.82, 283.35, 545.18, 283.42, 543.55);
            path0_3.curveTo(282.62, 542.51, 281.82, 541.46, 281.02, 540.42);
            path0_3.curveTo(281.00, 533.44, 283.47, 522.34, 275.27, 522.05);
            path0_3.curveTo(265.73, 521.72, 271.79, 532.92, 270.00, 538.79);
            path0_3.curveTo(269.47, 538.92, 268.94, 539.05, 268.41, 539.18);
            path0_3.curveTo(255.41, 522.60, 258.78, 540.35, 255.96, 545.12);
            path0_3.curveTo(255.31, 545.10, 254.66, 545.07, 254.01, 545.05);
            path0_3.lineTo(253.92, 544.95);
            path0_3.curveTo(238.07, 538.93, 230.36, 525.63, 223.80, 511.29);
            path0_3.curveTo(223.15, 509.90, 222.50, 508.51, 221.86, 507.12);
            path0_3.curveTo(221.86, 507.12, 221.88, 507.04, 221.88, 507.04);
            path0_3.curveTo(221.07, 505.45, 220.26, 503.87, 219.44, 502.28);
            path0_3.curveTo(218.85, 501.03, 218.26, 499.77, 217.67, 498.52);
            path0_3.curveTo(217.80, 495.37, 217.93, 492.22, 218.06, 489.08);
            path0_3.curveTo(231.75, 491.49, 250.74, 489.08, 258.14, 497.21);
            path0_3.curveTo(280.56, 521.87, 307.65, 511.67, 333.23, 513.76);
            path0_3.curveTo(334.13, 513.82, 335.04, 513.87, 335.94, 513.92);
            path0_3.curveTo(338.63, 513.96, 341.32, 514.01, 344.01, 514.05);
            path0_3.lineTo(346.00, 513.94);
            path0_3.curveTo(347.67, 513.63, 349.33, 513.33, 351.00, 513.02);
            path0_3.lineTo(353.08, 512.26);
            path0_3.curveTo(361.71, 510.16, 370.34, 508.05, 378.97, 505.95);
            path0_3.curveTo(380.56, 515.28, 382.16, 524.61, 383.75, 533.94);
            path0_3.curveTo(385.49, 534.66, 387.22, 535.38, 388.96, 536.09);
            path0_3.curveTo(399.47, 539.94, 409.98, 543.80, 420.50, 547.65);
            path0_3.lineTo(422.00, 547.78);
            path0_3.curveTo(423.53, 552.57, 427.36, 552.78, 431.56, 553.04);
            path0_3.curveTo(436.38, 553.34, 445.00, 556.49, 440.73, 560.26);
            path0_3.curveTo(427.79, 571.70, 432.03, 586.57, 428.96, 599.91);
            path0_3.lineTo(428.96, 599.90);
            path0_3.moveTo(339.88, 535.36);
            path0_3.curveTo(338.52, 536.04, 334.32, 537.22, 334.36, 538.25);
            path0_3.curveTo(334.91, 553.01, 336.03, 567.75, 337.08, 582.49);
            path0_3.curveTo(337.12, 583.11, 337.88, 583.68, 338.31, 584.27);
            path0_3.curveTo(339.00, 583.61, 339.57, 582.69, 340.40, 582.32);
            path0_3.curveTo(345.95, 579.84, 347.35, 569.54, 357.29, 574.46);
            path0_3.curveTo(360.47, 576.04, 370.19, 572.13, 370.12, 571.40);
            path0_3.curveTo(368.79, 557.77, 358.36, 561.42, 349.82, 561.55);
            path0_3.curveTo(346.33, 561.60, 345.73, 571.17, 341.02, 565.14);
            path0_3.curveTo(336.87, 559.83, 338.21, 553.12, 341.98, 547.44);
            path0_3.curveTo(343.50, 545.16, 346.03, 543.42, 347.09, 540.99);
            path0_3.curveTo(350.16, 533.90, 344.06, 536.65, 339.90, 535.36);
            path0_3.lineTo(339.88, 535.36);
            path0_3.moveTo(371.65, 528.67);
            path0_3.curveTo(370.12, 527.80, 369.42, 527.14, 368.66, 527.05);
            path0_3.curveTo(368.03, 526.97, 367.31, 527.56, 366.64, 527.86);
            path0_3.curveTo(367.21, 528.49, 367.69, 529.47, 368.38, 529.65);
            path0_3.curveTo(369.06, 529.83, 369.96, 529.22, 371.65, 528.67);
            path0_3.lineTo(371.65, 528.67);
            path0_3.fill(g2);
        }

        {
            BirbPath path0_4 = new BirbPath();
            path0_4.setFillColor(new Color(232, 233, 235));
            path0_4.moveTo(410.97, 0.08);
            path0_4.curveTo(409.45, 2.76, 408.16, 5.59, 406.38, 8.08);
            path0_4.curveTo(402.70, 13.22, 392.93, 16.46, 397.77, 24.31);
            path0_4.curveTo(402.18, 31.48, 411.06, 34.40, 419.64, 34.94);
            path0_4.curveTo(427.39, 35.43, 433.16, 37.02, 434.51, 46.13);
            path0_4.curveTo(434.78, 47.99, 439.70, 51.06, 441.50, 50.49);
            path0_4.curveTo(461.01, 44.32, 458.29, 59.76, 460.95, 69.98);
            path0_4.curveTo(461.49, 72.07, 461.55, 75.70, 462.61, 76.03);
            path0_4.curveTo(478.38, 80.81, 478.72, 86.03, 463.95, 93.40);
            path0_4.curveTo(457.28, 96.73, 449.79, 88.98, 443.84, 95.84);
            path0_4.curveTo(443.18, 96.61, 441.46, 96.46, 440.80, 97.22);
            path0_4.curveTo(433.53, 105.68, 424.31, 106.36, 413.51, 99.26);
            path0_4.curveTo(412.63, 98.68, 411.17, 98.97, 409.98, 98.86);
            path0_4.curveTo(410.14, 100.57, 409.65, 102.85, 410.57, 103.90);
            path0_4.curveTo(420.68, 115.54, 410.78, 127.01, 410.34, 138.51);
            path0_4.curveTo(410.31, 139.23, 407.13, 140.72, 406.80, 140.40);
            path0_4.curveTo(404.90, 138.57, 403.28, 136.39, 401.85, 134.15);
            path0_4.curveTo(401.32, 133.32, 401.38, 131.07, 401.45, 131.06);
            path0_4.curveTo(420.02, 127.77, 398.63, 116.61, 405.40, 111.09);
            path0_4.curveTo(399.18, 105.39, 407.56, 101.74, 407.37, 96.93);
            path0_4.curveTo(407.01, 87.95, 410.32, 79.04, 396.63, 74.04);
            path0_4.curveTo(386.06, 70.17, 396.43, 59.95, 397.38, 52.58);
            path0_4.curveTo(398.01, 47.67, 397.50, 44.40, 391.38, 44.61);
            path0_4.curveTo(376.53, 45.10, 374.20, 24.01, 358.71, 25.51);
            path0_4.curveTo(355.23, 25.85, 350.99, 22.43, 348.61, 28.27);
            path0_4.curveTo(346.46, 33.54, 342.83, 38.50, 351.79, 40.83);
            path0_4.curveTo(352.46, 41.00, 352.62, 43.15, 353.02, 44.38);
            path0_4.curveTo(347.07, 44.94, 338.91, 48.24, 335.57, 45.55);
            path0_4.curveTo(324.50, 36.63, 314.56, 26.04, 305.65, 14.91);
            path0_4.curveTo(303.68, 12.44, 307.72, 5.16, 308.99, 0.09);
            path0_4.curveTo(342.98, 0.09, 376.97, 0.09, 410.96, 0.09);
            path0_4.lineTo(410.97, 0.08);
            path0_4.moveTo(391.99, 27.05);
            path0_4.curveTo(389.40, 24.64, 388.07, 23.41, 386.74, 22.17);
            path0_4.curveTo(385.21, 23.92, 383.42, 25.54, 382.35, 27.54);
            path0_4.curveTo(382.14, 27.94, 384.72, 30.79, 385.97, 30.75);
            path0_4.curveTo(387.58, 30.71, 389.15, 28.91, 391.99, 27.05);
            path0_4.lineTo(391.99, 27.05);
            path0_4.moveTo(396.18, 12.31);
            path0_4.curveTo(394.67, 10.27, 393.66, 8.91, 392.65, 7.55);
            path0_4.curveTo(391.43, 9.32, 389.63, 10.97, 389.22, 12.91);
            path0_4.curveTo(388.99, 14.00, 391.05, 15.57, 392.08, 16.93);
            path0_4.curveTo(393.30, 15.56, 394.51, 14.18, 396.17, 12.31);
            path0_4.lineTo(396.18, 12.31);
            path0_4.fill(g2);
        }

        {
            BirbPath path0_5 = new BirbPath();
            path0_5.setFillColor(new Color(8, 7, 11));
            path0_5.moveTo(156.25, 562.75);
            path0_5.curveTo(157.14, 558.39, 158.04, 554.03, 158.93, 549.67);
            path0_5.curveTo(158.99, 549.18, 159.05, 548.68, 159.11, 548.18);
            path0_5.curveTo(160.67, 541.09, 162.24, 534.00, 163.80, 526.91);
            path0_5.curveTo(163.90, 526.35, 164.01, 525.79, 164.12, 525.22);
            path0_5.curveTo(164.56, 524.41, 165.00, 523.60, 165.43, 522.79);
            path0_5.curveTo(165.43, 519.42, 165.43, 516.05, 165.44, 512.67);
            path0_5.curveTo(165.44, 512.67, 165.73, 512.32, 165.73, 512.32);
            path0_5.curveTo(176.63, 519.92, 181.99, 531.67, 188.44, 542.61);
            path0_5.curveTo(189.28, 545.37, 190.11, 548.13, 190.95, 550.90);
            path0_5.curveTo(190.78, 552.59, 190.61, 554.28, 190.44, 555.97);
            path0_5.lineTo(184.03, 553.89);
            path0_5.curveTo(184.03, 553.89, 184.06, 553.92, 184.06, 553.92);
            path0_5.curveTo(182.72, 552.91, 181.37, 551.90, 180.03, 550.88);
            path0_5.curveTo(180.03, 550.88, 180.07, 550.92, 180.07, 550.92);
            path0_5.curveTo(177.03, 548.76, 174.02, 546.56, 170.86, 544.58);
            path0_5.curveTo(170.76, 544.52, 169.06, 546.68, 168.50, 547.98);
            path0_5.curveTo(168.39, 548.23, 170.14, 549.28, 171.04, 549.96);
            path0_5.curveTo(175.40, 552.59, 179.75, 555.22, 184.11, 557.85);
            path0_5.curveTo(204.42, 570.50, 225.58, 574.02, 248.02, 563.81);
            path0_5.curveTo(257.17, 564.79, 266.26, 565.19, 274.85, 560.94);
            path0_5.curveTo(275.02, 562.64, 275.18, 564.34, 275.35, 566.03);
            path0_5.curveTo(275.05, 566.22, 274.88, 566.50, 274.85, 566.85);
            path0_5.curveTo(268.70, 568.25, 258.91, 567.92, 257.23, 571.44);
            path0_5.curveTo(254.54, 577.10, 264.41, 571.30, 266.06, 576.00);
            path0_5.curveTo(264.37, 578.30, 262.68, 580.59, 260.99, 582.89);
            path0_5.curveTo(260.42, 583.30, 259.85, 583.71, 259.28, 584.13);
            path0_5.curveTo(259.82, 584.73, 260.36, 585.32, 260.89, 585.92);
            path0_5.curveTo(262.21, 588.00, 263.53, 590.08, 264.85, 592.16);
            path0_5.curveTo(265.28, 593.68, 265.72, 595.20, 266.15, 596.72);
            path0_5.curveTo(266.10, 597.78, 266.05, 598.83, 266.00, 599.89);
            path0_5.lineTo(147.04, 599.89);
            path0_5.curveTo(149.97, 588.22, 152.91, 576.56, 155.84, 564.90);
            path0_5.curveTo(155.97, 564.18, 156.11, 563.47, 156.24, 562.75);
            path0_5.lineTo(156.25, 562.75);
            path0_5.closePath();
            path0_5.fill(g2);
        }

        {
            BirbPath path0_6 = new BirbPath();
            path0_6.setFillColor(new Color(232, 233, 235));
            path0_6.moveTo(599.90, 117.05);
            path0_6.curveTo(585.35, 113.33, 570.44, 110.62, 556.42, 105.45);
            path0_6.curveTo(549.89, 103.04, 544.01, 96.63, 539.96, 90.60);
            path0_6.curveTo(537.55, 87.02, 539.27, 80.67, 539.14, 75.56);
            path0_6.curveTo(541.67, 76.44, 544.73, 76.70, 546.65, 78.31);
            path0_6.curveTo(557.37, 87.28, 562.99, 71.61, 568.76, 72.84);
            path0_6.curveTo(585.36, 76.40, 586.95, 56.27, 599.91, 56.06);
            path0_6.lineTo(599.91, 117.04);
            path0_6.lineTo(599.90, 117.05);
            path0_6.moveTo(568.59, 98.20);
            path0_6.curveTo(569.19, 97.85, 571.43, 96.55, 573.67, 95.26);
            path0_6.curveTo(570.19, 92.86, 566.88, 90.08, 563.08, 88.37);
            path0_6.curveTo(562.25, 88.00, 558.32, 91.35, 558.20, 93.15);
            path0_6.curveTo(557.80, 99.06, 562.70, 97.88, 568.60, 98.20);
            path0_6.lineTo(568.59, 98.20);
            path0_6.moveTo(592.79, 106.73);
            path0_6.curveTo(594.28, 105.55, 595.34, 104.70, 596.40, 103.86);
            path0_6.curveTo(594.93, 102.72, 593.59, 101.07, 591.93, 100.62);
            path0_6.curveTo(590.96, 100.36, 589.48, 102.00, 588.22, 102.79);
            path0_6.curveTo(589.64, 104.01, 591.05, 105.23, 592.79, 106.73);
            path0_6.fill(g2);
        }

        {
            BirbPath path0_7 = new BirbPath();
            path0_7.setFillColor(new Color(232, 233, 235));
            path0_7.moveTo(562.92, 0.08);
            path0_7.curveTo(562.54, 5.34, 562.01, 10.69, 569.70, 10.89);
            path0_7.curveTo(566.52, 12.92, 563.53, 16.22, 560.11, 16.76);
            path0_7.curveTo(548.09, 18.65, 550.16, 31.25, 543.42, 37.60);
            path0_7.curveTo(529.39, 50.81, 517.33, 52.53, 515.74, 31.46);
            path0_7.curveTo(514.62, 16.61, 513.92, 5.70, 498.94, 0.09);
            path0_7.curveTo(508.27, 0.09, 517.60, 0.09, 526.93, 0.09);
            path0_7.curveTo(527.43, 1.64, 527.93, 3.19, 528.43, 4.74);
            path0_7.curveTo(528.93, 3.19, 529.43, 1.64, 529.93, 0.09);
            path0_7.curveTo(532.93, 0.09, 535.93, 0.09, 538.93, 0.09);
            path0_7.curveTo(534.29, 4.40, 533.44, 9.59, 536.29, 15.00);
            path0_7.curveTo(536.90, 16.17, 539.95, 16.06, 541.88, 16.54);
            path0_7.curveTo(541.90, 11.06, 541.92, 5.58, 541.93, 0.09);
            path0_7.lineTo(562.92, 0.09);
            path0_7.lineTo(562.92, 0.08);
            path0_7.closePath();
            path0_7.fill(g2);
        }

        {
            BirbPath path0_8 = new BirbPath();
            path0_8.setFillColor(new Color(23, 21, 22));
            path0_8.moveTo(428.96, 599.90);
            path0_8.curveTo(432.03, 586.56, 427.79, 571.69, 440.73, 560.25);
            path0_8.curveTo(445.00, 556.48, 436.38, 553.33, 431.56, 553.03);
            path0_8.curveTo(427.35, 552.77, 423.53, 552.56, 422.00, 547.77);
            path0_8.curveTo(429.61, 548.10, 437.22, 548.44, 444.83, 548.77);
            path0_8.curveTo(446.20, 565.81, 447.58, 582.86, 448.95, 599.90);
            path0_8.lineTo(428.96, 599.90);
            path0_8.lineTo(428.96, 599.90);
            path0_8.closePath();
            path0_8.fill(g2);
        }

        {
            BirbPath path0_9 = new BirbPath();
            path0_9.setFillColor(new Color(232, 233, 235));
            path0_9.moveTo(599.90, 210.02);
            path0_9.curveTo(593.22, 213.16, 583.56, 220.79, 580.36, 218.67);
            path0_9.curveTo(563.77, 207.69, 560.72, 228.19, 550.20, 229.55);
            path0_9.curveTo(549.37, 229.66, 547.24, 225.81, 547.10, 223.71);
            path0_9.curveTo(546.87, 220.37, 545.21, 215.55, 550.19, 214.33);
            path0_9.curveTo(559.01, 212.17, 568.04, 210.84, 576.95, 209.00);
            path0_9.curveTo(581.05, 208.15, 587.15, 211.90, 588.72, 205.01);
            path0_9.curveTo(590.51, 197.18, 585.17, 192.84, 579.42, 189.01);
            path0_9.curveTo(578.34, 188.29, 577.49, 187.22, 576.53, 186.31);
            path0_9.curveTo(578.03, 185.05, 579.38, 183.46, 581.10, 182.69);
            path0_9.curveTo(581.85, 182.35, 583.99, 183.42, 584.43, 184.35);
            path0_9.curveTo(587.57, 190.99, 593.07, 193.13, 599.90, 193.03);
            path0_9.lineTo(599.90, 210.02);
            path0_9.lineTo(599.90, 210.02);
            path0_9.closePath();
            path0_9.fill(g2);
        }

        {
            BirbPath path0_10 = new BirbPath();
            path0_10.setFillColor(new Color(232, 233, 235));
            path0_10.moveTo(483.94, 0.08);
            path0_10.curveTo(487.76, 8.07, 491.58, 16.05, 495.39, 24.04);
            path0_10.curveTo(495.95, 25.22, 496.45, 26.43, 496.98, 27.63);
            path0_10.curveTo(495.76, 27.30, 493.88, 27.37, 493.42, 26.59);
            path0_10.curveTo(488.28, 17.98, 482.46, 24.93, 476.79, 24.71);
            path0_10.curveTo(462.80, 24.17, 466.32, 8.51, 460.95, 0.08);
            path0_10.curveTo(468.61, 0.08, 476.28, 0.08, 483.94, 0.08);
            path0_10.lineTo(483.94, 0.08);
            path0_10.closePath();
            path0_10.fill(g2);
        }

        {
            BirbPath path0_11 = new BirbPath();
            path0_11.setFillColor(new Color(50, 47, 48));
            path0_11.moveTo(266.17, 596.73);
            path0_11.curveTo(265.74, 595.21, 265.30, 593.69, 264.87, 592.17);
            path0_11.curveTo(265.87, 591.93, 266.86, 591.69, 267.86, 591.45);
            path0_11.curveTo(274.78, 588.09, 281.69, 584.73, 288.61, 581.37);
            path0_11.curveTo(288.45, 589.74, 297.20, 589.42, 300.93, 594.00);
            path0_11.curveTo(301.01, 594.95, 301.09, 595.90, 301.16, 596.84);
            path0_11.curveTo(299.77, 597.86, 298.39, 598.88, 297.01, 599.90);
            path0_11.lineTo(270.02, 599.90);
            path0_11.curveTo(268.74, 598.84, 267.46, 597.79, 266.17, 596.73);
            path0_11.closePath();
            path0_11.fill(g2);
        }

        {
            BirbPath path0_12 = new BirbPath();
            path0_12.setFillColor(new Color(238, 239, 241));
            path0_12.moveTo(183.04, 0.08);
            path0_12.curveTo(184.57, 7.44, 206.69, 8.99, 189.02, 21.94);
            path0_12.curveTo(184.92, 24.95, 184.52, 23.96, 182.65, 20.06);
            path0_12.curveTo(179.34, 13.13, 174.97, 6.71, 171.04, 0.08);
            path0_12.curveTo(175.04, 0.08, 179.04, 0.08, 183.04, 0.08);
            path0_12.lineTo(183.04, 0.08);
            path0_12.closePath();
            path0_12.fill(g2);
        }

        {
            BirbPath path0_13 = new BirbPath();
            path0_13.setFillColor(new Color(232, 233, 235));
            path0_13.moveTo(599.90, 253.01);
            path0_13.curveTo(598.45, 253.26, 596.72, 253.09, 595.59, 253.83);
            path0_13.curveTo(591.06, 256.79, 586.71, 260.04, 582.30, 263.18);
            path0_13.curveTo(582.50, 257.41, 581.62, 251.34, 583.11, 245.92);
            path0_13.curveTo(587.43, 230.22, 594.47, 250.06, 599.90, 245.01);
            path0_13.lineTo(599.90, 253.01);
            path0_13.lineTo(599.90, 253.01);
            path0_13.closePath();
            path0_13.fill(g2);
        }

        {
            BirbPath path0_14 = new BirbPath();
            path0_14.setFillColor(new Color(232, 233, 235));
            path0_14.moveTo(454.95, 0.08);
            path0_14.curveTo(454.02, 3.33, 457.42, 9.80, 450.66, 8.68);
            path0_14.curveTo(446.23, 7.95, 435.56, 12.51, 438.95, 0.08);
            path0_14.lineTo(454.94, 0.08);
            path0_14.lineTo(454.95, 0.08);
            path0_14.closePath();
            path0_14.fill(g2);
        }

        {
            BirbPath path0_15 = new BirbPath();
            path0_15.setFillColor(new Color(235, 236, 238));
            path0_15.moveTo(541.92, 0.08);
            path0_15.curveTo(541.90, 5.56, 541.88, 11.04, 541.87, 16.53);
            path0_15.curveTo(539.94, 16.05, 536.90, 16.16, 536.28, 14.99);
            path0_15.curveTo(533.44, 9.58, 534.29, 4.39, 538.92, 0.08);
            path0_15.lineTo(541.92, 0.08);
            path0_15.lineTo(541.92, 0.08);
            path0_15.closePath();
            path0_15.fill(g2);
        }

        {
            BirbPath path0_16 = new BirbPath();
            path0_16.setFillColor(new Color(232, 233, 235));
            path0_16.moveTo(599.90, 157.04);
            path0_16.curveTo(590.05, 157.63, 594.46, 149.43, 593.26, 145.28);
            path0_16.curveTo(592.11, 141.30, 594.73, 138.02, 599.90, 139.04);
            path0_16.lineTo(599.90, 157.03);
            path0_16.lineTo(599.90, 157.04);
            path0_16.closePath();
            path0_16.fill(g2);
        }

        {
            BirbPath path0_17 = new BirbPath();
            path0_17.setFillColor(new Color(232, 233, 235));
            path0_17.moveTo(599.90, 7.08);
            path0_17.curveTo(598.40, 6.33, 596.90, 5.59, 595.40, 4.84);
            path0_17.curveTo(596.90, 4.25, 598.40, 3.67, 599.90, 3.08);
            path0_17.lineTo(599.90, 7.08);
            path0_17.closePath();
            path0_17.fill(g2);
        }

        {
            BirbPath path0_18 = new BirbPath();
            path0_18.setFillColor(new Color(146, 82, 61));
            path0_18.moveTo(297.01, 599.90);
            path0_18.curveTo(298.39, 598.88, 299.78, 597.86, 301.16, 596.84);
            path0_18.curveTo(301.78, 597.86, 302.39, 598.88, 303.00, 599.90);
            path0_18.lineTo(297.00, 599.90);
            path0_18.lineTo(297.01, 599.90);
            path0_18.closePath();
            path0_18.fill(g2);
        }

        {
            BirbPath path0_19 = new BirbPath();
            path0_19.setFillColor(new Color(235, 236, 238));
            path0_19.moveTo(529.93, 0.08);
            path0_19.curveTo(529.43, 1.63, 528.93, 3.18, 528.43, 4.73);
            path0_19.curveTo(527.93, 3.18, 527.43, 1.63, 526.93, 0.08);
            path0_19.curveTo(527.93, 0.08, 528.93, 0.08, 529.93, 0.08);
            path0_19.lineTo(529.93, 0.08);
            path0_19.closePath();
            path0_19.fill(g2);
        }

        {
            BirbPath path0_20 = new BirbPath();
            path0_20.setFillColor(new Color(232, 233, 235));
            path0_20.moveTo(599.90, 135.04);
            path0_20.curveTo(598.44, 134.67, 596.99, 134.30, 595.53, 133.93);
            path0_20.curveTo(596.99, 133.30, 598.44, 132.67, 599.90, 132.04);
            path0_20.lineTo(599.90, 135.04);
            path0_20.closePath();
            path0_20.fill(g2);
        }

        {
            BirbPath path0_21 = new BirbPath();
            path0_21.setFillColor(new Color(23, 21, 22));
            path0_21.moveTo(266.17, 596.73);
            path0_21.curveTo(267.45, 597.79, 268.73, 598.84, 270.02, 599.90);
            path0_21.lineTo(266.02, 599.90);
            path0_21.curveTo(266.07, 598.84, 266.12, 597.79, 266.17, 596.73);
            path0_21.closePath();
            path0_21.fill(g2);
        }

        {
            BirbPath path0_22 = new BirbPath();
            path0_22.setFillColor(new Color(50, 47, 48));
            path0_22.moveTo(110.66, 320.97);
            path0_22.curveTo(111.06, 319.62, 111.45, 318.27, 111.85, 316.92);
            path0_22.curveTo(112.82, 313.61, 113.80, 310.29, 114.77, 306.98);
            path0_22.curveTo(114.86, 306.31, 114.95, 305.64, 115.03, 304.98);
            path0_22.curveTo(119.69, 290.32, 124.35, 275.65, 129.02, 260.99);
            path0_22.curveTo(129.77, 260.10, 130.51, 259.22, 131.26, 258.33);
            path0_22.curveTo(131.82, 257.53, 132.38, 256.74, 132.94, 255.94);
            path0_22.curveTo(132.94, 255.94, 132.99, 255.88, 132.99, 255.88);
            path0_22.curveTo(134.93, 252.90, 136.87, 249.92, 138.80, 246.95);
            path0_22.curveTo(139.27, 246.38, 139.74, 245.81, 140.21, 245.24);
            path0_22.curveTo(140.83, 244.50, 141.44, 243.76, 142.06, 243.02);
            path0_22.curveTo(142.06, 243.02, 142.06, 243.02, 142.06, 243.02);
            path0_22.curveTo(142.80, 242.40, 143.54, 241.78, 144.28, 241.16);
            path0_22.curveTo(144.60, 241.14, 144.83, 241.00, 144.98, 240.71);
            path0_22.curveTo(149.02, 238.49, 153.05, 236.28, 157.09, 234.06);
            path0_22.curveTo(157.09, 234.06, 157.09, 234.06, 157.09, 234.06);
            path0_22.curveTo(164.01, 230.92, 170.94, 227.78, 177.86, 224.64);
            path0_22.curveTo(178.72, 225.59, 179.59, 226.53, 180.45, 227.48);
            path0_22.curveTo(180.93, 226.07, 181.41, 224.66, 181.89, 223.25);
            path0_22.curveTo(182.54, 222.99, 183.19, 222.73, 183.84, 222.47);
            path0_22.curveTo(185.74, 223.67, 187.76, 226.04, 189.54, 225.88);
            path0_22.curveTo(207.27, 224.28, 216.50, 232.83, 219.07, 249.76);
            path0_22.curveTo(220.42, 258.63, 223.12, 266.84, 230.03, 273.09);
            path0_22.curveTo(231.37, 274.31, 232.74, 275.50, 234.10, 276.70);
            path0_22.curveTo(234.70, 274.65, 236.31, 272.22, 235.71, 270.60);
            path0_22.curveTo(233.85, 265.56, 236.17, 262.89, 238.67, 258.58);
            path0_22.curveTo(244.20, 249.04, 247.92, 238.06, 240.28, 227.33);
            path0_22.curveTo(239.20, 225.81, 236.98, 225.14, 235.44, 223.88);
            path0_22.curveTo(231.67, 220.81, 231.31, 217.06, 234.32, 217.43);
            path0_22.curveTo(239.08, 218.03, 243.11, 224.02, 245.54, 224.35);
            path0_22.curveTo(254.28, 225.52, 245.66, 249.27, 262.61, 236.99);
            path0_22.curveTo(262.58, 237.61, 262.55, 238.22, 262.52, 238.84);
            path0_22.lineTo(258.48, 249.86);
            path0_22.curveTo(258.22, 250.54, 257.97, 251.22, 257.71, 251.90);
            path0_22.curveTo(257.41, 252.61, 257.11, 253.31, 256.81, 254.02);
            path0_22.curveTo(256.13, 255.10, 255.45, 256.18, 254.77, 257.26);
            path0_22.curveTo(254.08, 258.96, 253.39, 260.66, 252.70, 262.36);
            path0_22.curveTo(252.42, 263.91, 252.14, 265.46, 251.86, 267.02);
            path0_22.lineTo(250.91, 269.99);
            path0_22.curveTo(250.53, 270.41, 250.15, 270.83, 249.77, 271.25);
            path0_22.curveTo(249.59, 271.77, 249.40, 272.30, 249.22, 272.82);
            path0_22.curveTo(248.99, 273.58, 248.76, 274.35, 248.52, 275.11);
            path0_22.curveTo(248.05, 276.67, 247.58, 278.23, 247.11, 279.79);
            path0_22.curveTo(246.90, 280.58, 246.69, 281.37, 246.49, 282.17);
            path0_22.curveTo(246.05, 283.71, 245.61, 285.25, 245.18, 286.79);
            path0_22.curveTo(245.03, 287.60, 244.88, 288.42, 244.73, 289.23);
            path0_22.curveTo(244.52, 290.42, 244.30, 291.60, 244.09, 292.79);
            path0_22.curveTo(243.93, 293.59, 243.77, 294.38, 243.62, 295.18);
            path0_22.curveTo(243.49, 295.73, 243.36, 296.27, 243.23, 296.82);
            path0_22.curveTo(243.07, 297.62, 242.90, 298.42, 242.74, 299.22);
            path0_22.curveTo(242.54, 299.75, 242.34, 300.28, 242.14, 300.81);
            path0_22.curveTo(240.75, 306.88, 239.36, 312.94, 237.96, 319.01);
            path0_22.curveTo(237.75, 320.41, 237.54, 321.82, 237.33, 323.22);
            path0_22.curveTo(237.54, 324.15, 237.75, 325.09, 237.95, 326.02);
            path0_22.curveTo(237.94, 328.34, 237.93, 330.67, 237.92, 332.99);
            path0_22.curveTo(236.36, 317.37, 225.03, 321.61, 215.56, 321.89);
            path0_22.curveTo(214.17, 321.93, 212.75, 320.94, 211.35, 320.42);
            path0_22.curveTo(211.91, 319.69, 212.33, 318.53, 213.06, 318.29);
            path0_22.curveTo(222.81, 315.07, 229.27, 308.18, 234.03, 299.48);
            path0_22.curveTo(234.99, 297.73, 235.20, 295.58, 235.75, 293.61);
            path0_22.curveTo(233.45, 293.95, 230.50, 293.51, 228.96, 294.77);
            path0_22.curveTo(222.66, 299.96, 216.87, 305.76, 210.66, 311.07);
            path0_22.curveTo(209.96, 311.67, 207.87, 310.64, 206.43, 310.37);
            path0_22.curveTo(207.87, 305.15, 209.27, 299.92, 210.79, 294.72);
            path0_22.curveTo(210.91, 294.30, 211.77, 294.09, 212.29, 293.79);
            path0_22.curveTo(211.92, 296.17, 211.47, 298.54, 211.20, 300.93);
            path0_22.curveTo(210.94, 303.21, 210.87, 305.51, 210.72, 307.80);
            path0_22.curveTo(212.45, 305.34, 215.35, 303.03, 215.68, 300.39);
            path0_22.curveTo(216.65, 292.67, 216.59, 284.83, 216.94, 277.03);
            path0_22.curveTo(217.02, 263.63, 213.92, 251.38, 204.32, 241.37);
            path0_22.curveTo(203.15, 240.15, 203.15, 237.71, 201.91, 236.65);
            path0_22.curveTo(198.38, 233.64, 198.82, 237.32, 199.13, 238.85);
            path0_22.curveTo(200.57, 245.94, 202.33, 252.96, 203.97, 260.01);
            path0_22.curveTo(204.34, 261.00, 204.72, 261.98, 205.09, 262.97);
            path0_22.curveTo(205.30, 264.60, 206.32, 266.90, 205.60, 267.76);
            path0_22.curveTo(201.04, 273.24, 196.09, 278.41, 191.27, 283.68);
            path0_22.curveTo(192.12, 268.60, 182.85, 258.94, 172.90, 249.73);
            path0_22.curveTo(170.99, 247.96, 168.46, 246.87, 166.22, 245.46);
            path0_22.curveTo(166.17, 246.12, 165.88, 246.87, 166.10, 247.41);
            path0_22.curveTo(169.16, 254.86, 172.38, 262.25, 175.39, 269.72);
            path0_22.curveTo(183.68, 290.26, 174.96, 307.04, 165.82, 325.11);
            path0_22.curveTo(162.45, 331.76, 146.50, 334.74, 156.20, 347.16);
            path0_22.curveTo(159.76, 351.71, 157.22, 352.16, 153.03, 351.96);
            path0_22.curveTo(136.79, 351.21, 120.53, 350.64, 104.28, 350.00);
            path0_22.curveTo(104.47, 347.99, 104.66, 345.97, 104.84, 343.96);
            path0_22.curveTo(105.02, 343.56, 105.21, 343.17, 105.39, 342.77);
            path0_22.curveTo(106.74, 338.16, 108.09, 333.54, 109.45, 328.93);
            path0_22.curveTo(109.54, 327.58, 109.64, 326.22, 109.73, 324.87);
            path0_22.curveTo(110.02, 323.57, 110.32, 322.26, 110.61, 320.96);
            path0_22.lineTo(110.66, 320.97);
            path0_22.closePath();
            path0_22.fill(g2);
        }

        {
            BirbPath path0_23 = new BirbPath();
            path0_23.setFillColor(new Color(146, 82, 61));
            path0_23.moveTo(188.45, 542.62);
            path0_23.curveTo(182.00, 531.69, 176.64, 519.93, 165.74, 512.33);
            path0_23.curveTo(159.04, 503.28, 152.35, 494.24, 145.65, 485.20);
            path0_23.curveTo(145.41, 484.87, 145.18, 484.54, 144.94, 484.20);
            path0_23.curveTo(144.60, 483.76, 144.25, 483.33, 143.91, 482.89);
            path0_23.curveTo(143.67, 482.61, 143.44, 482.33, 143.20, 482.06);
            path0_23.curveTo(139.16, 475.90, 135.12, 469.74, 131.08, 463.59);
            path0_23.curveTo(130.22, 462.03, 129.36, 460.48, 128.50, 458.92);
            path0_23.curveTo(128.24, 458.36, 127.97, 457.79, 127.71, 457.23);
            path0_23.curveTo(127.29, 456.47, 126.86, 455.70, 126.43, 454.94);
            path0_23.curveTo(126.25, 454.63, 126.06, 454.32, 125.88, 454.02);
            path0_23.curveTo(124.73, 452.00, 123.57, 449.99, 122.42, 447.97);
            path0_23.curveTo(122.22, 447.66, 122.03, 447.35, 121.83, 447.05);
            path0_23.curveTo(121.05, 445.34, 120.26, 443.62, 119.47, 441.91);
            path0_23.curveTo(119.28, 441.80, 119.21, 441.64, 119.25, 441.42);
            path0_23.curveTo(117.99, 437.18, 116.84, 432.90, 115.40, 428.72);
            path0_23.curveTo(115.00, 427.55, 113.20, 426.80, 112.97, 425.67);
            path0_23.curveTo(112.66, 424.15, 113.26, 422.45, 113.48, 420.83);
            path0_23.curveTo(115.14, 423.15, 116.64, 425.61, 118.50, 427.77);
            path0_23.curveTo(126.04, 436.52, 130.33, 448.28, 144.20, 450.84);
            path0_23.curveTo(154.88, 452.81, 166.93, 446.58, 175.83, 461.54);
            path0_23.curveTo(184.97, 476.90, 202.66, 486.85, 205.40, 506.99);
            path0_23.curveTo(206.13, 512.34, 211.38, 513.66, 216.27, 513.54);
            path0_23.curveTo(216.80, 513.53, 218.14, 509.97, 217.59, 508.71);
            path0_23.curveTo(207.63, 485.87, 197.34, 463.18, 187.39, 440.33);
            path0_23.curveTo(185.16, 435.21, 180.85, 430.08, 185.07, 423.92);
            path0_23.curveTo(185.48, 423.92, 185.89, 423.92, 186.30, 423.92);
            path0_23.curveTo(186.65, 423.94, 187.00, 423.96, 187.36, 423.97);
            path0_23.curveTo(187.49, 425.11, 187.63, 426.25, 187.76, 427.39);
            path0_23.curveTo(187.95, 428.58, 188.15, 429.77, 188.34, 430.96);
            path0_23.curveTo(188.81, 431.80, 189.27, 432.64, 189.74, 433.47);
            path0_23.curveTo(190.51, 435.64, 191.29, 437.81, 192.06, 439.98);
            path0_23.curveTo(192.71, 441.65, 193.35, 443.33, 194.00, 445.00);
            path0_23.curveTo(194.21, 445.36, 194.41, 445.73, 194.62, 446.09);
            path0_23.curveTo(195.05, 447.12, 195.47, 448.15, 195.90, 449.18);
            path0_23.curveTo(196.23, 450.11, 196.57, 451.03, 196.90, 451.96);
            path0_23.curveTo(197.27, 452.66, 197.63, 453.36, 198.00, 454.06);
            path0_23.curveTo(198.85, 456.06, 199.70, 458.06, 200.55, 460.06);
            path0_23.curveTo(206.26, 472.88, 211.97, 485.69, 217.67, 498.51);
            path0_23.curveTo(218.26, 499.76, 218.85, 501.02, 219.45, 502.27);
            path0_23.curveTo(220.26, 503.86, 221.07, 505.44, 221.88, 507.03);
            path0_23.curveTo(221.88, 507.03, 221.86, 507.11, 221.86, 507.11);
            path0_23.curveTo(222.51, 508.50, 223.16, 509.89, 223.80, 511.29);
            path0_23.curveTo(230.35, 525.63, 238.07, 538.93, 253.92, 544.95);
            path0_23.curveTo(248.00, 543.91, 242.07, 542.87, 236.15, 541.82);
            path0_23.curveTo(239.91, 545.78, 243.06, 551.06, 247.66, 553.18);
            path0_23.curveTo(250.35, 554.42, 254.28, 549.80, 254.01, 545.04);
            path0_23.curveTo(254.66, 545.06, 255.31, 545.09, 255.96, 545.11);
            path0_23.curveTo(255.90, 547.94, 255.84, 550.77, 255.78, 553.60);
            path0_23.curveTo(255.15, 554.36, 254.52, 555.12, 253.89, 555.88);
            path0_23.curveTo(253.18, 556.76, 252.48, 557.64, 251.77, 558.52);
            path0_23.curveTo(247.65, 560.22, 243.64, 562.94, 239.38, 563.40);
            path0_23.curveTo(232.57, 564.13, 225.60, 563.37, 218.69, 563.23);
            path0_23.curveTo(218.80, 562.33, 218.56, 561.08, 219.06, 560.58);
            path0_23.curveTo(226.14, 553.57, 221.99, 551.84, 214.83, 550.23);
            path0_23.curveTo(205.91, 548.22, 197.22, 545.21, 188.44, 542.64);
            path0_23.lineTo(188.45, 542.62);
            path0_23.closePath();
            path0_23.fill(g2);
        }

        {
            BirbPath path0_24 = new BirbPath();
            path0_24.setFillColor(new Color(23, 21, 22));
            path0_24.moveTo(262.62, 236.98);
            path0_24.curveTo(245.67, 249.25, 254.29, 225.51, 245.55, 224.34);
            path0_24.curveTo(243.12, 224.01, 239.09, 218.02, 234.33, 217.42);
            path0_24.curveTo(231.32, 217.04, 231.68, 220.80, 235.45, 223.87);
            path0_24.curveTo(236.99, 225.12, 239.21, 225.79, 240.29, 227.32);
            path0_24.curveTo(247.92, 238.05, 244.21, 249.03, 238.68, 258.57);
            path0_24.curveTo(236.18, 262.88, 233.86, 265.56, 235.72, 270.59);
            path0_24.curveTo(236.32, 272.20, 234.71, 274.63, 234.11, 276.69);
            path0_24.curveTo(232.75, 275.49, 231.39, 274.30, 230.04, 273.08);
            path0_24.curveTo(223.13, 266.84, 220.43, 258.62, 219.08, 249.75);
            path0_24.curveTo(216.50, 232.82, 207.28, 224.27, 189.55, 225.87);
            path0_24.curveTo(187.77, 226.03, 185.76, 223.66, 183.85, 222.46);
            path0_24.curveTo(185.84, 221.77, 187.82, 221.08, 189.81, 220.38);
            path0_24.curveTo(190.54, 220.23, 191.27, 220.08, 192.00, 219.93);
            path0_24.curveTo(191.92, 219.75, 191.88, 219.56, 191.89, 219.36);
            path0_24.curveTo(200.15, 216.07, 208.40, 212.78, 216.66, 209.48);
            path0_24.curveTo(219.39, 208.73, 222.12, 207.97, 224.85, 207.22);
            path0_24.curveTo(225.57, 207.06, 226.29, 206.90, 227.00, 206.74);
            path0_24.curveTo(227.66, 206.72, 228.32, 206.70, 228.97, 206.67);
            path0_24.curveTo(229.71, 205.49, 230.46, 204.31, 231.20, 203.13);
            path0_24.curveTo(231.54, 203.19, 231.80, 203.06, 231.97, 202.76);
            path0_24.curveTo(232.72, 202.25, 233.48, 201.74, 234.23, 201.23);
            path0_24.curveTo(234.23, 201.23, 234.12, 201.16, 234.12, 201.16);
            path0_24.curveTo(235.09, 200.45, 236.06, 199.74, 237.03, 199.03);
            path0_24.curveTo(237.74, 198.39, 238.45, 197.74, 239.16, 197.10);
            path0_24.curveTo(239.80, 196.45, 240.45, 195.80, 241.09, 195.16);
            path0_24.curveTo(242.29, 192.76, 243.49, 190.37, 244.69, 187.97);
            path0_24.curveTo(245.65, 187.01, 246.61, 186.04, 247.57, 185.08);
            path0_24.curveTo(250.38, 185.10, 253.19, 185.13, 256.00, 185.15);
            path0_24.curveTo(256.32, 185.31, 256.65, 185.46, 256.97, 185.62);
            path0_24.curveTo(255.35, 191.12, 259.50, 192.30, 263.13, 193.87);
            path0_24.lineTo(263.13, 193.87);
            path0_24.curveTo(264.42, 194.61, 265.71, 195.34, 267.00, 196.08);
            path0_24.lineTo(266.94, 196.04);
            path0_24.curveTo(268.04, 196.69, 269.15, 197.34, 270.25, 198.00);
            path0_24.lineTo(270.47, 198.07);
            path0_24.curveTo(270.99, 198.39, 271.52, 198.71, 272.04, 199.02);
            path0_24.lineTo(271.92, 199.08);
            path0_24.curveTo(286.38, 207.73, 299.78, 218.55, 317.26, 220.92);
            path0_24.curveTo(317.25, 221.97, 317.24, 223.02, 317.23, 224.07);
            path0_24.curveTo(317.70, 226.86, 318.17, 229.64, 318.65, 232.43);
            path0_24.lineTo(319.79, 233.20);
            path0_24.lineTo(319.85, 233.24);
            path0_24.curveTo(320.24, 233.45, 320.63, 233.67, 321.02, 233.88);
            path0_24.curveTo(321.97, 234.29, 322.92, 234.70, 323.88, 235.12);
            path0_24.curveTo(324.24, 235.44, 324.59, 235.75, 324.95, 236.07);
            path0_24.lineTo(324.95, 236.07);
            path0_24.curveTo(325.27, 236.41, 325.59, 236.76, 325.91, 237.10);
            path0_24.curveTo(326.24, 237.44, 326.57, 237.78, 326.90, 238.12);
            path0_24.curveTo(327.31, 238.62, 327.72, 239.13, 328.13, 239.63);
            path0_24.lineTo(329.06, 240.03);
            path0_24.curveTo(330.04, 240.72, 331.02, 241.41, 332.00, 242.09);
            path0_24.curveTo(333.07, 242.59, 334.15, 243.10, 335.22, 243.60);
            path0_24.lineTo(338.01, 244.03);
            path0_24.curveTo(338.99, 244.57, 339.97, 245.11, 340.95, 245.64);
            path0_24.lineTo(344.03, 232.05);
            path0_24.curveTo(346.86, 231.08, 349.70, 230.11, 352.53, 229.14);
            path0_24.curveTo(352.25, 231.75, 351.97, 234.36, 351.70, 236.98);
            path0_24.curveTo(351.63, 237.70, 351.56, 238.42, 351.49, 239.13);
            path0_24.curveTo(351.25, 241.41, 351.01, 243.70, 350.78, 245.98);
            path0_24.curveTo(350.68, 246.70, 350.59, 247.41, 350.49, 248.13);
            path0_24.curveTo(350.58, 249.72, 350.67, 251.31, 350.76, 252.90);
            path0_24.curveTo(350.92, 253.58, 351.07, 254.26, 351.23, 254.95);
            path0_24.curveTo(353.57, 261.62, 355.90, 268.29, 358.24, 274.96);
            path0_24.curveTo(358.75, 275.77, 359.27, 276.59, 359.78, 277.40);
            path0_24.curveTo(359.70, 277.71, 359.81, 277.91, 360.13, 277.98);
            path0_24.curveTo(356.46, 282.82, 374.45, 290.73, 357.89, 293.73);
            path0_24.curveTo(353.68, 293.43, 349.48, 293.14, 345.27, 292.84);
            path0_24.curveTo(337.79, 280.66, 336.75, 264.87, 324.31, 255.48);
            path0_24.curveTo(324.28, 255.14, 324.15, 254.85, 323.92, 254.60);
            path0_24.curveTo(323.12, 253.76, 322.32, 252.93, 321.51, 252.09);
            path0_24.curveTo(319.19, 249.75, 316.87, 247.41, 314.55, 245.06);
            path0_24.curveTo(306.83, 237.85, 303.59, 225.45, 290.60, 224.35);
            path0_24.curveTo(289.85, 225.01, 289.10, 225.67, 288.34, 226.33);
            path0_24.lineTo(288.02, 226.08);
            path0_24.lineTo(288.32, 226.35);
            path0_24.lineTo(285.92, 227.92);
            path0_24.curveTo(282.66, 228.69, 279.40, 229.45, 276.14, 230.22);
            path0_24.curveTo(275.39, 230.31, 274.64, 230.40, 273.90, 230.49);
            path0_24.curveTo(273.33, 230.83, 272.76, 231.17, 272.18, 231.51);
            path0_24.curveTo(271.03, 231.37, 269.89, 231.22, 268.74, 231.08);
            path0_24.curveTo(268.13, 231.12, 267.52, 231.16, 266.92, 231.19);
            path0_24.curveTo(266.19, 231.78, 265.46, 232.37, 264.74, 232.96);
            path0_24.curveTo(264.24, 233.80, 263.75, 234.64, 263.25, 235.49);
            path0_24.curveTo(263.04, 235.98, 262.83, 236.47, 262.62, 236.97);
            path0_24.lineTo(262.62, 236.98);
            path0_24.closePath();
            path0_24.fill(g2);
        }

        {
            BirbPath path0_25 = new BirbPath();
            path0_25.setFillColor(new Color(190, 116, 95));
            path0_25.moveTo(185.06, 423.89);
            path0_25.curveTo(180.84, 430.05, 185.15, 435.19, 187.38, 440.30);
            path0_25.curveTo(197.33, 463.14, 207.62, 485.84, 217.58, 508.68);
            path0_25.curveTo(218.13, 509.94, 216.79, 513.49, 216.26, 513.51);
            path0_25.curveTo(211.37, 513.64, 206.12, 512.31, 205.39, 506.96);
            path0_25.curveTo(202.64, 486.82, 184.95, 476.87, 175.82, 461.51);
            path0_25.curveTo(166.92, 446.55, 154.87, 452.78, 144.19, 450.81);
            path0_25.curveTo(130.32, 448.26, 126.04, 436.50, 118.49, 427.74);
            path0_25.curveTo(116.63, 425.59, 115.14, 423.12, 113.47, 420.80);
            path0_25.curveTo(113.26, 422.42, 112.66, 424.12, 112.96, 425.64);
            path0_25.curveTo(113.19, 426.77, 114.99, 427.53, 115.39, 428.69);
            path0_25.curveTo(116.83, 432.87, 117.98, 437.15, 119.24, 441.39);
            path0_25.curveTo(113.43, 431.30, 107.62, 421.21, 101.81, 411.12);
            path0_25.curveTo(101.63, 410.73, 101.45, 410.34, 101.27, 409.96);
            path0_25.curveTo(101.27, 409.96, 101.13, 409.67, 101.13, 409.67);
            path0_25.curveTo(101.10, 409.42, 101.00, 409.21, 100.83, 409.03);
            path0_25.curveTo(100.61, 408.30, 100.40, 407.56, 100.18, 406.83);
            path0_25.curveTo(100.17, 404.58, 100.16, 402.32, 100.15, 400.06);
            path0_25.curveTo(100.30, 398.72, 100.46, 397.37, 100.61, 396.03);
            path0_25.curveTo(102.42, 393.80, 104.23, 391.57, 106.04, 389.33);
            path0_25.curveTo(108.66, 392.96, 113.27, 396.44, 113.56, 400.24);
            path0_25.curveTo(115.31, 423.06, 128.39, 427.75, 147.44, 421.76);
            path0_25.curveTo(149.33, 421.17, 163.54, 417.33, 152.02, 406.95);
            path0_25.curveTo(146.17, 401.67, 135.90, 394.23, 144.22, 382.51);
            path0_25.curveTo(150.27, 373.99, 146.05, 368.48, 137.57, 365.76);
            path0_25.curveTo(128.51, 362.86, 119.18, 360.81, 109.97, 358.39);
            path0_25.curveTo(127.95, 360.29, 145.94, 362.10, 163.90, 364.15);
            path0_25.curveTo(167.80, 364.60, 174.47, 365.25, 174.87, 366.97);
            path0_25.curveTo(175.82, 371.07, 173.91, 375.89, 172.95, 380.38);
            path0_25.curveTo(171.50, 387.15, 163.91, 393.54, 171.77, 400.84);
            path0_25.lineTo(184.14, 421.92);
            path0_25.lineTo(185.04, 423.88);
            path0_25.lineTo(185.06, 423.89);
            path0_25.closePath();
            path0_25.fill(g2);
        }

        {
            BirbPath path0_26 = new BirbPath();
            path0_26.setFillColor(new Color(222, 151, 123));
            path0_26.moveTo(109.99, 358.40);
            path0_26.curveTo(119.20, 360.82, 128.53, 362.87, 137.59, 365.77);
            path0_26.curveTo(146.07, 368.49, 150.29, 374.00, 144.24, 382.52);
            path0_26.curveTo(135.92, 394.24, 146.18, 401.68, 152.04, 406.96);
            path0_26.curveTo(163.56, 417.35, 149.35, 421.18, 147.46, 421.77);
            path0_26.curveTo(128.41, 427.76, 115.33, 423.07, 113.58, 400.25);
            path0_26.curveTo(113.29, 396.44, 108.68, 392.97, 106.06, 389.34);
            path0_26.curveTo(104.25, 391.57, 102.44, 393.81, 100.63, 396.04);
            path0_26.curveTo(102.81, 383.12, 105.00, 370.20, 107.18, 357.28);
            path0_26.curveTo(107.83, 357.31, 108.49, 357.34, 109.15, 357.37);
            path0_26.curveTo(109.43, 357.71, 109.72, 358.05, 110.00, 358.40);
            path0_26.lineTo(109.99, 358.40);
            path0_26.closePath();
            path0_26.fill(g2);
        }

        {
            BirbPath path0_27 = new BirbPath();
            path0_27.setFillColor(new Color(23, 21, 22));
            path0_27.moveTo(109.14, 357.38);
            path0_27.curveTo(108.48, 357.35, 107.83, 357.32, 107.17, 357.29);
            path0_27.curveTo(106.46, 356.90, 105.74, 356.50, 105.03, 356.11);
            path0_27.curveTo(104.79, 354.08, 104.56, 352.05, 104.32, 350.02);
            path0_27.curveTo(120.57, 350.66, 136.82, 351.23, 153.07, 351.98);
            path0_27.curveTo(157.26, 352.17, 159.80, 351.73, 156.24, 347.18);
            path0_27.curveTo(146.54, 334.76, 162.49, 331.79, 165.86, 325.13);
            path0_27.curveTo(174.99, 307.07, 183.72, 290.28, 175.43, 269.74);
            path0_27.curveTo(172.41, 262.27, 169.20, 254.88, 166.14, 247.43);
            path0_27.curveTo(165.92, 246.89, 166.21, 246.13, 166.26, 245.48);
            path0_27.curveTo(168.50, 246.89, 171.04, 247.98, 172.94, 249.75);
            path0_27.curveTo(182.89, 258.96, 192.16, 268.62, 191.31, 283.70);
            path0_27.curveTo(196.13, 278.43, 201.07, 273.27, 205.64, 267.78);
            path0_27.curveTo(206.36, 266.92, 205.34, 264.62, 205.12, 262.99);
            path0_27.curveTo(206.71, 266.72, 208.30, 270.44, 209.90, 274.17);
            path0_27.curveTo(205.80, 280.19, 197.84, 285.28, 205.07, 294.06);
            path0_27.curveTo(203.57, 294.64, 202.08, 295.22, 200.58, 295.80);
            path0_27.curveTo(200.07, 293.85, 199.38, 291.93, 199.07, 289.95);
            path0_27.curveTo(198.59, 286.86, 198.36, 283.74, 198.03, 280.63);
            path0_27.curveTo(197.04, 284.16, 196.07, 287.69, 195.04, 291.21);
            path0_27.curveTo(194.63, 292.62, 194.10, 294.00, 193.62, 295.40);
            path0_27.curveTo(192.76, 293.95, 191.85, 292.52, 191.05, 291.04);
            path0_27.curveTo(189.48, 288.11, 187.98, 285.15, 186.46, 282.20);
            path0_27.curveTo(185.39, 284.14, 182.91, 287.11, 183.47, 287.87);
            path0_27.curveTo(197.14, 306.57, 186.32, 325.54, 178.78, 340.16);
            path0_27.curveTo(171.97, 353.36, 185.75, 352.24, 185.03, 358.92);
            path0_27.curveTo(185.03, 359.92, 185.01, 360.91, 185.00, 361.91);
            path0_27.curveTo(184.75, 362.04, 184.54, 362.22, 184.36, 362.44);
            path0_27.curveTo(159.28, 360.82, 134.55, 354.05, 109.14, 357.40);
            path0_27.lineTo(109.14, 357.38);
            path0_27.closePath();
            path0_27.fill(g2);
        }

        {
            BirbPath path0_28 = new BirbPath();
            path0_28.setFillColor(new Color(235, 236, 238));
            path0_28.moveTo(125.31, 58.14);
            path0_28.curveTo(118.04, 74.31, 126.31, 95.01, 108.63, 106.91);
            path0_28.curveTo(107.11, 107.94, 105.02, 108.13, 103.20, 108.71);
            path0_28.curveTo(103.41, 107.12, 103.80, 105.53, 103.82, 103.93);
            path0_28.curveTo(103.94, 95.37, 105.13, 86.60, 99.67, 78.99);
            path0_28.curveTo(94.11, 71.25, 103.19, 67.03, 105.64, 66.14);
            path0_28.curveTo(131.07, 56.88, 111.51, 41.98, 109.89, 30.24);
            path0_28.curveTo(109.13, 24.72, 95.09, 19.88, 104.72, 13.56);
            path0_28.curveTo(110.56, 9.73, 111.92, 22.32, 115.86, 27.01);
            path0_28.curveTo(123.27, 35.84, 116.66, 49.49, 125.32, 58.14);
            path0_28.lineTo(125.31, 58.14);
            path0_28.closePath();
            path0_28.fill(g2);
        }

        {
            BirbPath path0_29 = new BirbPath();
            path0_29.setFillColor(new Color(232, 233, 235));
            path0_29.moveTo(247.58, 185.08);
            path0_29.curveTo(246.62, 186.04, 245.66, 187.01, 244.70, 187.97);
            path0_29.curveTo(243.50, 190.37, 242.30, 192.76, 241.10, 195.16);
            path0_29.curveTo(240.46, 195.81, 239.81, 196.46, 239.17, 197.10);
            path0_29.curveTo(238.46, 197.74, 237.75, 198.39, 237.04, 199.03);
            path0_29.curveTo(236.07, 199.74, 235.10, 200.45, 234.13, 201.16);
            path0_29.curveTo(230.59, 191.08, 217.89, 182.79, 228.03, 170.03);
            path0_29.curveTo(229.09, 159.67, 230.12, 149.31, 231.26, 138.96);
            path0_29.curveTo(231.43, 137.45, 232.10, 135.99, 232.55, 134.51);
            path0_29.curveTo(233.66, 134.95, 235.78, 135.62, 235.73, 135.81);
            path0_29.curveTo(231.59, 154.21, 243.19, 168.79, 247.59, 185.08);
            path0_29.lineTo(247.58, 185.08);
            path0_29.closePath();
            path0_29.fill(g2);
        }

        {
            BirbPath path0_30 = new BirbPath();
            path0_30.setFillColor(new Color(232, 233, 235));
            path0_30.moveTo(114.77, 306.98);
            path0_30.curveTo(113.80, 310.29, 112.82, 313.61, 111.85, 316.92);
            path0_30.curveTo(95.38, 317.47, 100.38, 297.30, 88.85, 293.09);
            path0_30.curveTo(93.57, 288.31, 98.30, 283.54, 103.02, 278.76);
            path0_30.curveTo(103.06, 280.11, 103.42, 281.56, 103.05, 282.80);
            path0_30.curveTo(102.64, 284.18, 100.81, 285.46, 100.95, 286.61);
            path0_30.curveTo(101.32, 289.60, 102.44, 292.50, 103.26, 295.43);
            path0_30.curveTo(115.96, 290.45, 101.00, 313.04, 114.77, 306.98);
            path0_30.lineTo(114.77, 306.98);
            path0_30.closePath();
            path0_30.fill(g2);
        }

        {
            BirbPath path0_31 = new BirbPath();
            path0_31.setFillColor(new Color(232, 233, 235));
            path0_31.moveTo(78.97, 459.38);
            path0_31.curveTo(82.89, 449.39, 85.49, 442.76, 88.09, 436.13);
            path0_31.curveTo(89.41, 438.38, 92.25, 441.02, 91.78, 442.80);
            path0_31.curveTo(90.10, 449.24, 87.34, 455.40, 84.67, 461.52);
            path0_31.curveTo(84.62, 461.63, 80.51, 459.96, 78.97, 459.38);
            path0_31.closePath();
            path0_31.fill(g2);
        }

        {
            BirbPath path0_32 = new BirbPath();
            path0_32.setFillColor(new Color(232, 233, 235));
            path0_32.moveTo(100.98, 270.18);
            path0_32.curveTo(99.99, 271.25, 97.92, 273.50, 95.85, 275.75);
            path0_32.curveTo(94.72, 272.03, 93.46, 268.34, 92.57, 264.56);
            path0_32.curveTo(92.42, 263.94, 93.99, 262.17, 94.52, 262.26);
            path0_32.curveTo(97.79, 262.83, 101.21, 263.56, 100.98, 270.18);
            path0_32.closePath();
            path0_32.fill(g2);
        }

        {
            BirbPath path0_33 = new BirbPath();
            path0_33.setFillColor(new Color(232, 233, 235));
            path0_33.moveTo(129.02, 260.99);
            path0_33.curveTo(124.36, 275.65, 119.70, 290.32, 115.03, 304.98);
            path0_33.curveTo(116.05, 289.16, 119.14, 274.00, 129.02, 260.99);
            path0_33.closePath();
            path0_33.fill(g2);
        }

        {
            BirbPath path0_34 = new BirbPath();
            path0_34.setFillColor(new Color(206, 198, 196));
            path0_34.moveTo(189.81, 220.38);
            path0_34.curveTo(187.82, 221.07, 185.84, 221.76, 183.85, 222.46);
            path0_34.curveTo(183.20, 222.72, 182.55, 222.98, 181.90, 223.25);
            path0_34.curveTo(180.56, 223.71, 179.21, 224.18, 177.87, 224.64);
            path0_34.curveTo(170.95, 227.78, 164.02, 230.92, 157.10, 234.06);
            path0_34.curveTo(167.08, 229.05, 177.07, 224.04, 187.05, 219.03);
            path0_34.curveTo(188.04, 219.24, 189.03, 219.45, 190.02, 219.66);
            path0_34.curveTo(189.96, 219.91, 189.89, 220.15, 189.82, 220.39);
            path0_34.lineTo(189.81, 220.38);
            path0_34.closePath();
            path0_34.fill(g2);
        }

        {
            BirbPath path0_35 = new BirbPath();
            path0_35.setFillColor(new Color(235, 236, 238));
            path0_35.moveTo(157.65, 37.25);
            path0_35.curveTo(154.90, 40.14, 152.64, 42.60, 150.19, 44.84);
            path0_35.curveTo(150.06, 44.96, 147.31, 42.73, 147.43, 42.52);
            path0_35.curveTo(149.37, 39.04, 151.58, 35.71, 153.73, 32.34);
            path0_35.curveTo(154.73, 33.60, 155.74, 34.85, 157.66, 37.25);
            path0_35.lineTo(157.65, 37.25);
            path0_35.closePath();
            path0_35.fill(g2);
        }

        {
            BirbPath path0_36 = new BirbPath();
            path0_36.setFillColor(new Color(232, 233, 235));
            path0_36.moveTo(200.04, 130.05);
            path0_36.curveTo(200.71, 127.48, 201.37, 124.91, 202.04, 122.34);
            path0_36.curveTo(203.71, 125.24, 205.37, 128.15, 207.04, 131.05);
            path0_36.curveTo(206.37, 132.05, 205.71, 133.05, 205.04, 134.05);
            path0_36.curveTo(204.37, 134.05, 203.71, 134.05, 203.04, 134.05);
            path0_36.lineTo(200.04, 130.05);
            path0_36.closePath();
            path0_36.fill(g2);
        }

        {
            BirbPath path0_37 = new BirbPath();
            path0_37.setFillColor(new Color(206, 198, 196));
            path0_37.moveTo(216.65, 209.48);
            path0_37.curveTo(208.39, 212.77, 200.14, 216.06, 191.88, 219.36);
            path0_37.curveTo(193.31, 218.28, 194.75, 217.20, 196.18, 216.11);
            path0_37.lineTo(209.03, 211.02);
            path0_37.curveTo(210.38, 210.39, 211.73, 209.76, 213.07, 209.13);
            path0_37.curveTo(214.26, 209.25, 215.45, 209.36, 216.64, 209.48);
            path0_37.lineTo(216.65, 209.48);
            path0_37.closePath();
            path0_37.fill(g2);
        }

        {
            BirbPath path0_38 = new BirbPath();
            path0_38.setFillColor(new Color(232, 233, 235));
            path0_38.moveTo(67.16, 27.16);
            path0_38.curveTo(66.30, 28.35, 65.51, 29.44, 64.73, 30.52);
            path0_38.curveTo(63.86, 28.95, 62.27, 27.36, 62.30, 25.81);
            path0_38.curveTo(62.34, 24.00, 63.78, 22.21, 64.62, 20.42);
            path0_38.curveTo(65.43, 22.58, 66.25, 24.74, 67.16, 27.16);
            path0_38.lineTo(67.16, 27.16);
            path0_38.closePath();
            path0_38.fill(g2);
        }

        {
            BirbPath path0_39 = new BirbPath();
            path0_39.setFillColor(new Color(232, 233, 235));
            path0_39.moveTo(109.49, 328.95);
            path0_39.curveTo(108.14, 333.56, 106.79, 338.18, 105.43, 342.79);
            path0_39.curveTo(108.53, 338.69, 100.85, 331.43, 109.49, 328.95);
            path0_39.closePath();
            path0_39.fill(g2);
        }

        {
            BirbPath path0_40 = new BirbPath();
            path0_40.setFillColor(new Color(232, 233, 235));
            path0_40.moveTo(104.32, 350.01);
            path0_40.curveTo(104.56, 352.04, 104.79, 354.07, 105.03, 356.10);
            path0_40.curveTo(103.17, 353.74, 100.63, 351.59, 99.79, 348.91);
            path0_40.curveTo(99.47, 347.89, 103.07, 345.65, 104.89, 343.96);
            path0_40.lineTo(104.33, 350.00);
            path0_40.lineTo(104.32, 350.01);
            path0_40.closePath();
            path0_40.fill(g2);
        }

        {
            BirbPath path0_41 = new BirbPath();
            path0_41.setFillColor(new Color(235, 236, 238));
            path0_41.moveTo(153.64, 21.95);
            path0_41.curveTo(152.95, 23.63, 152.31, 25.16, 151.68, 26.69);
            path0_41.curveTo(150.81, 24.92, 149.32, 23.17, 149.27, 21.38);
            path0_41.curveTo(149.23, 19.83, 150.84, 18.25, 151.72, 16.68);
            path0_41.curveTo(152.33, 18.36, 152.94, 20.05, 153.64, 21.96);
            path0_41.lineTo(153.64, 21.95);
            path0_41.closePath();
            path0_41.fill(g2);
        }

        {
            BirbPath path0_42 = new BirbPath();
            path0_42.setFillColor(new Color(206, 198, 196));
            path0_42.moveTo(157.09, 234.05);
            path0_42.curveTo(153.05, 236.27, 149.02, 238.48, 144.98, 240.70);
            path0_42.curveTo(149.02, 238.48, 153.05, 236.27, 157.09, 234.05);
            path0_42.lineTo(157.09, 234.05);
            path0_42.closePath();
            path0_42.fill(g2);
        }

        {
            BirbPath path0_43 = new BirbPath();
            path0_43.setFillColor(new Color(146, 82, 61));
            path0_43.moveTo(165.45, 512.68);
            path0_43.curveTo(165.45, 516.05, 165.45, 519.43, 165.44, 522.80);
            path0_43.curveTo(165.44, 519.43, 165.44, 516.05, 165.45, 512.68);
            path0_43.closePath();
            path0_43.fill(g2);
        }

        {
            BirbPath path0_44 = new BirbPath();
            path0_44.setFillColor(new Color(206, 198, 196));
            path0_44.moveTo(138.80, 246.95);
            path0_44.curveTo(136.86, 249.93, 134.92, 252.91, 132.99, 255.88);
            path0_44.curveTo(134.93, 252.90, 136.87, 249.92, 138.80, 246.95);
            path0_44.closePath();
            path0_44.fill(g2);
        }

        {
            BirbPath path0_45 = new BirbPath();
            path0_45.setFillColor(new Color(232, 233, 235));
            path0_45.moveTo(196.18, 216.11);
            path0_45.curveTo(194.75, 217.19, 193.31, 218.27, 191.88, 219.36);
            path0_45.curveTo(191.87, 219.56, 191.90, 219.75, 191.99, 219.93);
            path0_45.curveTo(191.33, 219.84, 190.67, 219.74, 190.01, 219.65);
            path0_45.curveTo(189.02, 219.44, 188.03, 219.23, 187.04, 219.02);
            path0_45.curveTo(190.09, 218.05, 193.14, 217.08, 196.18, 216.11);
            path0_45.closePath();
            path0_45.fill(g2);
        }

        {
            BirbPath path0_46 = new BirbPath();
            path0_46.setFillColor(new Color(222, 151, 123));
            path0_46.moveTo(100.17, 400.07);
            path0_46.curveTo(100.18, 402.33, 100.19, 404.58, 100.20, 406.84);
            path0_46.curveTo(100.19, 404.58, 100.18, 402.33, 100.17, 400.07);
            path0_46.closePath();
            path0_46.fill(g2);
        }

        {
            BirbPath path0_47 = new BirbPath();
            path0_47.setFillColor(new Color(190, 116, 95));
            path0_47.moveTo(122.42, 447.95);
            path0_47.curveTo(123.57, 449.97, 124.73, 451.99, 125.88, 454.00);
            path0_47.curveTo(124.73, 451.98, 123.57, 449.97, 122.42, 447.95);
            path0_47.closePath();
            path0_47.fill(g2);
        }

        {
            BirbPath path0_48 = new BirbPath();
            path0_48.setFillColor(new Color(232, 233, 235));
            path0_48.moveTo(213.08, 209.13);
            path0_48.curveTo(211.73, 209.76, 210.38, 210.39, 209.04, 211.02);
            path0_48.curveTo(209.25, 207.95, 210.50, 207.12, 213.08, 209.13);
            path0_48.closePath();
            path0_48.fill(g2);
        }

        {
            BirbPath path0_49 = new BirbPath();
            path0_49.setFillColor(new Color(190, 116, 95));
            path0_49.moveTo(128.50, 458.91);
            path0_49.curveTo(129.36, 460.47, 130.22, 462.02, 131.08, 463.58);
            path0_49.curveTo(130.22, 462.02, 129.36, 460.47, 128.50, 458.91);
            path0_49.closePath();
            path0_49.fill(g2);
        }

        {
            BirbPath path0_50 = new BirbPath();
            path0_50.setFillColor(new Color(190, 116, 95));
            path0_50.moveTo(119.48, 441.89);
            path0_50.curveTo(120.27, 443.60, 121.05, 445.32, 121.84, 447.03);
            path0_50.curveTo(121.05, 445.32, 120.27, 443.60, 119.48, 441.89);
            path0_50.closePath();
            path0_50.fill(g2);
        }

        {
            BirbPath path0_51 = new BirbPath();
            path0_51.setFillColor(new Color(206, 198, 196));
            path0_51.moveTo(231.21, 203.13);
            path0_51.curveTo(230.47, 204.31, 229.72, 205.49, 228.98, 206.67);
            path0_51.curveTo(228.98, 205.78, 228.98, 204.90, 228.98, 204.01);
            path0_51.curveTo(229.73, 203.72, 230.47, 203.42, 231.22, 203.13);
            path0_51.lineTo(231.21, 203.13);
            path0_51.closePath();
            path0_51.fill(g2);
        }

        {
            BirbPath path0_52 = new BirbPath();
            path0_52.setFillColor(new Color(232, 233, 235));
            path0_52.moveTo(110.66, 320.97);
            path0_52.curveTo(110.37, 322.27, 110.07, 323.58, 109.78, 324.88);
            path0_52.curveTo(110.07, 323.58, 110.37, 322.27, 110.66, 320.97);
            path0_52.closePath();
            path0_52.fill(g2);
        }

        {
            BirbPath path0_53 = new BirbPath();
            path0_53.setFillColor(new Color(232, 233, 235));
            path0_53.moveTo(228.97, 204.01);
            path0_53.curveTo(228.97, 204.90, 228.97, 205.78, 228.97, 206.67);
            path0_53.curveTo(228.31, 206.69, 227.65, 206.71, 227.00, 206.74);
            path0_53.curveTo(227.00, 206.37, 227.02, 206.00, 227.03, 205.63);
            path0_53.curveTo(227.68, 205.09, 228.32, 204.55, 228.97, 204.01);
            path0_53.lineTo(228.97, 204.01);
            path0_53.closePath();
            path0_53.fill(g2);
        }

        {
            BirbPath path0_54 = new BirbPath();
            path0_54.setFillColor(new Color(232, 233, 235));
            path0_54.moveTo(224.56, 207.04);
            path0_54.curveTo(223.90, 206.61, 223.24, 206.17, 222.58, 205.74);
            path0_54.curveTo(223.39, 205.78, 224.21, 205.83, 225.02, 205.87);
            path0_54.curveTo(224.87, 206.26, 224.71, 206.65, 224.56, 207.04);
            path0_54.lineTo(224.56, 207.04);
            path0_54.closePath();
            path0_54.fill(g2);
        }

        {
            BirbPath path0_55 = new BirbPath();
            path0_55.setFillColor(new Color(235, 236, 238));
            path0_55.moveTo(203.04, 134.04);
            path0_55.curveTo(203.71, 134.04, 204.37, 134.04, 205.04, 134.04);
            path0_55.curveTo(204.71, 134.51, 204.37, 134.99, 204.04, 135.46);
            path0_55.lineTo(203.04, 134.04);
            path0_55.closePath();
            path0_55.fill(g2);
        }

        {
            BirbPath path0_56 = new BirbPath();
            path0_56.setFillColor(new Color(206, 198, 196));
            path0_56.moveTo(132.94, 255.94);
            path0_56.curveTo(132.38, 256.74, 131.82, 257.53, 131.26, 258.33);
            path0_56.curveTo(131.82, 257.53, 132.38, 256.74, 132.94, 255.94);
            path0_56.closePath();
            path0_56.fill(g2);
        }

        {
            BirbPath path0_57 = new BirbPath();
            path0_57.setFillColor(new Color(146, 82, 61));
            path0_57.moveTo(164.12, 525.23);
            path0_57.curveTo(164.01, 525.79, 163.91, 526.36, 163.80, 526.92);
            path0_57.curveTo(163.91, 526.36, 164.01, 525.80, 164.12, 525.23);
            path0_57.closePath();
            path0_57.fill(g2);
        }

        {
            BirbPath path0_58 = new BirbPath();
            path0_58.setFillColor(new Color(206, 198, 196));
            path0_58.moveTo(234.24, 201.24);
            path0_58.curveTo(233.49, 201.75, 232.73, 202.26, 231.98, 202.77);
            path0_58.curveTo(232.73, 202.26, 233.49, 201.75, 234.24, 201.24);
            path0_58.closePath();
            path0_58.fill(g2);
        }

        {
            BirbPath path0_59 = new BirbPath();
            path0_59.setFillColor(new Color(190, 116, 95));
            path0_59.moveTo(126.43, 454.93);
            path0_59.curveTo(126.86, 455.69, 127.28, 456.46, 127.71, 457.22);
            path0_59.curveTo(127.28, 456.46, 126.86, 455.69, 126.43, 454.93);
            path0_59.closePath();
            path0_59.fill(g2);
        }

        {
            BirbPath path0_60 = new BirbPath();
            path0_60.setFillColor(new Color(206, 198, 196));
            path0_60.moveTo(142.05, 243.02);
            path0_60.curveTo(141.43, 243.76, 140.82, 244.50, 140.20, 245.24);
            path0_60.curveTo(140.82, 244.50, 141.43, 243.76, 142.05, 243.02);
            path0_60.closePath();
            path0_60.fill(g2);
        }

        {
            BirbPath path0_61 = new BirbPath();
            path0_61.setFillColor(new Color(206, 198, 196));
            path0_61.moveTo(224.56, 207.04);
            path0_61.curveTo(224.71, 206.65, 224.87, 206.26, 225.02, 205.87);
            path0_61.curveTo(225.69, 205.79, 226.36, 205.71, 227.03, 205.63);
            path0_61.curveTo(227.03, 206.00, 227.01, 206.37, 227.00, 206.74);
            path0_61.curveTo(226.28, 206.90, 225.56, 207.06, 224.85, 207.22);
            path0_61.curveTo(224.85, 207.22, 224.56, 207.04, 224.56, 207.04);
            path0_61.closePath();
            path0_61.fill(g2);
        }

        {
            BirbPath path0_62 = new BirbPath();
            path0_62.setFillColor(new Color(146, 82, 61));
            path0_62.moveTo(159.12, 548.18);
            path0_62.curveTo(159.06, 548.68, 159.00, 549.17, 158.94, 549.67);
            path0_62.curveTo(159.00, 549.17, 159.06, 548.68, 159.12, 548.18);
            path0_62.closePath();
            path0_62.fill(g2);
        }

        {
            BirbPath path0_63 = new BirbPath();
            path0_63.setFillColor(new Color(206, 198, 196));
            path0_63.moveTo(144.28, 241.15);
            path0_63.curveTo(143.54, 241.77, 142.80, 242.39, 142.06, 243.01);
            path0_63.curveTo(142.80, 242.39, 143.54, 241.77, 144.28, 241.15);
            path0_63.closePath();
            path0_63.fill(g2);
        }

        {
            BirbPath path0_64 = new BirbPath();
            path0_64.setFillColor(new Color(146, 82, 61));
            path0_64.moveTo(156.25, 562.75);
            path0_64.curveTo(156.12, 563.47, 155.98, 564.19, 155.85, 564.90);
            path0_64.curveTo(155.98, 564.18, 156.12, 563.46, 156.25, 562.75);
            path0_64.closePath();
            path0_64.fill(g2);
        }

        {
            BirbPath path0_65 = new BirbPath();
            path0_65.setFillColor(new Color(222, 151, 123));
            path0_65.moveTo(100.85, 409.04);
            path0_65.curveTo(101.02, 409.22, 101.12, 409.43, 101.15, 409.68);
            path0_65.curveTo(101.15, 409.68, 100.76, 409.47, 100.76, 409.47);
            path0_65.lineTo(100.85, 409.04);
            path0_65.closePath();
            path0_65.fill(g2);
        }

        {
            BirbPath path0_66 = new BirbPath();
            path0_66.setFillColor(new Color(222, 151, 123));
            path0_66.moveTo(101.28, 409.97);
            path0_66.curveTo(101.46, 410.36, 101.64, 410.75, 101.82, 411.13);
            path0_66.curveTo(101.64, 410.74, 101.46, 410.35, 101.28, 409.97);
            path0_66.closePath();
            path0_66.fill(g2);
        }

        {
            BirbPath path0_67 = new BirbPath();
            path0_67.setFillColor(new Color(190, 116, 95));
            path0_67.moveTo(144.94, 484.20);
            path0_67.curveTo(145.18, 484.53, 145.42, 484.87, 145.65, 485.20);
            path0_67.curveTo(145.41, 484.87, 145.17, 484.54, 144.94, 484.20);
            path0_67.closePath();
            path0_67.fill(g2);
        }

        {
            BirbPath path0_68 = new BirbPath();
            path0_68.setFillColor(new Color(190, 116, 95));
            path0_68.moveTo(143.20, 482.06);
            path0_68.curveTo(143.44, 482.34, 143.68, 482.62, 143.91, 482.89);
            path0_68.curveTo(143.67, 482.61, 143.43, 482.33, 143.20, 482.06);
            path0_68.closePath();
            path0_68.fill(g2);
        }

        {
            BirbPath path0_69 = new BirbPath();
            path0_69.setFillColor(new Color(222, 151, 123));
            path0_69.moveTo(317.24, 224.07);
            path0_69.curveTo(317.25, 223.02, 317.26, 221.97, 317.27, 220.92);
            path0_69.curveTo(316.99, 220.02, 316.97, 218.58, 316.39, 218.31);
            path0_69.curveTo(303.37, 212.23, 290.30, 206.27, 277.23, 200.29);
            path0_69.curveTo(278.80, 193.07, 278.89, 184.81, 271.11, 182.62);
            path0_69.curveTo(263.32, 180.44, 267.07, 190.81, 263.14, 193.87);
            path0_69.curveTo(259.50, 192.30, 255.35, 191.12, 256.98, 185.62);
            path0_69.curveTo(257.08, 184.38, 257.19, 183.14, 257.29, 181.89);
            path0_69.curveTo(258.15, 177.60, 259.01, 173.31, 259.87, 169.01);
            path0_69.curveTo(259.27, 166.31, 258.67, 163.60, 258.06, 160.90);
            path0_69.curveTo(258.06, 160.64, 258.06, 160.39, 258.06, 160.13);
            path0_69.curveTo(257.61, 156.30, 257.16, 152.48, 256.70, 148.66);
            path0_69.curveTo(255.68, 142.73, 254.66, 136.79, 253.65, 130.86);
            path0_69.curveTo(254.09, 130.82, 254.52, 130.78, 254.95, 130.74);
            path0_69.curveTo(255.84, 131.06, 256.73, 131.38, 257.63, 131.70);
            path0_69.curveTo(257.89, 130.81, 258.15, 129.91, 258.41, 129.02);
            path0_69.curveTo(258.39, 127.72, 258.38, 126.42, 258.36, 125.12);
            path0_69.curveTo(256.12, 110.19, 266.83, 100.56, 273.09, 89.11);
            path0_69.curveTo(276.56, 86.11, 280.03, 83.11, 283.51, 80.11);
            path0_69.curveTo(303.31, 79.74, 323.17, 78.34, 342.87, 79.55);
            path0_69.curveTo(349.99, 79.98, 357.87, 85.50, 363.26, 90.86);
            path0_69.curveTo(366.98, 94.57, 358.52, 92.56, 357.84, 95.71);
            path0_69.curveTo(354.61, 95.89, 351.39, 96.07, 348.16, 96.26);
            path0_69.curveTo(346.13, 97.85, 342.51, 99.27, 342.32, 101.06);
            path0_69.curveTo(339.22, 129.57, 371.69, 110.91, 377.77, 127.58);
            path0_69.curveTo(378.70, 127.06, 379.64, 126.55, 380.57, 126.03);
            path0_69.curveTo(379.46, 142.00, 377.23, 157.51, 363.34, 168.26);
            path0_69.curveTo(349.84, 169.41, 336.35, 170.57, 322.85, 171.72);
            path0_69.lineTo(314.99, 170.98);
            path0_69.curveTo(306.25, 169.44, 297.56, 167.32, 288.76, 166.63);
            path0_69.curveTo(285.15, 166.35, 279.24, 164.87, 278.15, 171.77);
            path0_69.curveTo(277.23, 177.62, 280.63, 181.39, 284.97, 183.24);
            path0_69.curveTo(304.91, 191.70, 324.93, 201.20, 346.86, 189.01);
            path0_69.curveTo(347.61, 190.95, 348.36, 192.89, 349.11, 194.83);
            path0_69.curveTo(349.11, 194.83, 349.03, 194.97, 349.03, 194.97);
            path0_69.curveTo(349.03, 195.24, 349.03, 195.51, 349.07, 195.77);
            path0_69.curveTo(348.53, 196.87, 348.00, 197.97, 347.46, 199.06);
            path0_69.curveTo(347.62, 200.72, 347.79, 202.38, 347.95, 204.04);
            path0_69.curveTo(347.71, 205.01, 347.47, 205.98, 347.23, 206.95);
            path0_69.curveTo(346.38, 208.59, 345.52, 210.22, 344.67, 211.86);
            path0_69.curveTo(335.71, 216.33, 332.03, 232.71, 317.23, 224.05);
            path0_69.lineTo(317.24, 224.07);
            path0_69.moveTo(305.09, 105.08);
            path0_69.curveTo(304.74, 104.99, 304.39, 104.89, 304.04, 104.80);
            path0_69.curveTo(299.37, 105.90, 294.70, 106.99, 290.03, 108.09);
            path0_69.curveTo(288.59, 108.95, 287.14, 109.80, 285.70, 110.66);
            path0_69.curveTo(286.11, 111.06, 286.49, 111.78, 286.95, 111.83);
            path0_69.curveTo(296.00, 112.91, 305.05, 114.45, 314.13, 114.60);
            path0_69.curveTo(316.97, 114.65, 319.95, 111.01, 322.67, 108.83);
            path0_69.curveTo(323.00, 108.57, 322.22, 105.97, 321.85, 105.94);
            path0_69.curveTo(319.86, 105.81, 317.83, 106.14, 315.82, 106.32);
            path0_69.curveTo(313.20, 105.85, 310.59, 105.38, 307.97, 104.91);
            path0_69.curveTo(307.01, 104.97, 306.06, 105.02, 305.10, 105.08);
            path0_69.lineTo(305.09, 105.08);
            path0_69.moveTo(318.04, 135.23);
            path0_69.curveTo(320.07, 135.48, 322.10, 135.72, 324.13, 135.97);
            path0_69.curveTo(326.29, 135.84, 328.46, 135.70, 330.62, 135.57);
            path0_69.curveTo(331.05, 135.89, 331.48, 136.21, 331.91, 136.53);
            path0_69.curveTo(336.41, 136.91, 340.92, 137.71, 345.39, 137.52);
            path0_69.curveTo(348.38, 137.40, 351.30, 135.87, 354.26, 134.97);
            path0_69.curveTo(351.79, 133.13, 349.41, 129.93, 346.83, 129.77);
            path0_69.curveTo(342.26, 129.49, 337.58, 131.05, 332.95, 131.84);
            path0_69.curveTo(332.23, 131.95, 331.51, 132.07, 330.78, 132.18);
            path0_69.curveTo(329.83, 131.96, 328.88, 131.74, 327.93, 131.52);
            path0_69.curveTo(328.51, 130.65, 328.96, 129.65, 329.68, 128.92);
            path0_69.curveTo(335.45, 123.09, 333.38, 115.85, 333.11, 109.00);
            path0_69.curveTo(333.10, 108.71, 329.32, 107.72, 328.29, 108.45);
            path0_69.curveTo(319.30, 114.87, 322.10, 123.79, 323.66, 132.39);
            path0_69.curveTo(323.78, 132.67, 323.71, 132.88, 323.43, 133.02);
            path0_69.lineTo(318.17, 133.92);
            path0_69.curveTo(317.98, 131.81, 317.79, 129.70, 317.60, 127.58);
            path0_69.curveTo(316.47, 128.72, 314.19, 130.29, 314.43, 130.92);
            path0_69.curveTo(315.06, 132.58, 316.77, 133.83, 318.04, 135.24);
            path0_69.lineTo(318.04, 135.23);
            path0_69.moveTo(311.11, 91.82);
            path0_69.curveTo(306.70, 89.26, 302.31, 88.87, 297.96, 91.98);
            path0_69.curveTo(297.64, 92.01, 297.32, 92.04, 297.00, 92.08);
            path0_69.curveTo(295.86, 92.56, 294.72, 93.03, 293.58, 93.51);
            path0_69.curveTo(294.71, 93.70, 295.85, 93.88, 296.98, 94.07);
            path0_69.curveTo(297.61, 94.13, 298.24, 94.20, 298.87, 94.26);
            path0_69.curveTo(299.65, 94.76, 300.42, 95.25, 301.20, 95.75);
            path0_69.curveTo(303.40, 95.97, 305.60, 96.18, 307.81, 96.40);
            path0_69.curveTo(308.53, 96.63, 309.26, 96.86, 309.98, 97.09);
            path0_69.curveTo(310.61, 97.15, 311.24, 97.20, 311.87, 97.26);
            path0_69.curveTo(315.97, 98.76, 320.03, 100.38, 324.22, 101.58);
            path0_69.curveTo(324.74, 101.73, 326.86, 98.89, 326.64, 98.57);
            path0_69.curveTo(325.28, 96.64, 323.45, 95.04, 321.77, 93.33);
            path0_69.curveTo(318.22, 92.83, 314.66, 92.33, 311.11, 91.83);
            path0_69.lineTo(311.11, 91.82);
            path0_69.moveTo(340.79, 157.80);
            path0_69.curveTo(343.19, 156.27, 345.59, 154.74, 347.98, 153.22);
            path0_69.curveTo(350.56, 152.68, 353.14, 152.13, 355.72, 151.59);
            path0_69.curveTo(350.80, 149.07, 345.88, 146.55, 340.97, 144.03);
            path0_69.curveTo(336.32, 143.96, 331.67, 143.89, 327.02, 143.82);
            path0_69.curveTo(322.73, 145.12, 318.45, 146.42, 314.16, 147.72);
            path0_69.curveTo(311.64, 147.18, 309.12, 146.44, 306.58, 146.34);
            path0_69.curveTo(306.26, 146.33, 305.80, 149.64, 305.41, 151.42);
            path0_69.curveTo(307.01, 151.52, 308.61, 151.63, 310.21, 151.73);
            path0_69.curveTo(313.15, 151.36, 316.10, 151.00, 319.04, 150.63);
            path0_69.curveTo(322.09, 153.02, 325.14, 155.42, 328.18, 157.81);
            path0_69.curveTo(332.38, 157.81, 336.59, 157.81, 340.79, 157.81);
            path0_69.lineTo(340.79, 157.80);
            path0_69.moveTo(287.16, 117.56);
            path0_69.curveTo(280.55, 119.32, 273.21, 118.25, 273.37, 125.45);
            path0_69.curveTo(273.48, 130.68, 275.40, 138.99, 282.71, 137.58);
            path0_69.curveTo(290.12, 136.15, 296.81, 130.96, 303.81, 127.41);
            path0_69.curveTo(297.90, 123.91, 291.99, 120.41, 287.16, 117.55);
            path0_69.lineTo(287.16, 117.56);
            path0_69.moveTo(364.73, 164.62);
            path0_69.curveTo(364.85, 164.66, 364.96, 164.71, 365.08, 164.75);
            path0_69.curveTo(365.12, 164.64, 365.21, 164.48, 365.18, 164.44);
            path0_69.curveTo(365.11, 164.36, 364.96, 164.34, 364.85, 164.30);
            path0_69.curveTo(364.81, 164.41, 364.78, 164.51, 364.74, 164.62);
            path0_69.lineTo(364.73, 164.62);
            path0_69.fill(g2);
        }

        {
            BirbPath path0_70 = new BirbPath();
            path0_70.setFillColor(new Color(238, 239, 241));
            path0_70.moveTo(531.92, 193.02);
            path0_70.curveTo(527.12, 199.75, 522.59, 206.70, 517.34, 213.07);
            path0_70.curveTo(515.84, 214.89, 512.28, 215.00, 509.66, 215.89);
            path0_70.curveTo(510.18, 212.64, 510.26, 209.23, 511.31, 206.16);
            path0_70.curveTo(513.39, 200.11, 518.53, 194.97, 514.80, 187.57);
            path0_70.curveTo(508.82, 175.71, 504.34, 189.08, 500.27, 188.17);
            path0_70.curveTo(481.79, 184.02, 486.90, 167.58, 490.14, 158.01);
            path0_70.curveTo(494.80, 144.23, 491.45, 132.69, 488.98, 120.13);
            path0_70.curveTo(488.38, 117.08, 489.50, 113.58, 490.41, 110.45);
            path0_70.curveTo(490.59, 109.85, 494.64, 109.39, 494.99, 109.99);
            path0_70.curveTo(497.96, 115.02, 508.82, 106.47, 507.96, 117.61);
            path0_70.curveTo(507.84, 119.24, 507.56, 121.66, 508.45, 122.43);
            path0_70.curveTo(520.70, 132.88, 512.67, 145.21, 512.35, 157.03);
            path0_70.curveTo(511.96, 171.38, 523.02, 179.78, 531.91, 189.03);
            path0_70.curveTo(531.91, 190.36, 531.91, 191.69, 531.91, 193.02);
            path0_70.lineTo(531.92, 193.02);
            path0_70.closePath();
            path0_70.fill(g2);
        }

        {
            BirbPath path0_71 = new BirbPath();
            path0_71.setFillColor(new Color(238, 239, 241));
            path0_71.moveTo(478.93, 186.40);
            path0_71.curveTo(469.64, 180.71, 461.83, 175.27, 453.41, 171.01);
            path0_71.curveTo(448.44, 168.50, 446.15, 164.88, 446.58, 160.17);
            path0_71.curveTo(446.74, 158.46, 451.06, 157.21, 453.37, 155.59);
            path0_71.curveTo(454.71, 154.65, 455.84, 153.39, 457.05, 152.27);
            path0_71.curveTo(460.48, 149.10, 457.32, 136.48, 462.41, 141.53);
            path0_71.curveTo(469.60, 148.67, 485.49, 150.06, 482.35, 169.43);
            path0_71.curveTo(481.00, 177.72, 474.31, 192.72, 485.03, 203.61);
            path0_71.curveTo(487.99, 206.61, 488.25, 217.93, 486.10, 219.19);
            path0_71.curveTo(480.62, 222.40, 468.84, 225.10, 467.09, 222.65);
            path0_71.curveTo(459.63, 212.22, 435.68, 217.91, 440.80, 196.00);
            path0_71.curveTo(441.30, 193.86, 441.55, 191.66, 441.91, 189.49);
            path0_71.curveTo(442.75, 190.99, 444.30, 192.49, 444.32, 194.00);
            path0_71.curveTo(444.40, 200.34, 447.35, 204.49, 453.56, 202.63);
            path0_71.curveTo(462.18, 200.05, 471.77, 198.09, 478.92, 186.38);
            path0_71.lineTo(478.93, 186.40);
            path0_71.closePath();
            path0_71.fill(g2);
        }

        {
            BirbPath path0_72 = new BirbPath();
            path0_72.setFillColor(new Color(238, 239, 241));
            path0_72.moveTo(261.63, 64.42);
            path0_72.curveTo(251.94, 62.90, 255.15, 54.57, 256.57, 50.70);
            path0_72.curveTo(261.49, 37.31, 267.27, 24.03, 274.58, 11.83);
            path0_72.curveTo(276.92, 7.92, 285.05, 5.88, 290.52, 5.90);
            path0_72.curveTo(295.83, 5.92, 296.45, 11.87, 297.24, 17.03);
            path0_72.curveTo(298.82, 27.39, 301.68, 37.56, 304.01, 47.81);
            path0_72.curveTo(303.38, 48.20, 302.75, 48.59, 302.12, 48.97);
            path0_72.curveTo(301.39, 49.14, 300.66, 49.32, 299.92, 49.49);
            path0_72.curveTo(299.33, 49.65, 298.75, 49.80, 298.16, 49.96);
            path0_72.curveTo(296.80, 50.09, 295.44, 50.22, 294.08, 50.35);
            path0_72.curveTo(293.37, 50.49, 292.66, 50.63, 291.95, 50.77);
            path0_72.curveTo(289.28, 51.68, 286.62, 52.59, 283.95, 53.50);
            path0_72.curveTo(282.32, 54.15, 280.70, 54.79, 279.07, 55.44);
            path0_72.curveTo(278.34, 55.70, 277.60, 55.96, 276.87, 56.22);
            path0_72.curveTo(272.20, 58.98, 267.53, 61.74, 262.86, 64.50);
            path0_72.curveTo(262.45, 64.47, 262.05, 64.44, 261.64, 64.41);
            path0_72.lineTo(261.63, 64.42);
            path0_72.closePath();
            path0_72.fill(g2);
        }

        {
            BirbPath path0_73 = new BirbPath();
            path0_73.setFillColor(new Color(146, 82, 61));
            path0_73.moveTo(262.84, 64.51);
            path0_73.curveTo(267.51, 61.75, 272.18, 58.99, 276.85, 56.23);
            path0_73.curveTo(283.39, 69.22, 289.09, 48.32, 295.49, 55.77);
            path0_73.curveTo(297.86, 53.67, 303.28, 54.53, 302.10, 48.98);
            path0_73.curveTo(302.73, 48.59, 303.36, 48.20, 303.99, 47.82);
            path0_73.curveTo(304.97, 47.85, 305.94, 47.87, 306.92, 47.90);
            path0_73.curveTo(308.60, 48.13, 310.29, 48.36, 311.97, 48.59);
            path0_73.curveTo(310.74, 49.99, 309.51, 51.39, 308.28, 52.80);
            path0_73.curveTo(314.73, 53.14, 321.18, 53.48, 327.63, 53.82);
            path0_73.curveTo(326.43, 52.09, 325.23, 50.36, 324.03, 48.63);
            path0_73.curveTo(326.33, 48.83, 328.63, 49.03, 330.94, 49.23);
            path0_73.curveTo(331.66, 49.38, 332.39, 49.54, 333.11, 49.69);
            path0_73.curveTo(334.39, 49.88, 335.66, 50.06, 336.94, 50.25);
            path0_73.curveTo(337.66, 50.42, 338.38, 50.58, 339.10, 50.75);
            path0_73.curveTo(340.71, 51.24, 342.33, 51.74, 343.94, 52.23);
            path0_73.curveTo(344.66, 52.42, 345.37, 52.61, 346.09, 52.81);
            path0_73.curveTo(346.69, 52.99, 347.28, 53.17, 347.88, 53.35);
            path0_73.curveTo(347.98, 53.78, 348.08, 54.21, 348.19, 54.64);
            path0_73.curveTo(346.48, 55.24, 344.77, 55.84, 343.06, 56.44);
            path0_73.curveTo(343.66, 57.27, 344.47, 58.90, 344.84, 58.80);
            path0_73.curveTo(347.30, 58.18, 349.66, 57.19, 352.06, 56.32);
            path0_73.curveTo(352.69, 56.27, 353.32, 56.22, 353.95, 56.17);
            path0_73.curveTo(354.77, 56.66, 355.58, 57.15, 356.40, 57.64);
            path0_73.curveTo(358.29, 58.40, 360.18, 59.15, 362.07, 59.91);
            path0_73.curveTo(362.84, 60.20, 363.60, 60.49, 364.37, 60.78);
            path0_73.curveTo(365.26, 61.19, 366.15, 61.60, 367.04, 62.01);
            path0_73.curveTo(369.15, 63.43, 371.25, 64.85, 373.36, 66.27);
            path0_73.curveTo(374.08, 67.44, 374.81, 68.61, 375.53, 69.79);
            path0_73.curveTo(374.81, 71.22, 374.09, 72.64, 373.36, 74.07);
            path0_73.curveTo(369.52, 65.50, 362.25, 64.14, 354.08, 65.21);
            path0_73.curveTo(352.38, 65.43, 350.85, 67.05, 349.25, 68.03);
            path0_73.curveTo(353.15, 71.17, 357.23, 74.10, 360.88, 77.50);
            path0_73.curveTo(363.58, 80.01, 365.71, 83.12, 368.10, 85.97);
            path0_73.curveTo(357.94, 81.28, 350.73, 71.18, 336.71, 73.70);
            path0_73.curveTo(319.73, 76.75, 302.20, 76.70, 284.90, 77.99);
            path0_73.curveTo(283.98, 77.37, 283.05, 76.74, 282.13, 76.12);
            path0_73.curveTo(284.57, 67.52, 292.75, 71.59, 297.90, 68.96);
            path0_73.lineTo(298.12, 69.18);
            path0_73.curveTo(299.86, 69.84, 302.90, 71.41, 303.16, 71.04);
            path0_73.curveTo(309.85, 61.43, 315.70, 62.70, 323.38, 70.58);
            path0_73.curveTo(325.48, 72.74, 332.67, 70.04, 337.44, 69.15);
            path0_73.curveTo(337.65, 69.11, 337.91, 64.18, 336.72, 62.60);
            path0_73.curveTo(325.58, 47.85, 310.28, 57.50, 298.36, 59.08);
            path0_73.curveTo(282.32, 61.20, 267.25, 70.68, 251.77, 77.00);
            path0_73.curveTo(252.49, 75.49, 253.20, 73.98, 253.92, 72.48);
            path0_73.curveTo(254.04, 72.26, 254.20, 72.06, 254.38, 71.88);
            path0_73.curveTo(254.86, 71.40, 255.34, 70.91, 255.83, 70.43);
            path0_73.curveTo(256.01, 70.25, 256.21, 70.10, 256.43, 69.97);
            path0_73.curveTo(256.95, 69.53, 257.48, 69.08, 258.00, 68.64);
            path0_73.curveTo(259.09, 67.68, 260.18, 66.72, 261.27, 65.76);
            path0_73.curveTo(261.80, 65.36, 262.33, 64.95, 262.86, 64.54);
            path0_73.lineTo(262.84, 64.51);
            path0_73.closePath();
            path0_73.fill(g2);
        }

        {
            BirbPath path0_74 = new BirbPath();
            path0_74.setFillColor(new Color(190, 116, 95));
            path0_74.moveTo(297.88, 68.94);
            path0_74.curveTo(292.73, 71.56, 284.55, 67.50, 282.11, 76.10);
            path0_74.curveTo(280.38, 77.65, 278.65, 79.20, 276.93, 80.75);
            path0_74.curveTo(274.62, 81.43, 272.30, 82.11, 269.99, 82.80);
            path0_74.curveTo(269.19, 83.52, 268.40, 84.24, 267.60, 84.97);
            path0_74.curveTo(265.75, 85.95, 263.89, 86.94, 262.04, 87.92);
            path0_74.curveTo(262.93, 83.40, 263.82, 78.88, 264.71, 74.37);
            path0_74.curveTo(260.23, 77.07, 255.26, 79.25, 251.51, 82.73);
            path0_74.curveTo(249.95, 84.17, 250.98, 88.41, 250.83, 91.38);
            path0_74.curveTo(254.51, 90.30, 258.20, 89.22, 261.88, 88.15);
            path0_74.curveTo(261.82, 92.11, 259.31, 93.30, 256.14, 95.40);
            path0_74.curveTo(249.23, 99.95, 235.10, 99.23, 239.99, 114.12);
            path0_74.curveTo(239.99, 114.78, 239.97, 115.45, 239.96, 116.11);
            path0_74.curveTo(239.78, 116.19, 239.60, 116.19, 239.42, 116.13);
            path0_74.curveTo(239.29, 116.45, 239.15, 116.78, 239.02, 117.10);
            path0_74.curveTo(239.04, 117.72, 239.07, 118.35, 239.09, 118.97);
            path0_74.curveTo(238.75, 119.62, 238.42, 120.28, 238.08, 120.93);
            path0_74.curveTo(237.72, 120.98, 237.35, 121.03, 236.99, 121.09);
            path0_74.curveTo(236.80, 120.10, 236.61, 119.10, 236.42, 118.11);
            path0_74.curveTo(236.27, 117.41, 236.12, 116.71, 235.97, 116.02);
            path0_74.curveTo(235.81, 114.73, 235.64, 113.44, 235.48, 112.15);
            path0_74.curveTo(235.37, 109.51, 235.26, 106.87, 235.16, 104.23);
            path0_74.curveTo(235.34, 102.81, 235.53, 101.40, 235.71, 99.98);
            path0_74.curveTo(237.07, 96.43, 238.44, 92.88, 239.81, 89.32);
            path0_74.curveTo(240.13, 88.88, 240.45, 88.45, 240.77, 88.02);
            path0_74.curveTo(241.12, 87.46, 241.47, 86.89, 241.81, 86.33);
            path0_74.curveTo(242.38, 85.54, 242.94, 84.74, 243.50, 83.95);
            path0_74.curveTo(246.25, 81.63, 249.00, 79.31, 251.76, 76.99);
            path0_74.curveTo(267.24, 70.67, 282.31, 61.20, 298.35, 59.07);
            path0_74.curveTo(310.27, 57.49, 325.57, 47.84, 336.71, 62.59);
            path0_74.curveTo(337.90, 64.17, 337.64, 69.10, 337.43, 69.14);
            path0_74.curveTo(332.66, 70.04, 325.47, 72.73, 323.37, 70.57);
            path0_74.curveTo(315.70, 62.69, 309.84, 61.41, 303.15, 71.03);
            path0_74.curveTo(302.89, 71.40, 299.85, 69.84, 298.11, 69.17);
            path0_74.curveTo(298.56, 68.84, 299.01, 68.50, 299.46, 68.17);
            path0_74.curveTo(299.28, 67.99, 299.10, 67.80, 298.92, 67.62);
            path0_74.curveTo(298.58, 68.06, 298.23, 68.51, 297.89, 68.95);
            path0_74.lineTo(297.88, 68.94);
            path0_74.closePath();
            path0_74.fill(g2);
        }

        {
            BirbPath path0_75 = new BirbPath();
            path0_75.setFillColor(new Color(232, 233, 235));
            path0_75.moveTo(496.14, 198.02);
            path0_75.curveTo(493.72, 202.89, 494.62, 201.06, 495.53, 199.24);
            path0_75.curveTo(497.27, 201.80, 500.56, 204.40, 500.49, 206.91);
            path0_75.curveTo(500.04, 223.62, 498.84, 240.32, 497.98, 257.02);
            path0_75.curveTo(497.89, 258.80, 499.00, 260.76, 498.56, 262.37);
            path0_75.curveTo(497.40, 266.59, 510.47, 268.42, 501.45, 271.88);
            path0_75.curveTo(495.10, 274.32, 485.56, 270.32, 484.13, 261.30);
            path0_75.curveTo(482.78, 252.77, 473.54, 246.95, 477.52, 236.50);
            path0_75.curveTo(481.26, 226.68, 493.15, 221.95, 492.97, 210.07);
            path0_75.curveTo(492.95, 208.50, 493.76, 206.91, 496.13, 198.03);
            path0_75.lineTo(496.14, 198.02);
            path0_75.closePath();
            path0_75.fill(g2);
        }

        {
            BirbPath path0_76 = new BirbPath();
            path0_76.setFillColor(new Color(190, 116, 95));
            path0_76.moveTo(284.89, 77.97);
            path0_76.curveTo(302.18, 76.68, 319.72, 76.73, 336.70, 73.68);
            path0_76.curveTo(350.72, 71.16, 357.93, 81.27, 368.09, 85.95);
            path0_76.curveTo(368.09, 85.95, 368.07, 85.97, 368.07, 85.97);
            path0_76.curveTo(368.54, 86.57, 369.00, 87.16, 369.47, 87.76);
            path0_76.curveTo(369.70, 88.11, 369.92, 88.46, 370.15, 88.81);
            path0_76.curveTo(370.40, 89.24, 370.66, 89.67, 370.91, 90.09);
            path0_76.curveTo(371.52, 90.82, 372.14, 91.54, 372.75, 92.27);
            path0_76.curveTo(373.44, 95.32, 374.11, 98.38, 374.81, 101.42);
            path0_76.curveTo(375.40, 103.99, 375.60, 108.50, 376.73, 108.75);
            path0_76.curveTo(379.73, 109.43, 375.04, 123.08, 383.61, 112.94);
            path0_76.curveTo(383.37, 114.63, 383.14, 116.33, 382.90, 118.02);
            path0_76.curveTo(382.12, 120.69, 381.34, 123.35, 380.56, 126.02);
            path0_76.curveTo(379.62, 126.54, 378.69, 127.05, 377.75, 127.57);
            path0_76.curveTo(371.68, 110.90, 339.20, 129.56, 342.30, 101.05);
            path0_76.curveTo(342.49, 99.26, 346.12, 97.84, 348.14, 96.25);
            path0_76.curveTo(348.51, 103.55, 355.53, 97.86, 357.90, 101.25);
            path0_76.curveTo(356.94, 103.13, 355.99, 105.01, 355.03, 106.89);
            path0_76.curveTo(354.66, 107.27, 354.30, 107.65, 353.93, 108.04);
            path0_76.curveTo(352.76, 108.16, 351.58, 108.28, 350.41, 108.40);
            path0_76.curveTo(348.95, 109.10, 347.49, 109.79, 346.03, 110.49);
            path0_76.curveTo(346.95, 111.85, 347.59, 113.86, 348.86, 114.40);
            path0_76.curveTo(350.27, 115.00, 352.25, 114.26, 353.98, 114.10);
            path0_76.curveTo(355.25, 113.71, 356.52, 113.33, 357.79, 112.94);
            path0_76.curveTo(358.48, 112.31, 359.16, 111.68, 359.85, 111.05);
            path0_76.curveTo(360.91, 111.71, 361.97, 112.38, 363.02, 113.04);
            path0_76.curveTo(363.61, 113.51, 364.20, 113.98, 364.78, 114.44);
            path0_76.curveTo(366.29, 114.82, 367.80, 115.21, 369.32, 115.59);
            path0_76.curveTo(369.08, 114.67, 368.84, 113.75, 368.59, 112.83);
            path0_76.curveTo(367.36, 111.49, 366.13, 110.15, 364.90, 108.81);
            path0_76.lineTo(365.83, 101.28);
            path0_76.curveTo(367.69, 101.31, 369.54, 101.35, 371.40, 101.38);
            path0_76.curveTo(368.53, 95.51, 362.97, 96.09, 357.81, 95.72);
            path0_76.curveTo(358.48, 92.57, 366.95, 94.58, 363.23, 90.87);
            path0_76.curveTo(357.85, 85.51, 349.96, 79.99, 342.84, 79.56);
            path0_76.curveTo(323.14, 78.36, 303.28, 79.75, 283.48, 80.12);
            path0_76.curveTo(283.94, 79.40, 284.39, 78.69, 284.85, 77.97);
            path0_76.lineTo(284.89, 77.97);
            path0_76.closePath();
            path0_76.fill(g2);
        }

        {
            BirbPath path0_77 = new BirbPath();
            path0_77.setFillColor(new Color(238, 239, 241));
            path0_77.moveTo(222.52, 108.94);
            path0_77.curveTo(218.93, 111.75, 216.33, 115.53, 213.61, 115.61);
            path0_77.curveTo(204.78, 115.88, 201.31, 108.08, 199.52, 101.73);
            path0_77.curveTo(195.90, 88.87, 197.76, 73.41, 179.87, 69.23);
            path0_77.curveTo(178.80, 68.98, 178.25, 66.50, 177.46, 65.06);
            path0_77.curveTo(179.15, 64.95, 180.87, 64.60, 182.53, 64.78);
            path0_77.curveTo(203.02, 66.99, 203.70, 87.45, 214.00, 99.06);
            path0_77.curveTo(216.51, 101.89, 218.94, 104.80, 222.51, 108.94);
            path0_77.lineTo(222.52, 108.94);
            path0_77.closePath();
            path0_77.fill(g2);
        }

        {
            BirbPath path0_78 = new BirbPath();
            path0_78.setFillColor(new Color(238, 239, 241));
            path0_78.moveTo(254.80, 49.24);
            path0_78.curveTo(252.59, 53.27, 250.61, 58.64, 249.60, 58.47);
            path0_78.curveTo(235.17, 55.94, 235.06, 39.58, 225.16, 32.40);
            path0_78.curveTo(229.65, 29.31, 234.15, 26.23, 238.64, 23.14);
            path0_78.curveTo(243.97, 31.74, 249.30, 40.35, 254.80, 49.24);
            path0_78.closePath();
            path0_78.fill(g2);
        }

        {
            BirbPath path0_79 = new BirbPath();
            path0_79.setFillColor(new Color(232, 233, 235));
            path0_79.moveTo(503.06, 286.03);
            path0_79.curveTo(502.72, 280.25, 504.91, 276.47, 508.16, 278.28);
            path0_79.curveTo(519.67, 284.67, 532.23, 290.42, 537.07, 304.24);
            path0_79.curveTo(538.26, 307.64, 536.87, 311.32, 532.85, 311.72);
            path0_79.curveTo(528.89, 312.11, 527.96, 309.06, 527.85, 305.35);
            path0_79.curveTo(527.40, 290.84, 509.28, 301.34, 506.10, 290.20);
            path0_79.curveTo(505.52, 288.16, 503.44, 286.54, 503.06, 286.03);
            path0_79.closePath();
            path0_79.fill(g2);
        }

        {
            BirbPath path0_80 = new BirbPath();
            path0_80.setFillColor(new Color(232, 233, 235));
            path0_80.moveTo(531.92, 193.02);
            path0_80.curveTo(531.92, 191.69, 531.92, 190.36, 531.92, 189.03);
            path0_80.curveTo(534.44, 185.43, 536.95, 181.84, 539.47, 178.24);
            path0_80.curveTo(543.10, 181.83, 548.19, 184.79, 550.02, 189.14);
            path0_80.curveTo(553.00, 196.19, 545.84, 200.33, 541.38, 202.60);
            path0_80.curveTo(538.06, 204.29, 535.22, 215.85, 529.53, 206.05);
            path0_80.curveTo(527.85, 203.15, 530.99, 197.45, 531.92, 193.03);
            path0_80.lineTo(531.92, 193.02);
            path0_80.closePath();
            path0_80.fill(g2);
        }

        {
            BirbPath path0_81 = new BirbPath();
            path0_81.setFillColor(new Color(232, 233, 235));
            path0_81.moveTo(580.71, 149.39);
            path0_81.curveTo(564.99, 153.72, 574.24, 128.20, 562.41, 125.90);
            path0_81.curveTo(565.35, 125.74, 568.45, 124.92, 571.19, 125.58);
            path0_81.curveTo(576.10, 126.75, 580.87, 128.62, 585.56, 130.57);
            path0_81.curveTo(587.43, 131.35, 588.90, 133.07, 590.56, 134.37);
            path0_81.curveTo(588.90, 135.06, 587.04, 135.46, 585.66, 136.51);
            path0_81.curveTo(584.49, 137.40, 583.39, 138.98, 583.24, 140.36);
            path0_81.curveTo(583.16, 141.14, 585.04, 142.17, 586.09, 143.01);
            path0_81.curveTo(587.23, 143.92, 588.42, 144.76, 589.60, 145.63);
            path0_81.curveTo(588.26, 146.20, 586.91, 146.77, 580.72, 149.40);
            path0_81.lineTo(580.71, 149.39);
            path0_81.closePath();
            path0_81.fill(g2);
        }

        {
            BirbPath path0_82 = new BirbPath();
            path0_82.setFillColor(new Color(232, 233, 235));
            path0_82.moveTo(465.41, 186.67);
            path0_82.curveTo(464.00, 196.33, 455.40, 195.96, 450.83, 195.41);
            path0_82.curveTo(442.60, 194.41, 446.04, 183.78, 441.35, 178.98);
            path0_82.curveTo(443.69, 177.66, 446.23, 174.97, 448.33, 175.28);
            path0_82.curveTo(455.69, 176.36, 463.34, 177.87, 465.41, 186.67);
            path0_82.lineTo(465.41, 186.67);
            path0_82.closePath();
            path0_82.fill(g2);
        }

        {
            BirbPath path0_83 = new BirbPath();
            path0_83.setFillColor(new Color(190, 116, 95));
            path0_83.moveTo(373.35, 74.06);
            path0_83.curveTo(374.07, 72.63, 374.79, 71.21, 375.51, 69.78);
            path0_83.curveTo(376.99, 70.88, 378.46, 71.98, 379.94, 73.08);
            path0_83.curveTo(379.94, 73.08, 379.96, 73.10, 379.96, 73.10);
            path0_83.curveTo(380.58, 73.91, 381.21, 74.72, 381.83, 75.53);
            path0_83.curveTo(382.63, 76.70, 383.43, 77.87, 384.22, 79.04);
            path0_83.curveTo(384.82, 79.95, 385.42, 80.86, 386.03, 81.76);
            path0_83.curveTo(387.11, 84.20, 388.19, 86.63, 389.28, 89.07);
            path0_83.curveTo(388.20, 94.71, 387.12, 100.36, 386.05, 106.00);
            path0_83.curveTo(384.83, 102.86, 384.41, 98.83, 379.36, 99.87);
            path0_83.curveTo(379.14, 99.25, 378.92, 98.63, 378.71, 98.00);
            path0_83.curveTo(378.91, 94.97, 379.10, 91.94, 379.30, 88.91);
            path0_83.curveTo(377.36, 84.61, 375.42, 80.32, 373.48, 76.02);
            path0_83.curveTo(373.44, 75.37, 373.40, 74.71, 373.36, 74.06);
            path0_83.lineTo(373.35, 74.06);
            path0_83.closePath();
            path0_83.fill(g2);
        }

        {
            BirbPath path0_84 = new BirbPath();
            path0_84.setFillColor(new Color(232, 233, 235));
            path0_84.moveTo(466.00, 112.36);
            path0_84.curveTo(460.89, 111.71, 455.11, 112.49, 456.67, 108.38);
            path0_84.curveTo(458.49, 103.58, 463.91, 100.15, 467.77, 96.12);
            path0_84.curveTo(469.80, 98.12, 473.76, 100.45, 473.49, 102.06);
            path0_84.curveTo(472.66, 107.00, 472.39, 113.85, 466.01, 112.36);
            path0_84.lineTo(466.00, 112.36);
            path0_84.closePath();
            path0_84.fill(g2);
        }

        {
            BirbPath path0_85 = new BirbPath();
            path0_85.setFillColor(new Color(206, 198, 196));
            path0_85.moveTo(236.98, 121.08);
            path0_85.curveTo(237.34, 121.03, 237.71, 120.98, 238.07, 120.93);
            path0_85.curveTo(241.49, 124.89, 238.05, 132.82, 245.79, 134.28);
            path0_85.curveTo(250.46, 136.77, 250.01, 133.18, 250.32, 130.48);
            path0_85.lineTo(250.37, 130.19);
            path0_85.lineTo(250.09, 130.11);
            path0_85.curveTo(251.28, 130.37, 252.46, 130.62, 253.65, 130.88);
            path0_85.curveTo(254.67, 136.81, 255.69, 142.75, 256.71, 148.68);
            path0_85.curveTo(255.54, 148.60, 254.37, 148.53, 253.19, 148.45);
            path0_85.curveTo(250.13, 146.00, 247.08, 143.56, 244.02, 141.11);
            path0_85.curveTo(242.68, 139.42, 241.34, 137.74, 240.01, 136.05);
            path0_85.curveTo(239.66, 135.06, 239.30, 134.08, 238.94, 133.09);
            path0_85.curveTo(238.29, 129.09, 237.63, 125.08, 236.98, 121.08);
            path0_85.closePath();
            path0_85.fill(g2);
        }

        {
            BirbPath path0_86 = new BirbPath();
            path0_86.setFillColor(new Color(232, 233, 235));
            path0_86.moveTo(225.39, 135.88);
            path0_86.curveTo(224.65, 140.56, 224.00, 144.68, 223.35, 148.80);
            path0_86.curveTo(218.78, 140.23, 214.19, 131.67, 209.72, 123.05);
            path0_86.curveTo(209.58, 122.79, 210.78, 121.32, 211.10, 121.40);
            path0_86.curveTo(218.89, 123.44, 222.38, 129.54, 225.40, 135.88);
            path0_86.lineTo(225.39, 135.88);
            path0_86.closePath();
            path0_86.fill(g2);
        }

        {
            BirbPath path0_87 = new BirbPath();
            path0_87.setFillColor(new Color(50, 47, 48));
            path0_87.moveTo(378.70, 98.00);
            path0_87.curveTo(378.92, 98.62, 379.14, 99.24, 379.35, 99.87);
            path0_87.curveTo(381.14, 102.95, 382.94, 106.03, 384.74, 109.11);
            path0_87.curveTo(384.63, 110.09, 384.52, 111.08, 384.41, 112.06);
            path0_87.curveTo(384.15, 112.36, 383.88, 112.65, 383.62, 112.95);
            path0_87.curveTo(375.05, 123.09, 379.74, 109.44, 376.74, 108.76);
            path0_87.curveTo(375.60, 108.50, 375.41, 104.00, 374.82, 101.43);
            path0_87.curveTo(374.12, 98.38, 373.44, 95.33, 372.76, 92.28);
            path0_87.curveTo(374.74, 94.19, 376.72, 96.10, 378.70, 98.01);
            path0_87.lineTo(378.70, 98.00);
            path0_87.closePath();
            path0_87.fill(g2);
        }

        {
            BirbPath path0_88 = new BirbPath();
            path0_88.setFillColor(new Color(232, 233, 235));
            path0_88.moveTo(585.05, 166.32);
            path0_88.curveTo(579.08, 163.53, 571.17, 173.10, 570.47, 166.43);
            path0_88.curveTo(569.81, 160.14, 580.95, 163.17, 586.65, 161.31);
            path0_88.curveTo(587.25, 161.11, 588.47, 162.85, 589.41, 163.69);
            path0_88.curveTo(587.83, 164.65, 586.25, 165.60, 585.05, 166.33);
            path0_88.lineTo(585.05, 166.32);
            path0_88.closePath();
            path0_88.fill(g2);
        }

        {
            BirbPath path0_89 = new BirbPath();
            path0_89.setFillColor(new Color(232, 233, 235));
            path0_89.moveTo(576.25, 19.04);
            path0_89.curveTo(577.28, 17.87, 577.91, 17.14, 578.54, 16.42);
            path0_89.curveTo(581.23, 19.25, 583.91, 22.08, 586.60, 24.91);
            path0_89.curveTo(584.58, 26.22, 582.56, 27.52, 580.54, 28.83);
            path0_89.curveTo(579.14, 25.64, 577.75, 22.46, 576.25, 19.04);
            path0_89.closePath();
            path0_89.fill(g2);
        }

        {
            BirbPath path0_90 = new BirbPath();
            path0_90.setFillColor(new Color(232, 233, 235));
            path0_90.moveTo(492.98, 86.33);
            path0_90.curveTo(495.19, 89.39, 497.89, 91.58, 497.53, 92.97);
            path0_90.curveTo(496.95, 95.19, 494.33, 96.88, 492.58, 98.80);
            path0_90.curveTo(491.41, 96.63, 489.61, 94.54, 489.28, 92.25);
            path0_90.curveTo(489.08, 90.85, 491.13, 89.13, 492.98, 86.33);
            path0_90.closePath();
            path0_90.fill(g2);
        }

        {
            BirbPath path0_91 = new BirbPath();
            path0_91.setFillColor(new Color(50, 47, 48));
            path0_91.moveTo(324.04, 48.62);
            path0_91.curveTo(325.24, 50.35, 326.44, 52.08, 327.64, 53.81);
            path0_91.curveTo(321.19, 53.47, 314.74, 53.13, 308.29, 52.79);
            path0_91.curveTo(309.52, 51.39, 310.75, 49.99, 311.98, 48.58);
            path0_91.curveTo(315.34, 48.30, 318.71, 48.03, 322.07, 47.75);
            path0_91.curveTo(322.73, 48.04, 323.38, 48.33, 324.04, 48.61);
            path0_91.lineTo(324.04, 48.62);
            path0_91.closePath();
            path0_91.fill(g2);
        }

        {
            BirbPath path0_92 = new BirbPath();
            path0_92.setFillColor(new Color(238, 239, 241));
            path0_92.moveTo(170.47, 23.00);
            path0_92.curveTo(168.35, 20.39, 166.24, 18.90, 166.36, 17.62);
            path0_92.curveTo(166.49, 16.18, 168.83, 13.68, 169.86, 13.85);
            path0_92.curveTo(171.91, 14.18, 173.72, 16.01, 175.63, 17.22);
            path0_92.curveTo(174.21, 18.80, 172.80, 20.39, 170.47, 23.00);
            path0_92.lineTo(170.47, 23.00);
            path0_92.closePath();
            path0_92.fill(g2);
        }

        {
            BirbPath path0_93 = new BirbPath();
            path0_93.setFillColor(new Color(50, 47, 48));
            path0_93.moveTo(253.19, 148.44);
            path0_93.curveTo(254.36, 148.52, 255.54, 148.59, 256.71, 148.67);
            path0_93.curveTo(257.16, 152.49, 257.61, 156.32, 258.06, 160.14);
            path0_93.curveTo(256.66, 157.94, 255.26, 155.75, 253.86, 153.55);
            path0_93.curveTo(253.25, 152.38, 252.65, 151.21, 252.05, 150.03);
            path0_93.curveTo(252.29, 149.54, 252.52, 149.06, 252.76, 148.57);
            path0_93.curveTo(252.76, 148.57, 253.02, 148.62, 253.02, 148.62);
            path0_93.lineTo(253.20, 148.42);
            path0_93.lineTo(253.19, 148.44);
            path0_93.closePath();
            path0_93.fill(g2);
        }

        {
            BirbPath path0_94 = new BirbPath();
            path0_94.setFillColor(new Color(232, 233, 235));
            path0_94.moveTo(384.41, 112.06);
            path0_94.curveTo(384.52, 111.08, 384.63, 110.09, 384.74, 109.11);
            path0_94.curveTo(385.17, 108.07, 385.61, 107.03, 386.04, 106.00);
            path0_94.curveTo(387.12, 100.36, 388.20, 94.71, 389.27, 89.07);
            path0_94.curveTo(394.20, 98.12, 389.60, 105.16, 384.40, 112.06);
            path0_94.lineTo(384.41, 112.06);
            path0_94.closePath();
            path0_94.fill(g2);
        }

        {
            BirbPath path0_95 = new BirbPath();
            path0_95.setFillColor(new Color(232, 233, 235));
            path0_95.moveTo(519.89, 60.89);
            path0_95.curveTo(521.47, 59.59, 522.31, 58.90, 523.15, 58.20);
            path0_95.curveTo(524.71, 60.09, 526.65, 61.82, 527.62, 63.97);
            path0_95.curveTo(527.96, 64.74, 525.93, 66.57, 524.98, 67.91);
            path0_95.curveTo(523.41, 65.75, 521.85, 63.59, 519.89, 60.88);
            path0_95.lineTo(519.89, 60.89);
            path0_95.closePath();
            path0_95.fill(g2);
        }

        {
            BirbPath path0_96 = new BirbPath();
            path0_96.setFillColor(new Color(232, 233, 235));
            path0_96.moveTo(518.88, 168.51);
            path0_96.curveTo(520.13, 166.37, 521.00, 164.88, 521.86, 163.39);
            path0_96.curveTo(522.84, 165.86, 524.09, 168.27, 524.64, 170.84);
            path0_96.curveTo(524.81, 171.64, 523.08, 172.85, 522.22, 173.87);
            path0_96.curveTo(521.16, 172.17, 520.10, 170.46, 518.88, 168.51);
            path0_96.lineTo(518.88, 168.51);
            path0_96.closePath();
            path0_96.fill(g2);
        }

        {
            BirbPath path0_97 = new BirbPath();
            path0_97.setFillColor(new Color(232, 233, 235));
            path0_97.moveTo(253.19, 148.44);
            path0_97.lineTo(253.01, 148.64);
            path0_97.curveTo(253.01, 148.64, 252.75, 148.59, 252.75, 148.59);
            path0_97.curveTo(251.20, 148.65, 249.65, 148.70, 248.09, 148.76);
            path0_97.curveTo(247.22, 148.85, 246.35, 148.94, 245.48, 149.03);
            path0_97.curveTo(244.99, 146.39, 244.51, 143.75, 244.02, 141.11);
            path0_97.curveTo(247.08, 143.56, 250.13, 146.00, 253.19, 148.45);
            path0_97.lineTo(253.19, 148.44);
            path0_97.closePath();
            path0_97.fill(g2);
        }

        {
            BirbPath path0_98 = new BirbPath();
            path0_98.setFillColor(new Color(222, 151, 123));
            path0_98.moveTo(251.75, 76.97);
            path0_98.curveTo(249.00, 79.29, 246.24, 81.61, 243.49, 83.93);
            path0_98.curveTo(246.38, 80.11, 249.27, 76.29, 252.16, 72.46);
            path0_98.curveTo(252.74, 72.46, 253.31, 72.45, 253.89, 72.44);
            path0_98.curveTo(253.17, 73.95, 252.46, 75.46, 251.74, 76.96);
            path0_98.lineTo(251.75, 76.97);
            path0_98.closePath();
            path0_98.fill(g2);
        }

        {
            BirbPath path0_99 = new BirbPath();
            path0_99.setFillColor(new Color(206, 198, 196));
            path0_99.moveTo(322.07, 47.75);
            path0_99.curveTo(318.71, 48.03, 315.34, 48.30, 311.98, 48.58);
            path0_99.curveTo(310.30, 48.35, 308.61, 48.12, 306.93, 47.89);
            path0_99.curveTo(311.95, 45.05, 317.00, 45.14, 322.07, 47.76);
            path0_99.lineTo(322.07, 47.75);
            path0_99.closePath();
            path0_99.fill(g2);
        }

    }

    private static void drawPart1(Graphics2D g2) {
        {
            BirbPath path1_100 = new BirbPath();
            path1_100.setFillColor(new Color(232, 233, 235));
            path1_100.moveTo(592.58, 35.36);
            path1_100.curveTo(594.03, 37.97, 595.16, 39.54, 595.73, 41.29);
            path1_100.curveTo(595.93, 41.88, 594.74, 42.93, 594.18, 43.77);
            path1_100.curveTo(593.13, 42.06, 591.96, 40.40, 591.11, 38.59);
            path1_100.curveTo(590.89, 38.13, 591.71, 37.18, 592.57, 35.36);
            path1_100.lineTo(592.58, 35.36);
            path1_100.closePath();
            path1_100.fill(g2);
        }

        {
            BirbPath path1_101 = new BirbPath();
            path1_101.setFillColor(new Color(232, 233, 235));
            path1_101.moveTo(508.55, 234.14);
            path1_101.curveTo(509.97, 235.99, 510.81, 237.08, 511.65, 238.17);
            path1_101.curveTo(510.86, 238.77, 509.97, 239.94, 509.29, 239.83);
            path1_101.curveTo(508.24, 239.66, 506.75, 238.77, 506.52, 237.90);
            path1_101.curveTo(506.31, 237.10, 507.52, 235.93, 508.54, 234.15);
            path1_101.lineTo(508.55, 234.14);
            path1_101.closePath();
            path1_101.fill(g2);
        }

        {
            BirbPath path1_102 = new BirbPath();
            path1_102.setFillColor(new Color(222, 151, 123));
            path1_102.moveTo(239.80, 89.30);
            path1_102.curveTo(238.43, 92.85, 237.07, 96.41, 235.70, 99.96);
            path1_102.curveTo(237.07, 96.41, 238.43, 92.85, 239.80, 89.30);
            path1_102.closePath();
            path1_102.fill(g2);
        }

        {
            BirbPath path1_103 = new BirbPath();
            path1_103.setFillColor(new Color(238, 239, 241));
            path1_103.moveTo(253.90, 72.45);
            path1_103.curveTo(253.32, 72.45, 252.74, 72.46, 252.17, 72.47);
            path1_103.curveTo(252.54, 70.51, 252.92, 68.56, 253.29, 66.60);
            path1_103.curveTo(254.29, 67.25, 255.28, 67.90, 256.28, 68.55);
            path1_103.curveTo(256.32, 69.01, 256.37, 69.47, 256.41, 69.93);
            path1_103.curveTo(256.19, 70.06, 255.99, 70.22, 255.81, 70.39);
            path1_103.curveTo(255.33, 70.87, 254.84, 71.36, 254.36, 71.84);
            path1_103.curveTo(254.18, 72.02, 254.02, 72.22, 253.90, 72.44);
            path1_103.lineTo(253.90, 72.45);
            path1_103.closePath();
            path1_103.fill(g2);
        }

        {
            BirbPath path1_104 = new BirbPath();
            path1_104.setFillColor(new Color(232, 233, 235));
            path1_104.moveTo(310.69, 37.68);
            path1_104.curveTo(312.06, 38.71, 313.25, 39.59, 314.44, 40.48);
            path1_104.curveTo(313.68, 40.94, 312.73, 41.93, 312.19, 41.75);
            path1_104.curveTo(310.81, 41.28, 309.61, 40.28, 308.34, 39.49);
            path1_104.curveTo(309.02, 38.97, 309.69, 38.45, 310.69, 37.68);
            path1_104.closePath();
            path1_104.fill(g2);
        }

        {
            BirbPath path1_105 = new BirbPath();
            path1_105.setFillColor(new Color(222, 151, 123));
            path1_105.moveTo(235.16, 104.21);
            path1_105.curveTo(235.27, 106.85, 235.38, 109.49, 235.48, 112.13);
            path1_105.curveTo(235.37, 109.49, 235.26, 106.85, 235.16, 104.21);
            path1_105.closePath();
            path1_105.fill(g2);
        }

        {
            BirbPath path1_106 = new BirbPath();
            path1_106.setFillColor(new Color(232, 233, 235));
            path1_106.moveTo(379.94, 73.07);
            path1_106.curveTo(378.46, 71.97, 376.98, 70.87, 375.51, 69.77);
            path1_106.curveTo(374.79, 68.60, 374.07, 67.43, 373.34, 66.25);
            path1_106.curveTo(377.42, 66.69, 379.56, 69.02, 379.94, 73.06);
            path1_106.lineTo(379.94, 73.07);
            path1_106.closePath();
            path1_106.fill(g2);
        }

        {
            BirbPath path1_107 = new BirbPath();
            path1_107.setFillColor(new Color(232, 233, 235));
            path1_107.moveTo(303.82, 26.60);
            path1_107.curveTo(305.10, 28.09, 306.05, 28.95, 306.63, 30.01);
            path1_107.curveTo(306.80, 30.33, 305.95, 31.20, 305.57, 31.83);
            path1_107.curveTo(304.55, 31.11, 303.37, 30.52, 302.59, 29.59);
            path1_107.curveTo(302.34, 29.30, 303.17, 28.11, 303.81, 26.60);
            path1_107.lineTo(303.82, 26.60);
            path1_107.closePath();
            path1_107.fill(g2);
        }

        {
            BirbPath path1_108 = new BirbPath();
            path1_108.setFillColor(new Color(232, 233, 235));
            path1_108.moveTo(252.04, 150.04);
            path1_108.curveTo(252.64, 151.21, 253.25, 152.38, 253.85, 153.56);
            path1_108.curveTo(252.24, 153.56, 250.63, 153.58, 249.01, 153.59);
            path1_108.curveTo(249.03, 152.43, 249.06, 151.27, 249.08, 150.11);
            path1_108.curveTo(250.06, 150.09, 251.04, 150.07, 252.03, 150.05);
            path1_108.lineTo(252.04, 150.04);
            path1_108.closePath();
            path1_108.fill(g2);
        }

        {
            BirbPath path1_109 = new BirbPath();
            path1_109.setFillColor(new Color(232, 233, 235));
            path1_109.moveTo(502.87, 301.21);
            path1_109.curveTo(502.11, 299.65, 501.41, 298.73, 501.29, 297.73);
            path1_109.curveTo(501.24, 297.34, 502.51, 296.80, 503.17, 296.33);
            path1_109.curveTo(503.69, 297.08, 504.56, 297.82, 504.61, 298.60);
            path1_109.curveTo(504.65, 299.27, 503.73, 299.99, 502.87, 301.21);
            path1_109.closePath();
            path1_109.fill(g2);
        }

        {
            BirbPath path1_110 = new BirbPath();
            path1_110.setFillColor(new Color(206, 198, 196));
            path1_110.moveTo(353.94, 56.15);
            path1_110.curveTo(353.31, 56.20, 352.68, 56.25, 352.05, 56.30);
            path1_110.curveTo(350.76, 55.74, 349.47, 55.17, 348.18, 54.61);
            path1_110.curveTo(348.08, 54.18, 347.98, 53.75, 347.87, 53.32);
            path1_110.curveTo(349.89, 54.26, 351.91, 55.20, 353.93, 56.15);
            path1_110.lineTo(353.94, 56.15);
            path1_110.closePath();
            path1_110.fill(g2);
        }

        {
            BirbPath path1_111 = new BirbPath();
            path1_111.setFillColor(new Color(232, 233, 235));
            path1_111.moveTo(258.07, 160.91);
            path1_111.curveTo(258.67, 163.61, 259.27, 166.32, 259.88, 169.02);
            path1_111.curveTo(259.28, 166.32, 258.68, 163.61, 258.07, 160.91);
            path1_111.lineTo(258.07, 160.91);
            path1_111.closePath();
            path1_111.fill(g2);
        }

        {
            BirbPath path1_112 = new BirbPath();
            path1_112.setFillColor(new Color(232, 233, 235));
            path1_112.moveTo(428.10, 153.86);
            path1_112.curveTo(427.22, 154.65, 426.52, 155.61, 426.19, 155.50);
            path1_112.curveTo(425.44, 155.24, 424.72, 154.54, 424.31, 153.84);
            path1_112.curveTo(424.18, 153.63, 425.19, 152.30, 425.51, 152.36);
            path1_112.curveTo(426.30, 152.51, 426.99, 153.17, 428.10, 153.86);
            path1_112.lineTo(428.10, 153.86);
            path1_112.closePath();
            path1_112.fill(g2);
        }

        {
            BirbPath path1_113 = new BirbPath();
            path1_113.setFillColor(new Color(146, 82, 61));
            path1_113.moveTo(249.10, 150.10);
            path1_113.curveTo(249.08, 151.26, 249.05, 152.42, 249.03, 153.58);
            path1_113.curveTo(247.85, 152.06, 246.67, 150.54, 245.49, 149.02);
            path1_113.curveTo(246.36, 148.93, 247.23, 148.84, 248.09, 148.75);
            path1_113.curveTo(248.42, 149.20, 248.76, 149.65, 249.09, 150.10);
            path1_113.lineTo(249.10, 150.10);
            path1_113.closePath();
            path1_113.fill(g2);
        }

        {
            BirbPath path1_114 = new BirbPath();
            path1_114.setFillColor(new Color(206, 198, 196));
            path1_114.moveTo(362.06, 59.90);
            path1_114.curveTo(360.17, 59.14, 358.28, 58.38, 356.39, 57.63);
            path1_114.curveTo(358.28, 58.39, 360.17, 59.15, 362.06, 59.90);
            path1_114.closePath();
            path1_114.fill(g2);
        }

        {
            BirbPath path1_115 = new BirbPath();
            path1_115.setFillColor(new Color(232, 233, 235));
            path1_115.moveTo(238.94, 133.08);
            path1_115.curveTo(239.30, 134.07, 239.65, 135.05, 240.01, 136.04);
            path1_115.curveTo(239.65, 135.05, 239.30, 134.07, 238.94, 133.08);
            path1_115.closePath();
            path1_115.fill(g2);
        }

        {
            BirbPath path1_116 = new BirbPath();
            path1_116.setFillColor(new Color(232, 233, 235));
            path1_116.moveTo(386.03, 81.76);
            path1_116.curveTo(385.43, 80.85, 384.83, 79.94, 384.22, 79.04);
            path1_116.curveTo(384.82, 79.95, 385.42, 80.86, 386.03, 81.76);
            path1_116.closePath();
            path1_116.fill(g2);
        }

        {
            BirbPath path1_117 = new BirbPath();
            path1_117.setFillColor(new Color(232, 233, 235));
            path1_117.moveTo(405.12, 145.58);
            path1_117.curveTo(404.90, 145.42, 404.70, 145.26, 404.50, 145.10);
            path1_117.curveTo(404.69, 144.93, 404.87, 144.74, 405.09, 144.62);
            path1_117.curveTo(405.14, 144.59, 405.43, 144.79, 405.41, 144.85);
            path1_117.curveTo(405.36, 145.10, 405.24, 145.34, 405.12, 145.59);
            path1_117.lineTo(405.12, 145.58);
            path1_117.closePath();
            path1_117.fill(g2);
        }

        {
            BirbPath path1_118 = new BirbPath();
            path1_118.setFillColor(new Color(222, 151, 123));
            path1_118.moveTo(256.41, 69.93);
            path1_118.curveTo(256.37, 69.47, 256.32, 69.01, 256.28, 68.55);
            path1_118.curveTo(256.85, 68.57, 257.42, 68.58, 257.98, 68.60);
            path1_118.curveTo(257.46, 69.05, 256.93, 69.49, 256.41, 69.94);
            path1_118.lineTo(256.41, 69.93);
            path1_118.closePath();
            path1_118.fill(g2);
        }

        {
            BirbPath path1_119 = new BirbPath();
            path1_119.setFillColor(new Color(222, 151, 123));
            path1_119.moveTo(262.84, 64.51);
            path1_119.curveTo(262.31, 64.92, 261.78, 65.32, 261.25, 65.73);
            path1_119.curveTo(261.37, 65.29, 261.50, 64.86, 261.62, 64.42);
            path1_119.curveTo(262.03, 64.45, 262.43, 64.48, 262.84, 64.51);
            path1_119.lineTo(262.84, 64.51);
            path1_119.closePath();
            path1_119.fill(g2);
        }

        {
            BirbPath path1_120 = new BirbPath();
            path1_120.setFillColor(new Color(206, 198, 196));
            path1_120.moveTo(367.03, 62.00);
            path1_120.curveTo(366.14, 61.59, 365.25, 61.18, 364.36, 60.77);
            path1_120.curveTo(365.25, 61.18, 366.14, 61.59, 367.03, 62.00);
            path1_120.closePath();
            path1_120.fill(g2);
        }

        {
            BirbPath path1_121 = new BirbPath();
            path1_121.setFillColor(new Color(206, 198, 196));
            path1_121.moveTo(346.09, 52.79);
            path1_121.curveTo(345.37, 52.60, 344.66, 52.41, 343.94, 52.21);
            path1_121.curveTo(344.66, 52.40, 345.37, 52.59, 346.09, 52.79);
            path1_121.closePath();
            path1_121.fill(g2);
        }

        {
            BirbPath path1_122 = new BirbPath();
            path1_122.setFillColor(new Color(206, 198, 196));
            path1_122.moveTo(339.10, 50.73);
            path1_122.curveTo(338.38, 50.56, 337.66, 50.40, 336.94, 50.23);
            path1_122.curveTo(337.66, 50.40, 338.38, 50.56, 339.10, 50.73);
            path1_122.closePath();
            path1_122.fill(g2);
        }

        {
            BirbPath path1_123 = new BirbPath();
            path1_123.setFillColor(new Color(206, 198, 196));
            path1_123.moveTo(333.11, 49.67);
            path1_123.curveTo(332.39, 49.52, 331.66, 49.36, 330.94, 49.21);
            path1_123.curveTo(331.66, 49.36, 332.39, 49.52, 333.11, 49.67);
            path1_123.closePath();
            path1_123.fill(g2);
        }

        {
            BirbPath path1_124 = new BirbPath();
            path1_124.setFillColor(new Color(222, 151, 123));
            path1_124.moveTo(241.80, 86.31);
            path1_124.curveTo(241.45, 86.87, 241.10, 87.44, 240.76, 88.00);
            path1_124.curveTo(241.11, 87.44, 241.46, 86.87, 241.80, 86.31);
            path1_124.closePath();
            path1_124.fill(g2);
        }

        {
            BirbPath path1_125 = new BirbPath();
            path1_125.setFillColor(new Color(232, 233, 235));
            path1_125.moveTo(381.83, 75.52);
            path1_125.curveTo(381.21, 74.71, 380.58, 73.90, 379.96, 73.09);
            path1_125.curveTo(380.58, 73.90, 381.21, 74.71, 381.83, 75.52);
            path1_125.closePath();
            path1_125.fill(g2);
        }

        {
            BirbPath path1_126 = new BirbPath();
            path1_126.setFillColor(new Color(206, 198, 196));
            path1_126.moveTo(235.97, 116.00);
            path1_126.curveTo(236.12, 116.70, 236.27, 117.40, 236.42, 118.09);
            path1_126.curveTo(236.27, 117.39, 236.12, 116.69, 235.97, 116.00);
            path1_126.closePath();
            path1_126.fill(g2);
        }

        {
            BirbPath path1_127 = new BirbPath();
            path1_127.setFillColor(new Color(232, 233, 235));
            path1_127.moveTo(257.29, 181.90);
            path1_127.curveTo(257.19, 183.14, 257.08, 184.38, 256.98, 185.63);
            path1_127.curveTo(256.66, 185.47, 256.33, 185.32, 256.01, 185.16);
            path1_127.curveTo(256.44, 184.07, 256.86, 182.99, 257.29, 181.90);
            path1_127.lineTo(257.29, 181.90);
            path1_127.closePath();
            path1_127.fill(g2);
        }

        {
            BirbPath path1_128 = new BirbPath();
            path1_128.setFillColor(new Color(206, 198, 196));
            path1_128.moveTo(312.99, 359.86);
            path1_128.curveTo(314.27, 360.68, 316.77, 361.82, 316.65, 362.27);
            path1_128.curveTo(313.69, 373.26, 313.27, 385.65, 303.55, 393.48);
            path1_128.curveTo(288.21, 405.84, 272.30, 417.50, 256.82, 429.70);
            path1_128.curveTo(255.44, 430.79, 254.29, 434.61, 255.04, 435.56);
            path1_128.curveTo(259.25, 440.80, 263.42, 446.53, 271.92, 442.50);
            path1_128.curveTo(275.42, 440.84, 279.71, 440.86, 283.64, 440.12);
            path1_128.curveTo(281.22, 443.46, 279.48, 447.90, 276.24, 449.91);
            path1_128.curveTo(269.60, 454.01, 272.22, 458.24, 275.32, 462.03);
            path1_128.curveTo(279.34, 466.95, 281.61, 461.61, 283.92, 459.49);
            path1_128.curveTo(305.09, 440.02, 323.67, 418.27, 340.62, 395.06);
            path1_128.curveTo(348.09, 384.84, 370.66, 394.80, 378.40, 411.43);
            path1_128.curveTo(379.19, 413.13, 381.22, 414.24, 382.68, 415.63);
            path1_128.curveTo(382.91, 414.00, 383.41, 412.35, 383.31, 410.75);
            path1_128.curveTo(383.12, 407.78, 379.46, 403.67, 384.44, 402.35);
            path1_128.curveTo(389.17, 401.10, 392.28, 404.58, 394.03, 409.09);
            path1_128.curveTo(394.67, 410.75, 396.05, 412.12, 397.10, 413.63);
            path1_128.curveTo(397.72, 411.99, 398.23, 410.30, 398.99, 408.73);
            path1_128.curveTo(403.29, 399.73, 389.26, 387.80, 404.21, 380.05);
            path1_128.curveTo(410.32, 376.88, 413.73, 387.00, 421.10, 380.00);
            path1_128.curveTo(434.75, 367.03, 424.89, 353.47, 425.41, 340.29);
            path1_128.curveTo(425.67, 333.72, 424.46, 327.09, 424.11, 320.48);
            path1_128.curveTo(424.07, 319.78, 425.35, 319.01, 426.02, 318.27);
            path1_128.curveTo(428.47, 326.90, 439.15, 313.64, 441.07, 323.94);
            path1_128.curveTo(441.66, 327.10, 442.72, 330.17, 443.56, 333.28);
            path1_128.curveTo(444.95, 329.87, 446.35, 326.47, 447.72, 323.06);
            path1_128.curveTo(448.34, 321.51, 448.90, 319.93, 449.49, 318.37);
            path1_128.curveTo(450.16, 319.94, 450.90, 321.48, 451.49, 323.07);
            path1_128.curveTo(455.64, 334.26, 452.06, 345.10, 449.95, 356.00);
            path1_128.curveTo(449.25, 356.35, 448.54, 356.69, 447.84, 357.04);
            path1_128.curveTo(447.56, 356.91, 447.31, 356.95, 447.08, 357.15);
            path1_128.curveTo(444.22, 357.72, 441.35, 358.29, 438.49, 358.86);
            path1_128.curveTo(437.37, 361.18, 436.25, 363.50, 435.13, 365.83);
            path1_128.curveTo(430.57, 379.85, 427.86, 393.97, 432.90, 408.49);
            path1_128.curveTo(433.04, 419.01, 433.19, 429.53, 433.33, 440.04);
            path1_128.curveTo(433.18, 440.70, 433.04, 441.36, 432.89, 442.02);
            path1_128.lineTo(432.34, 444.00);
            path1_128.curveTo(431.05, 446.91, 429.75, 449.83, 428.46, 452.74);
            path1_128.curveTo(426.62, 454.59, 424.76, 456.43, 422.97, 458.33);
            path1_128.curveTo(422.87, 458.43, 423.37, 459.09, 423.59, 459.48);
            path1_128.curveTo(425.36, 457.94, 427.13, 456.39, 428.91, 454.85);
            path1_128.curveTo(429.50, 462.61, 430.10, 470.36, 430.69, 478.12);
            path1_128.curveTo(429.95, 479.76, 429.21, 481.40, 428.48, 483.03);
            path1_128.curveTo(425.06, 485.26, 421.63, 487.49, 418.21, 489.73);
            path1_128.curveTo(408.73, 492.30, 399.26, 494.87, 389.78, 497.44);
            path1_128.curveTo(376.90, 499.51, 363.40, 496.30, 350.88, 502.42);
            path1_128.curveTo(348.61, 503.53, 344.77, 501.42, 341.65, 500.79);
            path1_128.curveTo(343.19, 498.88, 344.73, 496.97, 346.27, 495.06);
            path1_128.curveTo(348.10, 492.79, 349.97, 490.54, 351.66, 488.17);
            path1_128.curveTo(351.77, 488.02, 350.43, 486.23, 349.85, 486.28);
            path1_128.curveTo(331.40, 487.74, 314.01, 472.16, 295.00, 482.82);
            path1_128.curveTo(294.17, 482.40, 293.34, 481.98, 292.51, 481.56);
            path1_128.curveTo(288.70, 478.35, 284.90, 475.13, 281.09, 471.92);
            path1_128.lineTo(281.04, 471.89);
            path1_128.curveTo(279.82, 470.53, 278.60, 469.16, 277.38, 467.80);
            path1_128.curveTo(276.95, 467.52, 276.52, 467.23, 276.09, 466.95);
            path1_128.lineTo(276.03, 466.89);
            path1_128.curveTo(275.72, 466.58, 275.40, 466.27, 275.09, 465.96);
            path1_128.lineTo(275.02, 465.90);
            path1_128.curveTo(274.73, 465.48, 274.44, 465.06, 274.15, 464.64);
            path1_128.curveTo(271.18, 460.38, 268.20, 456.11, 265.23, 451.85);
            path1_128.lineTo(265.11, 451.82);
            path1_128.curveTo(264.79, 451.51, 264.48, 451.19, 264.16, 450.88);
            path1_128.curveTo(264.16, 450.88, 264.10, 450.82, 264.10, 450.82);
            path1_128.curveTo(263.77, 450.52, 263.44, 450.22, 263.10, 449.92);
            path1_128.curveTo(263.10, 449.92, 263.07, 449.83, 263.07, 449.83);
            path1_128.curveTo(261.35, 447.62, 259.63, 445.40, 257.91, 443.19);
            path1_128.curveTo(257.62, 442.80, 257.33, 442.42, 257.04, 442.03);
            path1_128.lineTo(256.96, 441.95);
            path1_128.curveTo(256.65, 441.64, 256.35, 441.34, 256.04, 441.03);
            path1_128.lineTo(255.96, 440.95);
            path1_128.curveTo(255.65, 440.65, 255.35, 440.36, 255.04, 440.06);
            path1_128.lineTo(254.93, 439.96);
            path1_128.curveTo(254.63, 439.65, 254.34, 439.34, 254.04, 439.03);
            path1_128.curveTo(254.04, 439.03, 253.97, 438.94, 253.97, 438.94);
            path1_128.curveTo(253.67, 438.63, 253.36, 438.32, 253.06, 438.01);
            path1_128.lineTo(252.98, 437.93);
            path1_128.curveTo(252.68, 437.62, 252.38, 437.30, 252.08, 436.99);
            path1_128.curveTo(252.08, 436.99, 252.02, 436.91, 252.02, 436.91);
            path1_128.curveTo(251.72, 436.59, 251.42, 436.26, 251.12, 435.94);
            path1_128.curveTo(251.12, 435.94, 251.07, 435.89, 251.07, 435.89);
            path1_128.curveTo(250.80, 435.45, 250.52, 435.02, 250.25, 434.58);
            path1_128.curveTo(250.11, 434.12, 249.98, 433.66, 249.84, 433.20);
            path1_128.curveTo(256.87, 416.88, 234.22, 423.09, 233.97, 412.30);
            path1_128.curveTo(241.73, 397.86, 260.94, 403.90, 270.15, 392.05);
            path1_128.curveTo(270.45, 392.05, 270.74, 392.04, 271.04, 391.99);
            path1_128.curveTo(273.39, 389.99, 275.74, 388.00, 278.09, 386.00);
            path1_128.curveTo(279.41, 385.02, 280.73, 384.04, 282.05, 383.06);
            path1_128.curveTo(283.75, 381.73, 285.46, 380.40, 287.16, 379.07);
            path1_128.curveTo(295.77, 372.68, 304.39, 366.28, 313.00, 359.89);
            path1_128.lineTo(312.99, 359.86);
            path1_128.moveTo(423.93, 462.14);
            path1_128.curveTo(423.49, 461.87, 423.16, 461.66, 422.83, 461.45);
            path1_128.curveTo(422.64, 461.82, 422.28, 462.22, 422.33, 462.56);
            path1_128.curveTo(422.37, 462.86, 422.88, 463.09, 423.19, 463.35);
            path1_128.curveTo(423.41, 463.00, 423.63, 462.64, 423.94, 462.14);
            path1_128.lineTo(423.93, 462.14);
            path1_128.fill(g2);
        }

        {
            BirbPath path1_129 = new BirbPath();
            path1_129.setFillColor(new Color(235, 236, 238));
            path1_129.moveTo(345.26, 292.85);
            path1_129.curveTo(349.47, 293.15, 353.67, 293.44, 357.88, 293.74);
            path1_129.curveTo(362.72, 295.92, 366.66, 296.54, 365.92, 289.09);
            path1_129.curveTo(365.55, 288.09, 365.19, 287.09, 364.82, 286.09);
            path1_129.curveTo(364.53, 285.42, 364.24, 284.75, 363.95, 284.08);
            path1_129.curveTo(373.35, 284.90, 375.01, 278.02, 377.15, 271.24);
            path1_129.curveTo(377.74, 269.37, 380.57, 266.37, 381.32, 266.66);
            path1_129.curveTo(388.15, 269.26, 395.85, 257.86, 401.97, 267.96);
            path1_129.curveTo(401.97, 267.96, 402.01, 268.03, 402.01, 268.03);
            path1_129.curveTo(402.43, 268.67, 402.85, 269.32, 403.27, 269.96);
            path1_129.curveTo(403.54, 270.31, 403.82, 270.66, 404.09, 271.00);
            path1_129.lineTo(404.79, 272.04);
            path1_129.curveTo(404.85, 272.23, 404.87, 272.43, 404.85, 272.63);
            path1_129.curveTo(405.12, 273.10, 405.39, 273.58, 405.66, 274.05);
            path1_129.curveTo(405.78, 274.66, 405.90, 275.28, 406.02, 275.89);
            path1_129.curveTo(391.44, 269.37, 386.07, 279.96, 377.82, 288.80);
            path1_129.curveTo(373.32, 293.62, 371.55, 295.63, 375.02, 300.44);
            path1_129.curveTo(379.33, 306.40, 384.21, 313.30, 392.75, 308.46);
            path1_129.curveTo(398.47, 305.22, 402.29, 306.27, 406.51, 310.05);
            path1_129.curveTo(409.64, 312.86, 410.47, 311.27, 413.46, 308.59);
            path1_129.curveTo(419.30, 303.37, 412.01, 287.47, 423.58, 291.32);
            path1_129.curveTo(432.96, 294.44, 429.65, 288.17, 431.94, 286.01);
            path1_129.curveTo(433.92, 283.00, 436.00, 280.06, 437.73, 276.92);
            path1_129.curveTo(437.96, 276.50, 436.37, 275.07, 435.62, 274.11);
            path1_129.curveTo(434.68, 276.24, 434.18, 278.78, 432.67, 280.37);
            path1_129.curveTo(431.40, 281.71, 428.97, 281.94, 427.05, 282.66);
            path1_129.curveTo(427.35, 282.14, 427.65, 281.61, 427.96, 281.09);
            path1_129.curveTo(428.83, 280.49, 429.69, 279.89, 430.56, 279.29);
            path1_129.lineTo(430.87, 277.21);
            path1_129.curveTo(429.53, 275.52, 428.20, 273.84, 426.86, 272.15);
            path1_129.curveTo(427.21, 271.39, 427.56, 270.62, 427.90, 269.86);
            path1_129.curveTo(428.13, 269.21, 428.37, 268.56, 428.60, 267.92);
            path1_129.curveTo(429.71, 267.98, 430.82, 268.03, 431.93, 268.09);
            path1_129.curveTo(432.61, 267.07, 433.23, 266.01, 433.97, 265.03);
            path1_129.curveTo(438.01, 259.73, 429.14, 248.26, 437.42, 248.39);
            path1_129.curveTo(447.30, 248.55, 451.96, 259.75, 453.69, 269.59);
            path1_129.curveTo(454.18, 272.39, 451.95, 275.66, 450.96, 278.72);
            path1_129.curveTo(447.82, 276.71, 442.49, 277.81, 441.81, 272.21);
            path1_129.curveTo(441.75, 271.70, 440.59, 271.33, 439.94, 270.89);
            path1_129.curveTo(440.16, 274.91, 439.84, 279.05, 440.71, 282.92);
            path1_129.curveTo(442.63, 291.43, 441.51, 297.82, 431.70, 300.10);
            path1_129.curveTo(415.07, 303.97, 407.01, 326.03, 417.02, 339.79);
            path1_129.curveTo(417.82, 340.89, 417.66, 342.69, 417.95, 344.17);
            path1_129.curveTo(416.69, 343.72, 415.15, 343.58, 414.21, 342.76);
            path1_129.curveTo(408.08, 337.45, 402.17, 331.90, 395.98, 326.67);
            path1_129.curveTo(394.60, 325.51, 392.40, 325.32, 390.57, 324.69);
            path1_129.curveTo(391.30, 326.56, 391.64, 328.73, 392.82, 330.25);
            path1_129.curveTo(398.92, 338.10, 413.37, 344.34, 408.42, 354.43);
            path1_129.curveTo(403.55, 364.35, 392.23, 371.07, 377.20, 369.76);
            path1_129.curveTo(364.07, 368.61, 348.76, 380.83, 340.58, 360.52);
            path1_129.curveTo(325.85, 371.23, 324.26, 363.49, 326.45, 350.45);
            path1_129.curveTo(324.29, 350.96, 322.13, 351.47, 319.96, 351.98);
            path1_129.curveTo(321.63, 349.81, 323.26, 347.59, 324.99, 345.47);
            path1_129.curveTo(328.34, 341.37, 332.05, 337.36, 330.56, 331.49);
            path1_129.curveTo(330.43, 330.97, 327.56, 331.14, 325.96, 330.99);
            path1_129.curveTo(335.16, 317.38, 338.83, 302.17, 339.02, 285.95);
            path1_129.curveTo(341.09, 288.25, 343.16, 290.55, 345.22, 292.86);
            path1_129.lineTo(345.26, 292.85);
            path1_129.closePath();
            path1_129.fill(g2);
        }

        {
            BirbPath path1_130 = new BirbPath();
            path1_130.setFillColor(new Color(190, 116, 95));
            path1_130.moveTo(433.32, 440.03);
            path1_130.curveTo(433.18, 429.51, 433.03, 418.99, 432.89, 408.48);
            path1_130.curveTo(438.90, 404.44, 437.66, 394.60, 446.16, 392.32);
            path1_130.curveTo(449.55, 391.41, 452.54, 389.01, 455.71, 387.29);
            path1_130.curveTo(453.33, 382.97, 451.07, 378.58, 448.54, 374.35);
            path1_130.curveTo(446.05, 370.18, 443.30, 366.18, 440.66, 362.10);
            path1_130.curveTo(445.07, 360.73, 449.49, 359.36, 453.90, 357.99);
            path1_130.curveTo(464.61, 369.91, 461.54, 386.01, 466.05, 399.86);
            path1_130.curveTo(467.65, 404.78, 470.00, 412.40, 462.29, 418.50);
            path1_130.curveTo(454.48, 424.68, 462.17, 435.55, 459.33, 444.01);
            path1_130.curveTo(459.17, 444.49, 461.04, 445.66, 461.97, 446.50);
            path1_130.curveTo(465.51, 441.50, 469.64, 436.81, 472.49, 431.45);
            path1_130.curveTo(481.73, 414.07, 479.18, 394.14, 483.94, 375.75);
            path1_130.curveTo(484.27, 375.81, 484.59, 375.87, 484.92, 375.93);
            path1_130.curveTo(485.38, 388.65, 485.85, 401.37, 486.31, 414.09);
            path1_130.curveTo(485.71, 414.32, 484.58, 414.56, 484.58, 414.79);
            path1_130.curveTo(484.38, 438.68, 467.83, 458.03, 466.02, 481.40);
            path1_130.curveTo(465.36, 489.96, 463.38, 496.24, 452.84, 494.19);
            path1_130.curveTo(449.54, 493.41, 446.24, 492.64, 442.94, 491.86);
            path1_130.curveTo(441.02, 479.55, 425.10, 469.53, 437.47, 454.45);
            path1_130.curveTo(439.27, 452.25, 434.85, 444.96, 433.31, 440.03);
            path1_130.lineTo(433.32, 440.03);
            path1_130.closePath();
            path1_130.fill(g2);
        }

        {
            BirbPath path1_131 = new BirbPath();
            path1_131.setFillColor(new Color(146, 82, 61));
            path1_131.moveTo(444.83, 548.77);
            path1_131.curveTo(437.22, 548.44, 429.61, 548.10, 422.00, 547.77);
            path1_131.curveTo(421.50, 547.73, 421.00, 547.68, 420.49, 547.64);
            path1_131.curveTo(412.80, 539.56, 398.07, 537.90, 397.98, 522.92);
            path1_131.curveTo(403.18, 513.37, 413.88, 512.68, 422.09, 507.97);
            path1_131.curveTo(423.72, 506.70, 425.35, 505.43, 426.99, 504.16);
            path1_131.curveTo(430.26, 503.94, 433.52, 503.72, 436.79, 503.50);
            path1_131.curveTo(438.84, 503.97, 440.90, 504.44, 442.95, 504.90);
            path1_131.curveTo(443.67, 505.23, 444.40, 505.57, 445.12, 505.90);
            path1_131.curveTo(445.39, 506.07, 445.66, 506.24, 445.93, 506.41);
            path1_131.curveTo(446.62, 506.60, 447.31, 506.78, 448.00, 506.97);
            path1_131.lineTo(448.97, 507.75);
            path1_131.lineTo(459.03, 520.43);
            path1_131.curveTo(454.30, 529.88, 449.57, 539.32, 444.83, 548.77);
            path1_131.lineTo(444.83, 548.77);
            path1_131.moveTo(428.00, 532.02);
            path1_131.curveTo(427.49, 525.07, 424.74, 519.01, 417.61, 517.66);
            path1_131.curveTo(415.83, 517.32, 410.19, 524.78, 410.92, 526.07);
            path1_131.curveTo(413.64, 530.89, 417.71, 535.54, 422.40, 538.41);
            path1_131.curveTo(424.75, 539.85, 428.28, 536.26, 428.00, 532.01);
            path1_131.lineTo(428.00, 532.02);
            path1_131.fill(g2);
        }

        {
            BirbPath path1_132 = new BirbPath();
            path1_132.setFillColor(new Color(222, 151, 123));
            path1_132.moveTo(483.95, 375.75);
            path1_132.curveTo(479.19, 394.14, 481.73, 414.07, 472.50, 431.45);
            path1_132.curveTo(469.65, 436.82, 465.52, 441.50, 461.98, 446.50);
            path1_132.curveTo(461.05, 445.65, 459.18, 444.49, 459.34, 444.01);
            path1_132.curveTo(462.18, 435.54, 454.49, 424.67, 462.30, 418.50);
            path1_132.curveTo(470.01, 412.40, 467.66, 404.78, 466.06, 399.86);
            path1_132.curveTo(461.55, 386.02, 464.62, 369.91, 453.91, 357.99);
            path1_132.curveTo(454.61, 357.31, 455.31, 356.63, 456.01, 355.94);
            path1_132.curveTo(464.23, 358.65, 474.00, 342.16, 481.16, 357.97);
            path1_132.curveTo(481.40, 358.96, 481.63, 359.96, 481.87, 360.95);
            path1_132.curveTo(482.07, 362.92, 482.27, 364.90, 482.47, 366.87);
            path1_132.curveTo(482.64, 367.20, 482.82, 367.52, 483.00, 367.85);
            path1_132.curveTo(483.00, 367.85, 483.06, 367.96, 483.06, 367.96);
            path1_132.curveTo(483.36, 370.56, 483.66, 373.15, 483.96, 375.75);
            path1_132.lineTo(483.95, 375.75);
            path1_132.closePath();
            path1_132.fill(g2);
        }

        {
            BirbPath path1_133 = new BirbPath();
            path1_133.setFillColor(new Color(238, 239, 241));
            path1_133.moveTo(326.00, 330.98);
            path1_133.curveTo(327.60, 331.13, 330.47, 330.96, 330.60, 331.48);
            path1_133.curveTo(332.09, 337.36, 328.39, 341.36, 325.03, 345.46);
            path1_133.curveTo(323.29, 347.58, 321.67, 349.80, 320.00, 351.97);
            path1_133.curveTo(317.66, 354.60, 315.33, 357.23, 312.99, 359.86);
            path1_133.curveTo(304.38, 366.25, 295.76, 372.65, 287.15, 379.04);
            path1_133.curveTo(285.45, 380.37, 283.74, 381.70, 282.04, 383.03);
            path1_133.curveTo(280.72, 384.01, 279.40, 384.99, 278.08, 385.97);
            path1_133.curveTo(275.73, 387.97, 273.38, 389.96, 271.03, 391.96);
            path1_133.curveTo(270.74, 392.01, 270.44, 392.03, 270.14, 392.02);
            path1_133.curveTo(266.73, 390.43, 259.02, 395.01, 260.24, 390.71);
            path1_133.curveTo(261.98, 384.64, 269.16, 380.12, 274.02, 374.94);
            path1_133.curveTo(295.28, 364.93, 313.26, 351.05, 326.00, 330.96);
            path1_133.lineTo(326.00, 330.96);
            path1_133.lineTo(326.00, 330.98);
            path1_133.closePath();
            path1_133.fill(g2);
        }

        {
            BirbPath path1_134 = new BirbPath();
            path1_134.setFillColor(new Color(146, 82, 61));
            path1_134.moveTo(456.00, 355.95);
            path1_134.curveTo(455.30, 356.63, 454.60, 357.31, 453.90, 358.00);
            path1_134.curveTo(449.49, 359.37, 445.07, 360.74, 440.66, 362.11);
            path1_134.curveTo(443.30, 366.19, 446.05, 370.19, 448.54, 374.36);
            path1_134.curveTo(451.07, 378.59, 453.33, 382.98, 455.71, 387.30);
            path1_134.curveTo(452.54, 389.02, 449.55, 391.42, 446.16, 392.33);
            path1_134.curveTo(437.66, 394.61, 438.90, 404.45, 432.89, 408.49);
            path1_134.curveTo(427.84, 393.97, 430.56, 379.85, 435.12, 365.83);
            path1_134.curveTo(436.24, 363.51, 437.36, 361.19, 438.48, 358.86);
            path1_134.curveTo(441.34, 358.29, 444.21, 357.72, 447.07, 357.15);
            path1_134.curveTo(447.32, 357.11, 447.58, 357.08, 447.83, 357.04);
            path1_134.curveTo(448.53, 356.69, 449.24, 356.35, 449.94, 356.00);
            path1_134.curveTo(451.96, 355.98, 453.98, 355.97, 456.00, 355.95);
            path1_134.closePath();
            path1_134.fill(g2);
        }

        {
            BirbPath path1_135 = new BirbPath();
            path1_135.setFillColor(new Color(238, 239, 241));
            path1_135.moveTo(351.89, 179.99);
            path1_135.curveTo(355.80, 180.66, 362.98, 175.04, 362.92, 179.82);
            path1_135.curveTo(362.77, 190.47, 372.89, 199.13, 367.82, 210.13);
            path1_135.curveTo(367.23, 210.32, 366.64, 210.52, 366.05, 210.71);
            path1_135.curveTo(364.05, 209.38, 362.06, 208.05, 360.06, 206.71);
            path1_135.curveTo(359.35, 205.83, 358.64, 204.94, 357.93, 204.06);
            path1_135.curveTo(356.67, 203.02, 355.40, 201.99, 354.14, 200.95);
            path1_135.lineTo(349.99, 195.98);
            path1_135.curveTo(349.67, 195.65, 349.36, 195.32, 349.04, 194.99);
            path1_135.curveTo(349.04, 194.99, 349.12, 194.85, 349.12, 194.85);
            path1_135.curveTo(349.36, 190.76, 349.59, 186.68, 349.83, 182.59);
            path1_135.curveTo(350.52, 181.72, 351.21, 180.86, 351.90, 179.99);
            path1_135.lineTo(351.89, 179.99);
            path1_135.closePath();
            path1_135.fill(g2);
        }

        {
            BirbPath path1_136 = new BirbPath();
            path1_136.setFillColor(new Color(23, 21, 22));
            path1_136.moveTo(354.14, 200.95);
            path1_136.curveTo(355.40, 201.99, 356.67, 203.02, 357.93, 204.06);
            path1_136.curveTo(358.64, 204.94, 359.35, 205.83, 360.06, 206.71);
            path1_136.curveTo(362.06, 208.04, 364.05, 209.37, 366.05, 210.71);
            path1_136.curveTo(366.72, 210.99, 367.39, 211.27, 368.06, 211.56);
            path1_136.curveTo(370.16, 212.85, 372.25, 214.14, 374.35, 215.42);
            path1_136.curveTo(376.92, 218.22, 379.49, 221.02, 382.06, 223.82);
            path1_136.curveTo(382.04, 224.56, 382.02, 225.31, 381.99, 226.05);
            path1_136.curveTo(379.87, 226.16, 377.75, 226.27, 375.63, 226.37);
            path1_136.curveTo(373.38, 226.72, 371.14, 227.07, 368.89, 227.42);
            path1_136.curveTo(367.94, 227.22, 366.98, 227.01, 366.03, 226.81);
            path1_136.curveTo(364.37, 220.58, 351.21, 227.16, 353.98, 215.99);
            path1_136.curveTo(353.98, 214.68, 353.98, 213.37, 353.98, 212.05);
            path1_136.curveTo(353.96, 211.44, 353.94, 210.84, 353.91, 210.23);
            path1_136.curveTo(353.28, 207.15, 352.65, 204.07, 352.02, 200.99);
            path1_136.curveTo(352.73, 200.97, 353.45, 200.96, 354.16, 200.94);
            path1_136.lineTo(354.14, 200.95);
            path1_136.closePath();
            path1_136.fill(g2);
        }

        {
            BirbPath path1_137 = new BirbPath();
            path1_137.setFillColor(new Color(146, 82, 61));
            path1_137.moveTo(452.85, 494.19);
            path1_137.curveTo(463.39, 496.24, 465.37, 489.96, 466.03, 481.40);
            path1_137.curveTo(467.84, 458.03, 484.39, 438.68, 484.59, 414.79);
            path1_137.curveTo(484.59, 414.55, 485.72, 414.32, 486.32, 414.09);
            path1_137.curveTo(486.29, 415.34, 486.26, 416.60, 486.23, 417.85);
            path1_137.curveTo(486.12, 419.21, 486.00, 420.56, 485.89, 421.92);
            path1_137.curveTo(485.62, 423.95, 485.34, 425.98, 485.07, 428.01);
            path1_137.curveTo(484.69, 430.28, 484.30, 432.55, 483.92, 434.82);
            path1_137.curveTo(483.61, 435.88, 483.30, 436.95, 483.00, 438.01);
            path1_137.curveTo(482.70, 439.02, 482.40, 440.03, 482.09, 441.04);
            path1_137.curveTo(481.63, 442.68, 481.17, 444.33, 480.72, 445.97);
            path1_137.curveTo(480.57, 446.40, 480.41, 446.83, 480.26, 447.26);
            path1_137.curveTo(476.29, 463.01, 472.32, 478.75, 468.34, 494.50);
            path1_137.curveTo(468.20, 494.66, 468.07, 494.81, 467.93, 494.97);
            path1_137.curveTo(467.52, 495.20, 467.10, 495.44, 466.69, 495.67);
            path1_137.curveTo(466.35, 496.65, 466.01, 497.62, 465.67, 498.60);
            path1_137.curveTo(464.93, 498.71, 464.18, 498.83, 463.44, 498.94);
            path1_137.curveTo(462.65, 498.83, 461.86, 498.73, 461.08, 498.62);
            path1_137.lineTo(452.86, 494.20);
            path1_137.lineTo(452.85, 494.19);
            path1_137.closePath();
            path1_137.fill(g2);
        }

        {
            BirbPath path1_138 = new BirbPath();
            path1_138.setFillColor(new Color(50, 47, 48));
            path1_138.moveTo(452.85, 494.19);
            path1_138.curveTo(455.59, 495.66, 458.33, 497.14, 461.07, 498.61);
            path1_138.curveTo(460.78, 499.65, 460.49, 500.69, 460.19, 501.72);
            path1_138.curveTo(461.27, 500.79, 462.35, 499.86, 463.43, 498.93);
            path1_138.curveTo(464.17, 498.82, 464.92, 498.70, 465.66, 498.59);
            path1_138.curveTo(465.76, 504.69, 465.85, 510.79, 465.95, 516.89);
            path1_138.curveTo(464.36, 517.36, 462.77, 517.83, 461.18, 518.30);
            path1_138.curveTo(459.52, 507.81, 452.96, 504.00, 442.94, 504.89);
            path1_138.curveTo(440.89, 504.42, 438.83, 503.95, 436.78, 503.49);
            path1_138.curveTo(438.50, 500.31, 440.21, 497.14, 441.93, 493.96);
            path1_138.curveTo(442.25, 493.57, 442.57, 493.18, 442.89, 492.80);
            path1_138.curveTo(442.94, 492.49, 442.96, 492.17, 442.96, 491.85);
            path1_138.curveTo(446.26, 492.63, 449.56, 493.40, 452.86, 494.18);
            path1_138.lineTo(452.85, 494.19);
            path1_138.closePath();
            path1_138.fill(g2);
        }

        {
            BirbPath path1_139 = new BirbPath();
            path1_139.setFillColor(new Color(206, 198, 196));
            path1_139.moveTo(366.02, 226.81);
            path1_139.curveTo(366.97, 227.01, 367.93, 227.22, 368.88, 227.42);
            path1_139.curveTo(371.13, 227.07, 373.37, 226.72, 375.62, 226.37);
            path1_139.curveTo(377.74, 226.26, 379.86, 226.15, 381.98, 226.05);
            path1_139.curveTo(382.00, 225.31, 382.02, 224.56, 382.05, 223.82);
            path1_139.curveTo(379.48, 221.02, 376.91, 218.22, 374.34, 215.42);
            path1_139.curveTo(390.61, 220.27, 406.88, 225.12, 423.13, 230.02);
            path1_139.curveTo(423.57, 230.15, 423.83, 230.89, 424.17, 231.35);
            path1_139.curveTo(423.24, 231.33, 422.30, 231.40, 421.39, 231.28);
            path1_139.curveTo(414.62, 230.38, 406.97, 231.16, 401.27, 228.20);
            path1_139.curveTo(385.32, 219.90, 369.26, 237.79, 353.85, 226.97);
            path1_139.curveTo(357.90, 226.92, 361.96, 226.87, 366.01, 226.81);
            path1_139.lineTo(366.02, 226.81);
            path1_139.closePath();
            path1_139.fill(g2);
        }

        {
            BirbPath path1_140 = new BirbPath();
            path1_140.setFillColor(new Color(190, 116, 95));
            path1_140.moveTo(351.89, 179.99);
            path1_140.curveTo(351.20, 180.86, 350.51, 181.72, 349.82, 182.59);
            path1_140.curveTo(349.20, 183.24, 348.57, 183.90, 347.95, 184.55);
            path1_140.curveTo(338.97, 176.21, 350.93, 177.59, 352.77, 174.28);
            path1_140.curveTo(353.33, 173.28, 354.37, 172.55, 355.19, 171.70);
            path1_140.curveTo(353.94, 171.53, 352.68, 171.18, 351.44, 171.20);
            path1_140.curveTo(341.91, 171.34, 332.38, 171.55, 322.85, 171.74);
            path1_140.curveTo(336.35, 170.58, 349.84, 169.43, 363.34, 168.28);
            path1_140.curveTo(363.34, 168.28, 363.17, 168.34, 363.17, 168.33);
            path1_140.curveTo(362.83, 168.64, 362.48, 168.95, 362.14, 169.25);
            path1_140.curveTo(358.72, 172.83, 355.31, 176.41, 351.89, 180.00);
            path1_140.lineTo(351.89, 179.99);
            path1_140.closePath();
            path1_140.fill(g2);
        }

        {
            BirbPath path1_141 = new BirbPath();
            path1_141.setFillColor(new Color(23, 21, 22));
            path1_141.moveTo(465.95, 516.90);
            path1_141.curveTo(465.85, 510.80, 465.76, 504.70, 465.66, 498.60);
            path1_141.curveTo(466.00, 497.62, 466.34, 496.65, 466.68, 495.67);
            path1_141.curveTo(467.16, 495.73, 467.64, 495.78, 468.12, 495.84);
            path1_141.curveTo(470.35, 497.77, 472.59, 499.70, 474.82, 501.63);
            path1_141.curveTo(474.86, 502.83, 474.90, 504.02, 474.94, 505.22);
            path1_141.curveTo(474.79, 506.16, 474.64, 507.10, 474.49, 508.04);
            path1_141.curveTo(473.73, 509.34, 472.97, 510.64, 472.21, 511.94);
            path1_141.curveTo(471.83, 512.51, 471.44, 513.08, 471.06, 513.65);
            path1_141.curveTo(470.81, 514.08, 470.55, 514.52, 470.30, 514.95);
            path1_141.curveTo(469.84, 515.35, 469.38, 515.75, 468.92, 516.15);
            path1_141.curveTo(467.93, 516.41, 466.94, 516.66, 465.95, 516.92);
            path1_141.lineTo(465.95, 516.90);
            path1_141.closePath();
            path1_141.fill(g2);
        }

        {
            BirbPath path1_142 = new BirbPath();
            path1_142.setFillColor(new Color(23, 21, 22));
            path1_142.moveTo(442.94, 504.91);
            path1_142.curveTo(452.96, 504.02, 459.52, 507.83, 461.18, 518.32);
            path1_142.curveTo(460.46, 519.02, 459.74, 519.73, 459.02, 520.43);
            path1_142.curveTo(455.67, 516.20, 452.32, 511.97, 448.96, 507.75);
            path1_142.curveTo(448.64, 507.49, 448.31, 507.23, 447.99, 506.97);
            path1_142.curveTo(447.30, 506.78, 446.61, 506.60, 445.92, 506.41);
            path1_142.curveTo(445.70, 506.17, 445.42, 506.00, 445.10, 505.90);
            path1_142.curveTo(444.38, 505.57, 443.65, 505.23, 442.93, 504.90);
            path1_142.lineTo(442.94, 504.91);
            path1_142.closePath();
            path1_142.fill(g2);
        }

        {
            BirbPath path1_143 = new BirbPath();
            path1_143.setFillColor(new Color(50, 47, 48));
            path1_143.moveTo(366.02, 226.81);
            path1_143.curveTo(361.97, 226.86, 357.91, 226.91, 353.86, 226.97);
            path1_143.curveTo(353.41, 227.69, 352.97, 228.41, 352.53, 229.13);
            path1_143.curveTo(349.70, 230.10, 346.86, 231.07, 344.03, 232.04);
            path1_143.curveTo(344.03, 232.04, 343.74, 231.78, 343.74, 231.78);
            path1_143.curveTo(343.74, 231.45, 343.63, 231.15, 343.42, 230.89);
            path1_143.curveTo(344.27, 229.60, 345.12, 228.31, 345.97, 227.02);
            path1_143.curveTo(348.64, 223.34, 351.30, 219.67, 353.97, 215.99);
            path1_143.curveTo(351.20, 227.15, 364.36, 220.58, 366.02, 226.81);
            path1_143.closePath();
            path1_143.fill(g2);
        }

        {
            BirbPath path1_144 = new BirbPath();
            path1_144.setFillColor(new Color(222, 151, 123));
            path1_144.moveTo(404.10, 270.98);
            path1_144.curveTo(403.83, 270.63, 403.55, 270.28, 403.28, 269.94);
            path1_144.curveTo(403.19, 269.25, 403.09, 268.57, 403.00, 267.88);
            path1_144.lineTo(403.23, 262.26);
            path1_144.curveTo(409.65, 258.77, 416.23, 257.82, 423.08, 260.96);
            path1_144.curveTo(419.38, 261.33, 415.68, 261.69, 411.99, 262.06);
            path1_144.curveTo(411.32, 262.40, 410.64, 262.74, 409.97, 263.08);
            path1_144.curveTo(409.97, 263.08, 410.06, 263.00, 410.06, 263.00);
            path1_144.curveTo(408.97, 264.40, 407.89, 265.80, 406.80, 267.20);
            path1_144.curveTo(406.71, 267.25, 406.53, 267.34, 406.53, 267.35);
            path1_144.curveTo(406.59, 267.52, 406.69, 267.69, 406.77, 267.85);
            path1_144.curveTo(406.14, 269.44, 405.50, 271.02, 404.87, 272.61);
            path1_144.curveTo(404.89, 272.41, 404.87, 272.21, 404.81, 272.02);
            path1_144.curveTo(404.58, 271.67, 404.34, 271.32, 404.11, 270.98);
            path1_144.lineTo(404.10, 270.98);
            path1_144.closePath();
            path1_144.fill(g2);
        }

        {
            BirbPath path1_145 = new BirbPath();
            path1_145.setFillColor(new Color(206, 198, 196));
            path1_145.moveTo(411.98, 262.07);
            path1_145.curveTo(415.68, 261.70, 419.38, 261.34, 423.07, 260.97);
            path1_145.curveTo(427.14, 261.94, 431.40, 262.68, 431.94, 268.07);
            path1_145.curveTo(430.83, 268.02, 429.72, 267.96, 428.61, 267.90);
            path1_145.curveTo(423.98, 263.18, 418.13, 262.58, 411.99, 263.01);
            path1_145.curveTo(411.94, 262.69, 411.94, 262.38, 411.98, 262.06);
            path1_145.lineTo(411.98, 262.07);
            path1_145.closePath();
            path1_145.fill(g2);
        }

        {
            BirbPath path1_146 = new BirbPath();
            path1_146.setFillColor(new Color(206, 198, 196));
            path1_146.moveTo(365.92, 289.08);
            path1_146.curveTo(366.65, 296.53, 362.72, 295.91, 357.88, 293.73);
            path1_146.curveTo(374.44, 290.72, 356.45, 282.81, 360.12, 277.98);
            path1_146.curveTo(361.40, 280.01, 362.68, 282.03, 363.96, 284.06);
            path1_146.curveTo(364.25, 284.73, 364.54, 285.40, 364.83, 286.07);
            path1_146.curveTo(365.20, 287.07, 365.56, 288.07, 365.93, 289.08);
            path1_146.lineTo(365.92, 289.08);
            path1_146.closePath();
            path1_146.fill(g2);
        }

        {
            BirbPath path1_147 = new BirbPath();
            path1_147.setFillColor(new Color(146, 82, 61));
            path1_147.moveTo(474.83, 501.62);
            path1_147.curveTo(472.60, 499.69, 470.36, 497.76, 468.13, 495.83);
            path1_147.curveTo(468.09, 495.53, 468.03, 495.24, 467.93, 494.96);
            path1_147.curveTo(468.06, 494.80, 468.20, 494.65, 468.34, 494.49);
            path1_147.curveTo(471.35, 496.09, 475.49, 496.67, 474.83, 501.61);
            path1_147.lineTo(474.83, 501.62);
            path1_147.closePath();
            path1_147.fill(g2);
        }

        {
            BirbPath path1_148 = new BirbPath();
            path1_148.setFillColor(new Color(206, 198, 196));
            path1_148.moveTo(483.95, 375.75);
            path1_148.curveTo(483.65, 373.15, 483.35, 370.56, 483.05, 367.96);
            path1_148.curveTo(483.68, 370.62, 484.30, 373.27, 484.93, 375.92);
            path1_148.curveTo(484.60, 375.86, 484.28, 375.80, 483.95, 375.74);
            path1_148.lineTo(483.95, 375.75);
            path1_148.closePath();
            path1_148.fill(g2);
        }

        {
            BirbPath path1_149 = new BirbPath();
            path1_149.setFillColor(new Color(190, 116, 95));
            path1_149.moveTo(485.88, 421.91);
            path1_149.curveTo(485.99, 420.55, 486.11, 419.20, 486.22, 417.84);
            path1_149.curveTo(486.11, 419.20, 485.99, 420.55, 485.88, 421.91);
            path1_149.closePath();
            path1_149.fill(g2);
        }

        {
            BirbPath path1_150 = new BirbPath();
            path1_150.setFillColor(new Color(190, 116, 95));
            path1_150.moveTo(483.92, 434.82);
            path1_150.curveTo(484.30, 432.55, 484.68, 430.28, 485.07, 428.01);
            path1_150.curveTo(484.69, 430.28, 484.31, 432.55, 483.92, 434.82);
            path1_150.closePath();
            path1_150.fill(g2);
        }

        {
            BirbPath path1_151 = new BirbPath();
            path1_151.setFillColor(new Color(146, 82, 61));
            path1_151.moveTo(474.49, 508.03);
            path1_151.curveTo(474.64, 507.09, 474.79, 506.15, 474.94, 505.21);
            path1_151.curveTo(474.79, 506.15, 474.64, 507.09, 474.49, 508.03);
            path1_151.closePath();
            path1_151.fill(g2);
        }

        {
            BirbPath path1_152 = new BirbPath();
            path1_152.setFillColor(new Color(206, 198, 196));
            path1_152.moveTo(403.23, 262.26);
            path1_152.curveTo(403.15, 264.13, 403.08, 266.00, 403.00, 267.88);
            path1_152.curveTo(402.68, 267.94, 402.35, 267.98, 402.02, 268.01);
            path1_152.curveTo(402.02, 268.01, 401.98, 267.94, 401.98, 267.94);
            path1_152.curveTo(402.40, 266.05, 402.81, 264.15, 403.23, 262.26);
            path1_152.lineTo(403.23, 262.26);
            path1_152.closePath();
            path1_152.fill(g2);
        }

        {
            BirbPath path1_153 = new BirbPath();
            path1_153.setFillColor(new Color(50, 47, 48));
            path1_153.moveTo(351.47, 239.12);
            path1_153.curveTo(351.54, 238.40, 351.61, 237.68, 351.68, 236.97);
            path1_153.curveTo(351.61, 237.69, 351.54, 238.41, 351.47, 239.12);
            path1_153.closePath();
            path1_153.fill(g2);
        }

        {
            BirbPath path1_154 = new BirbPath();
            path1_154.setFillColor(new Color(206, 198, 196));
            path1_154.moveTo(351.21, 254.95);
            path1_154.curveTo(351.05, 254.27, 350.90, 253.59, 350.74, 252.90);
            path1_154.curveTo(350.90, 253.58, 351.05, 254.26, 351.21, 254.95);
            path1_154.closePath();
            path1_154.fill(g2);
        }

        {
            BirbPath path1_155 = new BirbPath();
            path1_155.setFillColor(new Color(146, 82, 61));
            path1_155.moveTo(468.92, 516.13);
            path1_155.curveTo(469.38, 515.73, 469.84, 515.33, 470.30, 514.93);
            path1_155.curveTo(469.84, 515.33, 469.38, 515.73, 468.92, 516.13);
            path1_155.closePath();
            path1_155.fill(g2);
        }

        {
            BirbPath path1_156 = new BirbPath();
            path1_156.setFillColor(new Color(146, 82, 61));
            path1_156.moveTo(471.06, 513.64);
            path1_156.curveTo(471.45, 513.07, 471.83, 512.50, 472.21, 511.93);
            path1_156.curveTo(471.82, 512.50, 471.44, 513.07, 471.06, 513.64);
            path1_156.closePath();
            path1_156.fill(g2);
        }

        {
            BirbPath path1_157 = new BirbPath();
            path1_157.setFillColor(new Color(50, 47, 48));
            path1_157.moveTo(350.47, 248.13);
            path1_157.curveTo(350.57, 247.41, 350.66, 246.70, 350.76, 245.98);
            path1_157.curveTo(350.66, 246.70, 350.57, 247.41, 350.47, 248.13);
            path1_157.closePath();
            path1_157.fill(g2);
        }

        {
            BirbPath path1_158 = new BirbPath();
            path1_158.setFillColor(new Color(206, 198, 196));
            path1_158.moveTo(359.77, 277.40);
            path1_158.curveTo(359.26, 276.59, 358.74, 275.77, 358.23, 274.96);
            path1_158.curveTo(358.74, 275.77, 359.26, 276.59, 359.77, 277.40);
            path1_158.closePath();
            path1_158.fill(g2);
        }

        {
            BirbPath path1_159 = new BirbPath();
            path1_159.setFillColor(new Color(206, 198, 196));
            path1_159.moveTo(368.06, 211.55);
            path1_159.curveTo(367.39, 211.27, 366.72, 210.99, 366.05, 210.70);
            path1_159.curveTo(366.64, 210.51, 367.23, 210.31, 367.82, 210.12);
            path1_159.curveTo(367.90, 210.60, 367.98, 211.07, 368.06, 211.55);
            path1_159.closePath();
            path1_159.fill(g2);
        }

        {
            BirbPath path1_160 = new BirbPath();
            path1_160.setFillColor(new Color(190, 116, 95));
            path1_160.moveTo(482.09, 441.04);
            path1_160.curveTo(482.39, 440.03, 482.69, 439.02, 483.00, 438.01);
            path1_160.curveTo(482.70, 439.02, 482.40, 440.03, 482.09, 441.04);
            path1_160.closePath();
            path1_160.fill(g2);
        }

        {
            BirbPath path1_161 = new BirbPath();
            path1_161.setFillColor(new Color(206, 198, 196));
            path1_161.moveTo(481.87, 360.96);
            path1_161.curveTo(481.63, 359.97, 481.40, 358.97, 481.16, 357.98);
            path1_161.curveTo(481.40, 358.97, 481.63, 359.97, 481.87, 360.96);
            path1_161.closePath();
            path1_161.fill(g2);
        }

        {
            BirbPath path1_162 = new BirbPath();
            path1_162.setFillColor(new Color(222, 151, 123));
            path1_162.moveTo(362.14, 169.24);
            path1_162.curveTo(362.48, 168.93, 362.83, 168.62, 363.17, 168.32);
            path1_162.curveTo(362.83, 168.63, 362.48, 168.94, 362.14, 169.24);
            path1_162.closePath();
            path1_162.fill(g2);
        }

        {
            BirbPath path1_163 = new BirbPath();
            path1_163.setFillColor(new Color(206, 198, 196));
            path1_163.moveTo(482.99, 367.86);
            path1_163.curveTo(482.81, 367.53, 482.64, 367.21, 482.46, 366.88);
            path1_163.curveTo(482.64, 367.21, 482.81, 367.53, 482.99, 367.86);
            path1_163.closePath();
            path1_163.fill(g2);
        }

        {
            BirbPath path1_164 = new BirbPath();
            path1_164.setFillColor(new Color(190, 116, 95));
            path1_164.moveTo(480.25, 447.26);
            path1_164.curveTo(480.40, 446.83, 480.56, 446.40, 480.71, 445.97);
            path1_164.curveTo(480.55, 446.40, 480.40, 446.83, 480.25, 447.26);
            path1_164.closePath();
            path1_164.fill(g2);
        }

        {
            BirbPath path1_165 = new BirbPath();
            path1_165.setFillColor(new Color(23, 21, 22));
            path1_165.moveTo(217.67, 498.50);
            path1_165.curveTo(211.96, 485.68, 206.25, 472.87, 200.55, 460.05);
            path1_165.curveTo(206.95, 465.25, 206.41, 477.75, 222.16, 473.35);
            path1_165.curveTo(230.52, 471.01, 246.59, 469.47, 246.23, 465.57);
            path1_165.curveTo(245.15, 454.15, 238.33, 443.14, 233.07, 432.30);
            path1_165.curveTo(229.80, 425.57, 223.19, 426.98, 217.31, 428.01);
            path1_165.curveTo(190.51, 432.72, 205.19, 410.05, 200.99, 400.96);
            path1_165.curveTo(196.72, 391.70, 208.35, 393.61, 214.42, 392.94);
            path1_165.curveTo(217.80, 392.56, 223.25, 394.61, 223.44, 389.64);
            path1_165.curveTo(223.56, 386.40, 219.78, 382.86, 217.38, 379.72);
            path1_165.curveTo(215.74, 377.57, 213.48, 375.89, 211.49, 373.99);
            path1_165.curveTo(212.14, 373.33, 212.68, 372.30, 213.46, 372.06);
            path1_165.curveTo(221.34, 369.63, 229.25, 367.33, 237.15, 365.00);
            path1_165.curveTo(237.03, 367.43, 236.92, 369.86, 236.80, 372.29);
            path1_165.curveTo(236.68, 373.45, 236.56, 374.62, 236.43, 375.78);
            path1_165.curveTo(236.32, 376.96, 236.20, 378.13, 236.09, 379.31);
            path1_165.curveTo(235.84, 381.46, 235.58, 383.61, 235.33, 385.75);
            path1_165.curveTo(234.90, 387.24, 234.47, 388.73, 234.05, 390.21);
            path1_165.curveTo(233.88, 390.78, 233.72, 391.34, 233.55, 391.91);
            path1_165.curveTo(232.75, 394.66, 231.95, 397.41, 231.14, 400.17);
            path1_165.curveTo(231.01, 400.70, 230.88, 401.23, 230.74, 401.77);
            path1_165.curveTo(230.58, 402.44, 230.43, 403.11, 230.27, 403.77);
            path1_165.curveTo(229.93, 405.83, 229.58, 407.90, 229.24, 409.96);
            path1_165.curveTo(229.21, 412.32, 229.18, 414.68, 229.16, 417.05);
            path1_165.curveTo(229.43, 418.30, 229.69, 419.54, 229.96, 420.79);
            path1_165.curveTo(236.78, 440.25, 251.06, 456.41, 253.42, 478.13);
            path1_165.curveTo(254.36, 486.75, 259.99, 495.76, 269.22, 500.37);
            path1_165.curveTo(269.29, 500.60, 269.45, 500.72, 269.69, 500.72);
            path1_165.curveTo(269.92, 500.89, 270.14, 501.08, 270.33, 501.30);
            path1_165.curveTo(270.33, 501.53, 270.44, 501.64, 270.68, 501.62);
            path1_165.curveTo(270.91, 501.75, 271.11, 501.91, 271.29, 502.10);
            path1_165.curveTo(288.70, 513.16, 307.62, 514.28, 327.27, 510.56);
            path1_165.curveTo(328.90, 511.00, 330.53, 511.44, 332.16, 511.88);
            path1_165.lineTo(333.26, 513.72);
            path1_165.curveTo(307.68, 511.63, 280.58, 521.83, 258.17, 497.17);
            path1_165.curveTo(250.78, 489.04, 231.78, 491.45, 218.09, 489.04);
            path1_165.curveTo(217.96, 492.19, 217.83, 495.34, 217.70, 498.48);
            path1_165.lineTo(217.67, 498.50);
            path1_165.closePath();
            path1_165.fill(g2);
        }

        {
            BirbPath path1_166 = new BirbPath();
            path1_166.setFillColor(new Color(23, 21, 22));
            path1_166.moveTo(300.92, 594.00);
            path1_166.curveTo(297.19, 589.42, 288.44, 589.74, 288.60, 581.37);
            path1_166.curveTo(288.18, 579.25, 288.51, 576.37, 287.23, 575.14);
            path1_166.curveTo(280.05, 568.18, 272.98, 572.04, 266.06, 576.02);
            path1_166.curveTo(264.40, 571.32, 254.54, 577.12, 257.23, 571.46);
            path1_166.curveTo(258.91, 567.93, 268.70, 568.27, 274.86, 566.87);
            path1_166.curveTo(277.80, 567.18, 280.73, 567.50, 283.67, 567.81);
            path1_166.curveTo(293.71, 566.18, 303.73, 564.43, 313.79, 562.95);
            path1_166.curveTo(323.06, 561.59, 331.88, 566.22, 331.12, 574.44);
            path1_166.curveTo(330.36, 582.68, 321.48, 575.45, 316.25, 575.81);
            path1_166.curveTo(308.53, 576.34, 300.76, 576.08, 293.01, 576.15);
            path1_166.curveTo(293.08, 577.84, 292.60, 579.82, 293.31, 581.18);
            path1_166.curveTo(295.62, 585.58, 298.36, 589.74, 300.93, 594.00);
            path1_166.lineTo(300.92, 594.00);
            path1_166.closePath();
            path1_166.fill(g2);
        }

        {
            BirbPath path1_167 = new BirbPath();
            path1_167.setFillColor(new Color(23, 21, 22));
            path1_167.moveTo(339.88, 535.36);
            path1_167.curveTo(344.04, 536.65, 350.14, 533.90, 347.07, 540.99);
            path1_167.curveTo(346.02, 543.42, 343.48, 545.16, 341.96, 547.44);
            path1_167.curveTo(338.19, 553.12, 336.86, 559.83, 341.00, 565.14);
            path1_167.curveTo(345.71, 571.17, 346.31, 561.60, 349.80, 561.55);
            path1_167.curveTo(358.34, 561.42, 368.77, 557.77, 370.10, 571.40);
            path1_167.curveTo(370.17, 572.13, 360.45, 576.03, 357.27, 574.46);
            path1_167.curveTo(347.34, 569.54, 345.94, 579.84, 340.38, 582.32);
            path1_167.curveTo(339.56, 582.69, 338.98, 583.60, 338.29, 584.27);
            path1_167.curveTo(337.86, 583.68, 337.11, 583.11, 337.06, 582.49);
            path1_167.curveTo(336.01, 567.75, 334.90, 553.01, 334.34, 538.25);
            path1_167.curveTo(334.30, 537.22, 338.50, 536.04, 339.86, 535.36);
            path1_167.lineTo(339.88, 535.36);
            path1_167.closePath();
            path1_167.fill(g2);
        }

        {
            BirbPath path1_168 = new BirbPath();
            path1_168.setFillColor(new Color(23, 21, 22));
            path1_168.moveTo(397.98, 522.92);
            path1_168.curveTo(398.08, 537.91, 412.81, 539.57, 420.49, 547.64);
            path1_168.curveTo(409.98, 543.79, 399.47, 539.93, 388.96, 536.08);
            path1_168.curveTo(389.62, 529.55, 385.14, 535.47, 383.75, 533.93);
            path1_168.curveTo(382.16, 524.60, 380.56, 515.27, 378.97, 505.94);
            path1_168.curveTo(380.29, 505.60, 381.60, 505.26, 382.92, 504.92);
            path1_168.curveTo(391.90, 507.61, 387.09, 521.83, 397.98, 522.93);
            path1_168.lineTo(397.98, 522.92);
            path1_168.moveTo(390.21, 524.59);
            path1_168.curveTo(389.72, 525.57, 389.34, 526.05, 389.29, 526.57);
            path1_168.curveTo(389.27, 526.83, 390.01, 527.46, 390.14, 527.39);
            path1_168.curveTo(390.65, 527.13, 391.25, 526.74, 391.42, 526.25);
            path1_168.curveTo(391.52, 525.98, 390.85, 525.43, 390.21, 524.59);
            path1_168.lineTo(390.21, 524.59);
            path1_168.fill(g2);
        }

        {
            BirbPath path1_169 = new BirbPath();
            path1_169.setFillColor(new Color(23, 21, 22));
            path1_169.moveTo(251.78, 558.50);
            path1_169.curveTo(252.49, 557.62, 253.19, 556.74, 253.90, 555.86);
            path1_169.curveTo(254.53, 555.10, 255.16, 554.34, 255.79, 553.58);
            path1_169.curveTo(255.85, 550.75, 255.91, 547.92, 255.97, 545.09);
            path1_169.curveTo(258.79, 540.32, 255.43, 522.57, 268.42, 539.15);
            path1_169.curveTo(267.28, 541.67, 264.54, 545.09, 265.35, 546.51);
            path1_169.curveTo(266.74, 548.96, 270.32, 550.16, 272.99, 551.89);
            path1_169.curveTo(272.99, 551.89, 273.02, 551.91, 273.02, 551.91);
            path1_169.curveTo(272.99, 552.41, 272.96, 552.91, 272.94, 553.41);
            path1_169.curveTo(273.22, 554.12, 273.51, 554.83, 273.79, 555.54);
            path1_169.curveTo(274.15, 557.34, 274.51, 559.15, 274.86, 560.95);
            path1_169.curveTo(266.27, 565.20, 257.18, 564.81, 248.03, 563.82);
            path1_169.curveTo(249.28, 562.05, 250.53, 560.27, 251.79, 558.50);
            path1_169.lineTo(251.78, 558.50);
            path1_169.closePath();
            path1_169.fill(g2);
        }

        {
            BirbPath path1_170 = new BirbPath();
            path1_170.setFillColor(new Color(23, 21, 22));
            path1_170.moveTo(270.01, 538.77);
            path1_170.curveTo(271.80, 532.90, 265.74, 521.70, 275.28, 522.03);
            path1_170.curveTo(283.48, 522.31, 281.01, 533.42, 281.03, 540.40);
            path1_170.curveTo(281.00, 541.53, 280.97, 542.66, 280.94, 543.78);
            path1_170.curveTo(281.01, 544.64, 281.08, 545.50, 281.15, 546.35);
            path1_170.curveTo(281.38, 547.72, 277.24, 550.06, 282.05, 550.41);
            path1_170.curveTo(281.55, 550.59, 281.06, 550.77, 280.56, 550.94);
            path1_170.curveTo(279.50, 551.60, 278.43, 552.25, 277.37, 552.91);
            path1_170.curveTo(276.61, 552.96, 275.86, 553.00, 275.10, 553.05);
            path1_170.curveTo(274.41, 552.67, 273.71, 552.29, 273.02, 551.91);
            path1_170.curveTo(273.02, 551.91, 272.99, 551.89, 272.99, 551.89);
            path1_170.curveTo(272.05, 549.91, 271.10, 547.92, 270.16, 545.94);
            path1_170.curveTo(272.85, 545.65, 275.53, 545.36, 278.22, 545.07);
            path1_170.curveTo(275.31, 544.77, 272.41, 544.47, 269.50, 544.17);
            path1_170.curveTo(269.67, 542.37, 269.85, 540.57, 270.02, 538.76);
            path1_170.lineTo(270.01, 538.77);
            path1_170.closePath();
            path1_170.fill(g2);
        }

        {
            BirbPath path1_171 = new BirbPath();
            path1_171.setFillColor(new Color(50, 47, 48));
            path1_171.moveTo(382.92, 504.91);
            path1_171.curveTo(381.60, 505.25, 380.29, 505.59, 378.97, 505.93);
            path1_171.curveTo(370.34, 508.03, 361.71, 510.14, 353.08, 512.24);
            path1_171.curveTo(352.39, 512.49, 351.69, 512.75, 351.00, 513.00);
            path1_171.curveTo(349.33, 513.31, 347.67, 513.61, 346.00, 513.92);
            path1_171.curveTo(345.34, 513.96, 344.67, 513.99, 344.01, 514.03);
            path1_171.curveTo(341.32, 513.99, 338.63, 513.94, 335.95, 513.90);
            path1_171.curveTo(335.97, 513.33, 335.99, 512.76, 336.01, 512.19);
            path1_171.curveTo(352.05, 509.17, 368.08, 506.15, 384.11, 503.13);
            path1_171.curveTo(383.72, 503.72, 383.32, 504.32, 382.93, 504.91);
            path1_171.lineTo(382.92, 504.91);
            path1_171.closePath();
            path1_171.fill(g2);
        }

        {
            BirbPath path1_172 = new BirbPath();
            path1_172.setFillColor(new Color(206, 198, 196));
            path1_172.moveTo(270.01, 538.77);
            path1_172.curveTo(269.84, 540.57, 269.66, 542.37, 269.49, 544.18);
            path1_172.curveTo(269.71, 544.77, 269.93, 545.36, 270.15, 545.95);
            path1_172.curveTo(271.09, 547.93, 272.04, 549.92, 272.98, 551.90);
            path1_172.curveTo(270.32, 550.17, 266.73, 548.97, 265.34, 546.52);
            path1_172.curveTo(264.54, 545.11, 267.27, 541.68, 268.41, 539.16);
            path1_172.curveTo(268.94, 539.03, 269.47, 538.90, 270.00, 538.77);
            path1_172.lineTo(270.01, 538.77);
            path1_172.closePath();
            path1_172.fill(g2);
        }

        {
            BirbPath path1_173 = new BirbPath();
            path1_173.setFillColor(new Color(206, 198, 196));
            path1_173.moveTo(277.36, 552.92);
            path1_173.curveTo(278.42, 552.26, 279.49, 551.61, 280.55, 550.95);
            path1_173.curveTo(280.33, 552.37, 280.11, 553.79, 279.89, 555.21);
            path1_173.curveTo(279.89, 555.68, 279.87, 556.15, 279.86, 556.62);
            path1_173.curveTo(280.13, 557.42, 280.40, 558.22, 280.66, 559.02);
            path1_173.curveTo(280.52, 560.64, 280.38, 562.27, 280.24, 563.89);
            path1_173.curveTo(279.39, 564.59, 278.55, 565.29, 277.70, 566.00);
            path1_173.curveTo(276.91, 566.01, 276.12, 566.03, 275.34, 566.04);
            path1_173.curveTo(275.17, 564.34, 275.01, 562.64, 274.84, 560.95);
            path1_173.curveTo(274.48, 559.15, 274.12, 557.34, 273.77, 555.54);
            path1_173.curveTo(274.97, 554.67, 276.16, 553.79, 277.36, 552.92);
            path1_173.lineTo(277.36, 552.92);
            path1_173.closePath();
            path1_173.fill(g2);
        }

        {
            BirbPath path1_174 = new BirbPath();
            path1_174.setFillColor(new Color(146, 82, 61));
            path1_174.moveTo(275.35, 566.04);
            path1_174.curveTo(276.14, 566.03, 276.93, 566.01, 277.71, 566.00);
            path1_174.curveTo(279.93, 566.96, 281.27, 566.86, 280.25, 563.90);
            path1_174.curveTo(280.39, 562.27, 280.53, 560.65, 280.67, 559.03);
            path1_174.curveTo(281.67, 561.96, 282.66, 564.89, 283.65, 567.81);
            path1_174.curveTo(280.71, 567.50, 277.78, 567.18, 274.84, 566.87);
            path1_174.curveTo(274.87, 566.51, 275.04, 566.24, 275.34, 566.05);
            path1_174.lineTo(275.35, 566.04);
            path1_174.closePath();
            path1_174.fill(g2);
        }

        {
            BirbPath path1_175 = new BirbPath();
            path1_175.setFillColor(new Color(50, 47, 48));
            path1_175.moveTo(383.75, 533.93);
            path1_175.curveTo(385.15, 535.48, 389.62, 529.56, 388.96, 536.08);
            path1_175.curveTo(387.22, 535.36, 385.49, 534.65, 383.75, 533.93);
            path1_175.closePath();
            path1_175.fill(g2);
        }

        {
            BirbPath path1_176 = new BirbPath();
            path1_176.setFillColor(new Color(23, 21, 22));
            path1_176.moveTo(371.65, 528.67);
            path1_176.curveTo(369.96, 529.23, 369.06, 529.84, 368.38, 529.65);
            path1_176.curveTo(367.69, 529.46, 367.21, 528.49, 366.64, 527.86);
            path1_176.curveTo(367.32, 527.56, 368.03, 526.97, 368.66, 527.05);
            path1_176.curveTo(369.42, 527.14, 370.12, 527.80, 371.65, 528.67);
            path1_176.lineTo(371.65, 528.67);
            path1_176.closePath();
            path1_176.fill(g2);
        }

        {
            BirbPath path1_177 = new BirbPath();
            path1_177.setFillColor(new Color(190, 116, 95));
            path1_177.moveTo(280.93, 543.78);
            path1_177.curveTo(280.96, 542.65, 280.99, 541.52, 281.02, 540.40);
            path1_177.curveTo(281.82, 541.44, 282.62, 542.49, 283.42, 543.53);
            path1_177.curveTo(283.27, 543.65, 283.12, 543.78, 283.00, 543.93);
            path1_177.curveTo(282.31, 543.88, 281.62, 543.83, 280.93, 543.78);
            path1_177.lineTo(280.93, 543.78);
            path1_177.closePath();
            path1_177.fill(g2);
        }

        {
            BirbPath path1_178 = new BirbPath();
            path1_178.setFillColor(new Color(23, 21, 22));
            path1_178.moveTo(221.88, 507.02);
            path1_178.curveTo(221.07, 505.43, 220.26, 503.85, 219.45, 502.26);
            path1_178.curveTo(220.26, 503.85, 221.07, 505.43, 221.88, 507.02);
            path1_178.closePath();
            path1_178.fill(g2);
        }

        {
            BirbPath path1_179 = new BirbPath();
            path1_179.setFillColor(new Color(190, 116, 95));
            path1_179.moveTo(283.42, 543.53);
            path1_179.curveTo(283.35, 545.16, 283.27, 546.80, 283.20, 548.43);
            path1_179.curveTo(283.20, 548.43, 282.90, 548.32, 282.90, 548.32);
            path1_179.lineTo(282.99, 548.01);
            path1_179.curveTo(282.99, 546.65, 282.99, 545.29, 283.00, 543.92);
            path1_179.curveTo(283.13, 543.77, 283.27, 543.64, 283.42, 543.52);
            path1_179.lineTo(283.42, 543.53);
            path1_179.closePath();
            path1_179.fill(g2);
        }

        {
            BirbPath path1_180 = new BirbPath();
            path1_180.setFillColor(new Color(146, 82, 61));
            path1_180.moveTo(336.00, 512.19);
            path1_180.curveTo(335.98, 512.76, 335.96, 513.33, 335.94, 513.90);
            path1_180.curveTo(335.04, 513.85, 334.13, 513.79, 333.23, 513.74);
            path1_180.curveTo(332.87, 513.13, 332.50, 512.51, 332.13, 511.90);
            path1_180.curveTo(333.42, 512.00, 334.70, 512.10, 335.99, 512.20);
            path1_180.lineTo(336.00, 512.19);
            path1_180.closePath();
            path1_180.fill(g2);
        }

        {
            BirbPath path1_181 = new BirbPath();
            path1_181.setFillColor(new Color(23, 21, 22));
            path1_181.moveTo(223.80, 511.27);
            path1_181.curveTo(223.15, 509.88, 222.51, 508.49, 221.86, 507.09);
            path1_181.curveTo(222.51, 508.48, 223.16, 509.87, 223.80, 511.27);
            path1_181.closePath();
            path1_181.fill(g2);
        }

        {
            BirbPath path1_182 = new BirbPath();
            path1_182.setFillColor(new Color(190, 116, 95));
            path1_182.moveTo(282.05, 550.42);
            path1_182.curveTo(277.24, 550.07, 281.38, 547.73, 281.15, 546.36);
            path1_182.curveTo(281.48, 547.08, 281.81, 547.80, 282.13, 548.52);
            path1_182.curveTo(282.48, 548.52, 282.82, 548.52, 283.17, 548.52);
            path1_182.curveTo(282.80, 549.15, 282.42, 549.78, 282.05, 550.41);
            path1_182.lineTo(282.05, 550.42);
            path1_182.closePath();
            path1_182.fill(g2);
        }

        {
            BirbPath path1_183 = new BirbPath();
            path1_183.setFillColor(new Color(23, 21, 22));
            path1_183.moveTo(351.00, 513.00);
            path1_183.curveTo(351.69, 512.75, 352.39, 512.49, 353.08, 512.24);
            path1_183.curveTo(352.39, 512.50, 351.69, 512.75, 351.00, 513.00);
            path1_183.closePath();
            path1_183.fill(g2);
        }

        {
            BirbPath path1_184 = new BirbPath();
            path1_184.setFillColor(new Color(23, 21, 22));
            path1_184.moveTo(344.00, 514.03);
            path1_184.curveTo(344.66, 513.99, 345.33, 513.96, 345.99, 513.92);
            path1_184.curveTo(345.33, 513.96, 344.66, 513.99, 344.00, 514.03);
            path1_184.closePath();
            path1_184.fill(g2);
        }

        {
            BirbPath path1_185 = new BirbPath();
            path1_185.setFillColor(new Color(146, 82, 61));
            path1_185.moveTo(279.88, 556.62);
            path1_185.curveTo(279.88, 556.15, 279.90, 555.68, 279.91, 555.21);
            path1_185.curveTo(279.91, 555.68, 279.89, 556.15, 279.88, 556.62);
            path1_185.closePath();
            path1_185.fill(g2);
        }

        {
            BirbPath path1_186 = new BirbPath();
            path1_186.setFillColor(new Color(23, 21, 22));
            path1_186.moveTo(283.17, 548.52);
            path1_186.curveTo(282.82, 548.52, 282.48, 548.52, 282.13, 548.52);
            path1_186.curveTo(282.42, 548.35, 282.70, 548.19, 282.99, 548.02);
            path1_186.curveTo(282.99, 548.02, 282.90, 548.33, 282.90, 548.33);
            path1_186.curveTo(282.90, 548.33, 283.20, 548.44, 283.20, 548.44);
            path1_186.curveTo(283.20, 548.44, 283.17, 548.53, 283.17, 548.53);
            path1_186.lineTo(283.17, 548.52);
            path1_186.closePath();
            path1_186.fill(g2);
        }

        {
            BirbPath path1_187 = new BirbPath();
            path1_187.setFillColor(new Color(235, 236, 238));
            path1_187.moveTo(391.99, 27.06);
            path1_187.curveTo(389.15, 28.92, 387.58, 30.72, 385.97, 30.76);
            path1_187.curveTo(384.72, 30.79, 382.14, 27.94, 382.35, 27.55);
            path1_187.curveTo(383.42, 25.55, 385.20, 23.93, 386.74, 22.18);
            path1_187.curveTo(388.07, 23.42, 389.40, 24.65, 391.99, 27.06);
            path1_187.lineTo(391.99, 27.06);
            path1_187.closePath();
            path1_187.fill(g2);
        }

        {
            BirbPath path1_188 = new BirbPath();
            path1_188.setFillColor(new Color(235, 236, 238));
            path1_188.moveTo(396.18, 12.32);
            path1_188.curveTo(394.52, 14.20, 393.30, 15.57, 392.09, 16.94);
            path1_188.curveTo(391.06, 15.59, 388.99, 14.01, 389.23, 12.92);
            path1_188.curveTo(389.64, 10.98, 391.44, 9.33, 392.66, 7.56);
            path1_188.curveTo(393.67, 8.92, 394.68, 10.28, 396.19, 12.32);
            path1_188.lineTo(396.18, 12.32);
            path1_188.closePath();
            path1_188.fill(g2);
        }

        {
            BirbPath path1_189 = new BirbPath();
            path1_189.setFillColor(new Color(50, 47, 48));
            path1_189.moveTo(251.78, 558.50);
            path1_189.curveTo(250.53, 560.27, 249.28, 562.05, 248.02, 563.82);
            path1_189.curveTo(225.58, 574.03, 204.42, 570.51, 184.11, 557.86);
            path1_189.curveTo(184.09, 556.54, 184.06, 555.22, 184.04, 553.89);
            path1_189.curveTo(186.18, 554.58, 188.31, 555.28, 190.45, 555.97);
            path1_189.curveTo(192.78, 556.05, 195.11, 556.12, 197.44, 556.20);
            path1_189.curveTo(197.05, 554.38, 197.21, 551.97, 196.09, 550.93);
            path1_189.curveTo(195.17, 550.07, 192.73, 550.85, 190.97, 550.90);
            path1_189.curveTo(190.13, 548.14, 189.29, 545.38, 188.46, 542.61);
            path1_189.curveTo(197.25, 545.19, 205.94, 548.20, 214.85, 550.20);
            path1_189.curveTo(222.01, 551.81, 226.17, 553.54, 219.08, 560.55);
            path1_189.curveTo(218.58, 561.05, 218.81, 562.30, 218.71, 563.20);
            path1_189.curveTo(225.61, 563.33, 232.59, 564.10, 239.40, 563.37);
            path1_189.curveTo(243.65, 562.91, 247.67, 560.20, 251.79, 558.49);
            path1_189.lineTo(251.78, 558.50);
            path1_189.closePath();
            path1_189.fill(g2);
        }

        {
            BirbPath path1_190 = new BirbPath();
            path1_190.setFillColor(new Color(206, 198, 196));
            path1_190.moveTo(266.06, 576.02);
            path1_190.curveTo(272.99, 572.03, 280.05, 568.17, 287.23, 575.14);
            path1_190.curveTo(288.50, 576.37, 288.18, 579.25, 288.60, 581.37);
            path1_190.curveTo(281.68, 584.73, 274.77, 588.09, 267.85, 591.45);
            path1_190.curveTo(265.75, 589.27, 263.64, 587.09, 261.54, 584.91);
            path1_190.curveTo(261.36, 584.24, 261.17, 583.57, 260.99, 582.91);
            path1_190.curveTo(262.68, 580.61, 264.37, 578.32, 266.06, 576.02);
            path1_190.lineTo(266.06, 576.02);
            path1_190.closePath();
            path1_190.fill(g2);
        }

        {
            BirbPath path1_191 = new BirbPath();
            path1_191.setFillColor(new Color(23, 21, 22));
            path1_191.moveTo(184.04, 553.89);
            path1_191.curveTo(184.06, 555.21, 184.09, 556.54, 184.11, 557.86);
            path1_191.curveTo(179.75, 555.23, 175.40, 552.60, 171.04, 549.97);
            path1_191.curveTo(174.05, 550.29, 177.06, 550.61, 180.07, 550.92);
            path1_191.curveTo(180.07, 550.92, 180.03, 550.88, 180.03, 550.88);
            path1_191.curveTo(181.37, 551.89, 182.72, 552.90, 184.06, 553.92);
            path1_191.curveTo(184.06, 553.92, 184.03, 553.89, 184.03, 553.89);
            path1_191.lineTo(184.04, 553.89);
            path1_191.closePath();
            path1_191.fill(g2);
        }

        {
            BirbPath path1_192 = new BirbPath();
            path1_192.setFillColor(new Color(146, 82, 61));
            path1_192.moveTo(190.96, 550.91);
            path1_192.curveTo(192.73, 550.86, 195.16, 550.08, 196.08, 550.94);
            path1_192.curveTo(197.20, 551.98, 197.04, 554.39, 197.43, 556.21);
            path1_192.curveTo(195.10, 556.13, 192.77, 556.06, 190.44, 555.98);
            path1_192.curveTo(190.61, 554.29, 190.78, 552.60, 190.95, 550.91);
            path1_192.lineTo(190.96, 550.91);
            path1_192.closePath();
            path1_192.fill(g2);
        }

        {
            BirbPath path1_193 = new BirbPath();
            path1_193.setFillColor(new Color(50, 47, 48));
            path1_193.moveTo(180.08, 550.92);
            path1_193.curveTo(177.07, 550.60, 174.06, 550.28, 171.05, 549.97);
            path1_193.curveTo(170.16, 549.29, 168.41, 548.24, 168.51, 547.99);
            path1_193.curveTo(169.07, 546.69, 170.77, 544.53, 170.87, 544.59);
            path1_193.curveTo(174.02, 546.56, 177.04, 548.76, 180.08, 550.93);
            path1_193.lineTo(180.08, 550.92);
            path1_193.closePath();
            path1_193.fill(g2);
        }

        {
            BirbPath path1_194 = new BirbPath();
            path1_194.setFillColor(new Color(190, 116, 95));
            path1_194.moveTo(261.54, 584.91);
            path1_194.curveTo(263.65, 587.09, 265.75, 589.27, 267.85, 591.45);
            path1_194.curveTo(266.85, 591.69, 265.85, 591.93, 264.86, 592.17);
            path1_194.curveTo(263.54, 590.09, 262.22, 588.01, 260.90, 585.93);
            path1_194.curveTo(261.11, 585.59, 261.33, 585.25, 261.54, 584.91);
            path1_194.closePath();
            path1_194.fill(g2);
        }

        {
            BirbPath path1_195 = new BirbPath();
            path1_195.setFillColor(new Color(50, 47, 48));
            path1_195.moveTo(184.07, 553.92);
            path1_195.curveTo(182.73, 552.91, 181.38, 551.90, 180.04, 550.88);
            path1_195.curveTo(181.38, 551.89, 182.73, 552.90, 184.07, 553.92);
            path1_195.closePath();
            path1_195.fill(g2);
        }

        {
            BirbPath path1_196 = new BirbPath();
            path1_196.setFillColor(new Color(23, 21, 22));
            path1_196.moveTo(261.54, 584.91);
            path1_196.curveTo(261.33, 585.25, 261.11, 585.59, 260.90, 585.93);
            path1_196.curveTo(260.36, 585.33, 259.82, 584.74, 259.29, 584.14);
            path1_196.curveTo(259.86, 583.73, 260.43, 583.32, 261.00, 582.90);
            path1_196.curveTo(261.18, 583.57, 261.37, 584.24, 261.55, 584.90);
            path1_196.lineTo(261.54, 584.91);
            path1_196.closePath();
            path1_196.fill(g2);
        }

        {
            BirbPath path1_197 = new BirbPath();
            path1_197.setFillColor(new Color(235, 236, 238));
            path1_197.moveTo(568.59, 98.20);
            path1_197.curveTo(562.69, 97.88, 557.80, 99.06, 558.19, 93.15);
            path1_197.curveTo(558.31, 91.35, 562.25, 88.00, 563.07, 88.37);
            path1_197.curveTo(566.86, 90.08, 570.17, 92.86, 573.66, 95.26);
            path1_197.curveTo(571.42, 96.56, 569.19, 97.85, 568.58, 98.20);
            path1_197.lineTo(568.59, 98.20);
            path1_197.closePath();
            path1_197.fill(g2);
        }

        {
            BirbPath path1_198 = new BirbPath();
            path1_198.setFillColor(new Color(235, 236, 238));
            path1_198.moveTo(592.80, 106.72);
            path1_198.curveTo(591.07, 105.22, 589.65, 104.00, 588.23, 102.78);
            path1_198.curveTo(589.48, 101.99, 590.97, 100.34, 591.94, 100.61);
            path1_198.curveTo(593.60, 101.06, 594.94, 102.71, 596.41, 103.85);
            path1_198.curveTo(595.35, 104.69, 594.29, 105.54, 592.80, 106.72);
            path1_198.closePath();
            path1_198.fill(g2);
        }

        {
            BirbPath path1_199 = new BirbPath();
            path1_199.setFillColor(new Color(8, 7, 11));
            path1_199.moveTo(237.14, 365.01);
            path1_199.curveTo(229.24, 367.34, 221.32, 369.64, 213.45, 372.07);
            path1_199.curveTo(212.67, 372.31, 212.13, 373.34, 211.48, 374.00);
            path1_199.curveTo(213.46, 375.89, 215.72, 377.57, 217.37, 379.73);
            path1_199.curveTo(219.76, 382.86, 223.55, 386.41, 223.43, 389.65);
            path1_199.curveTo(223.24, 394.62, 217.79, 392.57, 214.41, 392.95);
            path1_199.curveTo(208.34, 393.63, 196.70, 391.72, 200.98, 400.97);
            path1_199.curveTo(205.18, 410.06, 190.51, 432.73, 217.30, 428.02);
            path1_199.curveTo(223.18, 426.99, 229.79, 425.58, 233.06, 432.31);
            path1_199.curveTo(238.33, 443.14, 245.15, 454.16, 246.22, 465.58);
            path1_199.curveTo(246.59, 469.48, 230.51, 471.02, 222.15, 473.36);
            path1_199.curveTo(206.40, 477.76, 206.94, 465.26, 200.54, 460.06);
            path1_199.curveTo(199.69, 458.06, 198.84, 456.06, 197.99, 454.06);
            path1_199.curveTo(197.62, 453.36, 197.26, 452.66, 196.89, 451.96);
            path1_199.curveTo(196.56, 451.03, 196.22, 450.11, 195.89, 449.18);
            path1_199.curveTo(195.46, 448.15, 195.04, 447.12, 194.61, 446.09);
            path1_199.curveTo(194.40, 445.73, 194.20, 445.36, 193.99, 445.00);
            path1_199.curveTo(193.34, 443.33, 192.70, 441.65, 192.05, 439.98);
            path1_199.curveTo(191.28, 437.81, 190.50, 435.64, 189.73, 433.46);
            path1_199.curveTo(189.27, 432.62, 188.80, 431.79, 188.33, 430.95);
            path1_199.curveTo(188.14, 429.76, 187.94, 428.57, 187.75, 427.38);
            path1_199.curveTo(187.62, 426.24, 187.48, 425.10, 187.34, 423.96);
            path1_199.curveTo(186.99, 423.94, 186.64, 423.92, 186.28, 423.91);
            path1_199.curveTo(186.24, 423.26, 186.21, 422.62, 186.17, 421.97);
            path1_199.curveTo(186.44, 402.31, 186.71, 382.65, 186.98, 363.00);
            path1_199.curveTo(186.32, 361.64, 185.67, 360.27, 185.01, 358.91);
            path1_199.curveTo(185.73, 352.23, 171.95, 353.35, 178.76, 340.15);
            path1_199.curveTo(186.30, 325.52, 197.12, 306.56, 183.45, 287.86);
            path1_199.curveTo(182.90, 287.10, 185.38, 284.13, 186.44, 282.19);
            path1_199.curveTo(187.97, 285.14, 189.47, 288.10, 191.03, 291.03);
            path1_199.curveTo(191.83, 292.52, 192.74, 293.94, 193.60, 295.39);
            path1_199.curveTo(194.08, 294.00, 194.61, 292.62, 195.02, 291.20);
            path1_199.curveTo(196.04, 287.68, 197.02, 284.15, 198.01, 280.62);
            path1_199.curveTo(198.34, 283.73, 198.57, 286.85, 199.05, 289.94);
            path1_199.curveTo(199.36, 291.92, 200.04, 293.85, 200.56, 295.79);
            path1_199.curveTo(202.06, 295.21, 203.55, 294.63, 205.05, 294.05);
            path1_199.curveTo(205.41, 293.38, 205.76, 292.71, 206.12, 292.04);
            path1_199.curveTo(207.09, 290.70, 208.07, 289.36, 209.04, 288.02);
            path1_199.lineTo(209.04, 288.02);
            path1_199.curveTo(215.21, 285.43, 211.44, 282.68, 209.17, 279.96);
            path1_199.curveTo(209.41, 278.03, 209.65, 276.10, 209.89, 274.17);
            path1_199.curveTo(208.30, 270.44, 206.70, 266.72, 205.11, 262.99);
            path1_199.curveTo(204.74, 262.00, 204.36, 261.02, 203.99, 260.03);
            path1_199.curveTo(205.16, 258.45, 206.33, 256.88, 207.50, 255.30);
            path1_199.curveTo(208.34, 257.23, 209.19, 259.15, 210.03, 261.08);
            path1_199.curveTo(212.34, 266.40, 214.65, 271.72, 216.96, 277.04);
            path1_199.curveTo(216.61, 284.83, 216.67, 292.68, 215.70, 300.40);
            path1_199.curveTo(215.37, 303.03, 212.47, 305.35, 210.74, 307.81);
            path1_199.curveTo(210.89, 305.52, 210.96, 303.22, 211.22, 300.94);
            path1_199.curveTo(211.49, 298.55, 211.94, 296.18, 212.31, 293.80);
            path1_199.curveTo(211.79, 294.11, 210.93, 294.31, 210.81, 294.73);
            path1_199.curveTo(209.29, 299.93, 207.89, 305.16, 206.45, 310.38);
            path1_199.curveTo(207.89, 310.65, 209.98, 311.68, 210.68, 311.08);
            path1_199.curveTo(216.88, 305.76, 222.68, 299.97, 228.98, 294.78);
            path1_199.curveTo(230.52, 293.51, 233.47, 293.96, 235.77, 293.62);
            path1_199.curveTo(235.22, 295.59, 235.01, 297.74, 234.05, 299.49);
            path1_199.curveTo(229.29, 308.19, 222.84, 315.08, 213.08, 318.30);
            path1_199.curveTo(212.35, 318.54, 211.93, 319.70, 211.37, 320.43);
            path1_199.curveTo(212.77, 320.94, 214.19, 321.94, 215.58, 321.90);
            path1_199.curveTo(225.06, 321.63, 236.38, 317.38, 237.94, 333.00);
            path1_199.curveTo(237.81, 333.63, 237.67, 334.26, 237.54, 334.89);
            path1_199.curveTo(237.03, 334.94, 236.53, 335.00, 236.02, 335.05);
            path1_199.curveTo(228.28, 333.20, 230.07, 342.39, 225.44, 344.34);
            path1_199.curveTo(224.58, 344.70, 224.64, 347.23, 224.27, 348.77);
            path1_199.curveTo(228.15, 347.53, 232.03, 346.29, 235.92, 345.05);
            path1_199.lineTo(236.27, 345.02);
            path1_199.curveTo(236.27, 345.02, 236.62, 345.04, 236.62, 345.03);
            path1_199.curveTo(237.07, 350.94, 237.52, 356.85, 237.96, 362.76);
            path1_199.curveTo(237.68, 363.51, 237.41, 364.27, 237.13, 365.02);
            path1_199.lineTo(237.14, 365.01);
            path1_199.closePath();
            path1_199.fill(g2);
        }

    }

    private static void drawPart2(Graphics2D g2) {
        {
            BirbPath path2_200 = new BirbPath();
            path2_200.setFillColor(new Color(235, 236, 238));
            path2_200.moveTo(314.54, 245.07);
            path2_200.curveTo(316.86, 247.41, 319.18, 249.75, 321.50, 252.09);
            path2_200.curveTo(322.30, 252.92, 323.11, 253.76, 323.91, 254.60);
            path2_200.curveTo(324.14, 254.85, 324.27, 255.15, 324.30, 255.48);
            path2_200.curveTo(328.17, 262.98, 332.03, 270.49, 335.90, 277.99);
            path2_200.curveTo(327.37, 285.07, 319.74, 294.00, 310.05, 298.70);
            path2_200.curveTo(299.86, 303.64, 291.59, 313.38, 278.94, 312.97);
            path2_200.curveTo(278.30, 312.68, 277.66, 312.38, 277.02, 312.09);
            path2_200.curveTo(277.54, 311.29, 277.89, 310.26, 278.60, 309.72);
            path2_200.curveTo(292.18, 299.58, 301.02, 288.76, 283.47, 274.45);
            path2_200.curveTo(281.73, 273.03, 278.96, 272.89, 276.67, 272.15);
            path2_200.curveTo(276.48, 274.21, 275.92, 276.31, 276.16, 278.32);
            path2_200.curveTo(276.60, 282.00, 278.92, 286.39, 273.35, 287.77);
            path2_200.curveTo(267.71, 289.18, 265.30, 285.17, 263.00, 280.67);
            path2_200.curveTo(260.31, 275.41, 260.63, 267.39, 251.87, 266.99);
            path2_200.curveTo(252.15, 265.44, 252.43, 263.89, 252.71, 262.34);
            path2_200.curveTo(253.40, 260.64, 254.09, 258.94, 254.78, 257.24);
            path2_200.curveTo(255.46, 256.16, 256.14, 255.08, 256.82, 254.00);
            path2_200.curveTo(257.12, 253.29, 257.42, 252.59, 257.72, 251.88);
            path2_200.curveTo(257.98, 251.20, 258.23, 250.52, 258.49, 249.84);
            path2_200.curveTo(266.79, 248.72, 266.31, 244.37, 262.53, 238.82);
            path2_200.curveTo(262.56, 238.20, 262.59, 237.59, 262.62, 236.97);
            path2_200.curveTo(262.83, 236.48, 263.04, 235.99, 263.25, 235.49);
            path2_200.curveTo(263.86, 235.00, 264.46, 234.50, 265.07, 234.01);
            path2_200.curveTo(278.58, 236.15, 293.53, 231.48, 305.11, 243.01);
            path2_200.curveTo(307.05, 244.94, 310.94, 244.91, 313.93, 245.79);
            path2_200.curveTo(314.26, 245.65, 314.47, 245.41, 314.55, 245.06);
            path2_200.lineTo(314.54, 245.07);
            path2_200.closePath();
            path2_200.fill(g2);
        }

        {
            BirbPath path2_201 = new BirbPath();
            path2_201.setFillColor(new Color(238, 239, 241));
            path2_201.moveTo(251.88, 267.00);
            path2_201.curveTo(260.64, 267.40, 260.32, 275.42, 263.01, 280.68);
            path2_201.curveTo(265.31, 285.18, 267.72, 289.18, 273.36, 287.78);
            path2_201.curveTo(278.93, 286.39, 276.61, 282.00, 276.17, 278.33);
            path2_201.curveTo(275.93, 276.32, 276.48, 274.22, 276.68, 272.16);
            path2_201.curveTo(278.97, 272.90, 281.74, 273.04, 283.48, 274.46);
            path2_201.curveTo(301.03, 288.77, 292.19, 299.59, 278.61, 309.73);
            path2_201.curveTo(277.89, 310.27, 277.55, 311.30, 277.03, 312.10);
            path2_201.curveTo(274.03, 313.40, 271.03, 314.70, 268.02, 316.00);
            path2_201.curveTo(262.02, 318.66, 256.03, 321.31, 250.03, 323.97);
            path2_201.curveTo(250.34, 320.68, 250.52, 317.36, 250.99, 314.09);
            path2_201.curveTo(252.88, 301.06, 255.72, 288.04, 251.03, 275.00);
            path2_201.curveTo(251.00, 273.32, 250.96, 271.65, 250.93, 269.97);
            path2_201.lineTo(251.88, 267.00);
            path2_201.lineTo(251.88, 267.00);
            path2_201.closePath();
            path2_201.fill(g2);
        }

        {
            BirbPath path2_202 = new BirbPath();
            path2_202.setFillColor(new Color(206, 198, 196));
            path2_202.moveTo(268.02, 315.99);
            path2_202.curveTo(271.02, 314.69, 274.02, 313.39, 277.03, 312.09);
            path2_202.curveTo(277.67, 312.39, 278.31, 312.68, 278.95, 312.98);
            path2_202.curveTo(278.28, 316.64, 277.62, 320.31, 276.95, 323.97);
            path2_202.curveTo(275.96, 325.94, 274.96, 327.92, 273.96, 329.89);
            path2_202.curveTo(272.66, 331.26, 271.35, 332.62, 270.05, 333.99);
            path2_202.curveTo(269.68, 334.94, 269.31, 335.90, 268.93, 336.85);
            path2_202.curveTo(267.30, 338.56, 265.66, 340.27, 264.03, 341.99);
            path2_202.lineTo(264.01, 342.01);
            path2_202.curveTo(261.31, 344.99, 258.62, 347.96, 255.92, 350.94);
            path2_202.curveTo(255.62, 350.93, 255.31, 350.94, 255.01, 350.99);
            path2_202.curveTo(249.64, 354.98, 244.26, 358.98, 238.89, 362.97);
            path2_202.curveTo(239.36, 360.94, 239.74, 358.89, 240.32, 356.90);
            path2_202.curveTo(241.89, 351.55, 253.12, 349.25, 245.90, 341.31);
            path2_202.curveTo(240.88, 335.79, 240.76, 346.22, 236.62, 345.03);
            path2_202.lineTo(236.27, 345.01);
            path2_202.lineTo(235.92, 345.04);
            path2_202.curveTo(235.99, 343.37, 236.06, 341.70, 236.13, 340.02);
            path2_202.curveTo(236.60, 338.30, 237.07, 336.59, 237.54, 334.87);
            path2_202.curveTo(237.67, 334.24, 237.81, 333.61, 237.94, 332.98);
            path2_202.curveTo(237.94, 330.66, 237.96, 328.33, 237.97, 326.01);
            path2_202.curveTo(249.12, 326.09, 260.53, 326.94, 268.01, 316.00);
            path2_202.lineTo(268.02, 315.99);
            path2_202.closePath();
            path2_202.fill(g2);
        }

        {
            BirbPath path2_203 = new BirbPath();
            path2_203.setFillColor(new Color(235, 236, 238));
            path2_203.moveTo(251.03, 274.99);
            path2_203.curveTo(255.73, 288.03, 252.89, 301.05, 250.99, 314.08);
            path2_203.curveTo(250.52, 317.35, 250.34, 320.66, 250.03, 323.96);
            path2_203.curveTo(245.81, 323.71, 241.58, 323.45, 237.36, 323.20);
            path2_203.curveTo(237.57, 321.80, 237.78, 320.39, 237.99, 318.99);
            path2_203.curveTo(250.75, 316.28, 243.32, 303.60, 248.56, 297.07);
            path2_203.curveTo(248.92, 296.62, 246.24, 293.74, 244.98, 291.99);
            path2_203.curveTo(244.90, 291.07, 244.83, 290.14, 244.75, 289.22);
            path2_203.curveTo(244.90, 288.41, 245.05, 287.59, 245.20, 286.78);
            path2_203.curveTo(245.64, 285.24, 246.08, 283.70, 246.51, 282.16);
            path2_203.curveTo(246.72, 281.37, 246.93, 280.58, 247.13, 279.79);
            path2_203.curveTo(247.80, 278.54, 248.47, 277.28, 249.14, 276.02);
            path2_203.lineTo(251.02, 275.01);
            path2_203.lineTo(251.03, 274.99);
            path2_203.closePath();
            path2_203.fill(g2);
        }

        {
            BirbPath path2_204 = new BirbPath();
            path2_204.setFillColor(new Color(23, 21, 22));
            path2_204.moveTo(216.96, 277.03);
            path2_204.curveTo(214.65, 271.71, 212.34, 266.39, 210.03, 261.07);
            path2_204.curveTo(209.19, 259.14, 208.35, 257.21, 207.50, 255.29);
            path2_204.curveTo(206.33, 256.87, 205.16, 258.44, 203.99, 260.02);
            path2_204.curveTo(202.35, 252.97, 200.59, 245.95, 199.15, 238.86);
            path2_204.curveTo(198.84, 237.33, 198.40, 233.65, 201.93, 236.66);
            path2_204.curveTo(203.17, 237.72, 203.17, 240.15, 204.34, 241.38);
            path2_204.curveTo(213.94, 251.40, 217.04, 263.64, 216.96, 277.04);
            path2_204.lineTo(216.96, 277.03);
            path2_204.closePath();
            path2_204.fill(g2);
        }

        {
            BirbPath path2_205 = new BirbPath();
            path2_205.setFillColor(new Color(232, 233, 235));
            path2_205.moveTo(244.97, 291.98);
            path2_205.curveTo(246.23, 293.73, 248.91, 296.61, 248.55, 297.06);
            path2_205.curveTo(243.31, 303.59, 250.74, 316.27, 237.98, 318.98);
            path2_205.curveTo(239.37, 312.91, 240.76, 306.85, 242.16, 300.78);
            path2_205.curveTo(242.36, 300.25, 242.56, 299.72, 242.76, 299.18);
            path2_205.curveTo(242.92, 298.38, 243.09, 297.58, 243.25, 296.79);
            path2_205.curveTo(243.38, 296.24, 243.51, 295.70, 243.64, 295.15);
            path2_205.curveTo(243.80, 294.35, 243.96, 293.56, 244.11, 292.76);
            path2_205.curveTo(244.40, 292.50, 244.69, 292.24, 244.97, 291.97);
            path2_205.lineTo(244.97, 291.98);
            path2_205.closePath();
            path2_205.fill(g2);
        }

        {
            BirbPath path2_206 = new BirbPath();
            path2_206.setFillColor(new Color(232, 233, 235));
            path2_206.moveTo(237.36, 323.20);
            path2_206.curveTo(241.58, 323.45, 245.81, 323.71, 250.03, 323.96);
            path2_206.curveTo(256.03, 321.30, 262.02, 318.65, 268.02, 315.99);
            path2_206.curveTo(260.54, 326.93, 249.13, 326.08, 237.98, 326.00);
            path2_206.curveTo(237.77, 325.07, 237.56, 324.13, 237.36, 323.20);
            path2_206.lineTo(237.36, 323.20);
            path2_206.closePath();
            path2_206.fill(g2);
        }

        {
            BirbPath path2_207 = new BirbPath();
            path2_207.setFillColor(new Color(232, 233, 235));
            path2_207.moveTo(262.53, 238.83);
            path2_207.curveTo(266.32, 244.38, 266.80, 248.73, 258.49, 249.85);
            path2_207.curveTo(259.84, 246.18, 261.18, 242.50, 262.53, 238.83);
            path2_207.closePath();
            path2_207.fill(g2);
        }

        {
            BirbPath path2_208 = new BirbPath();
            path2_208.setFillColor(new Color(23, 21, 22));
            path2_208.moveTo(177.86, 224.64);
            path2_208.curveTo(179.20, 224.18, 180.55, 223.71, 181.89, 223.25);
            path2_208.curveTo(181.41, 224.66, 180.93, 226.07, 180.45, 227.48);
            path2_208.curveTo(179.59, 226.53, 178.72, 225.59, 177.86, 224.64);
            path2_208.closePath();
            path2_208.fill(g2);
        }

        {
            BirbPath path2_209 = new BirbPath();
            path2_209.setFillColor(new Color(146, 82, 61));
            path2_209.moveTo(249.15, 276.01);
            path2_209.curveTo(248.48, 277.27, 247.81, 278.52, 247.14, 279.78);
            path2_209.curveTo(247.61, 278.22, 248.08, 276.66, 248.55, 275.10);
            path2_209.curveTo(248.75, 275.41, 248.95, 275.71, 249.15, 276.02);
            path2_209.lineTo(249.15, 276.01);
            path2_209.closePath();
            path2_209.fill(g2);
        }

        {
            BirbPath path2_210 = new BirbPath();
            path2_210.setFillColor(new Color(232, 233, 235));
            path2_210.moveTo(249.15, 276.01);
            path2_210.curveTo(248.95, 275.70, 248.75, 275.40, 248.55, 275.09);
            path2_210.curveTo(248.78, 274.33, 249.01, 273.56, 249.25, 272.80);
            path2_210.curveTo(249.43, 272.28, 249.62, 271.75, 249.80, 271.23);
            path2_210.curveTo(250.18, 270.81, 250.56, 270.39, 250.94, 269.97);
            path2_210.curveTo(250.97, 271.65, 251.00, 273.32, 251.04, 275.00);
            path2_210.curveTo(250.41, 275.34, 249.79, 275.68, 249.16, 276.01);
            path2_210.lineTo(249.15, 276.01);
            path2_210.closePath();
            path2_210.fill(g2);
        }

        {
            BirbPath path2_211 = new BirbPath();
            path2_211.setFillColor(new Color(146, 82, 61));
            path2_211.moveTo(254.79, 257.24);
            path2_211.curveTo(254.10, 258.94, 253.41, 260.64, 252.72, 262.34);
            path2_211.curveTo(253.41, 260.64, 254.10, 258.94, 254.79, 257.24);
            path2_211.closePath();
            path2_211.fill(g2);
        }

        {
            BirbPath path2_212 = new BirbPath();
            path2_212.setFillColor(new Color(146, 82, 61));
            path2_212.moveTo(246.51, 282.15);
            path2_212.curveTo(246.07, 283.69, 245.63, 285.23, 245.20, 286.77);
            path2_212.curveTo(245.64, 285.23, 246.08, 283.69, 246.51, 282.15);
            path2_212.closePath();
            path2_212.fill(g2);
        }

        {
            BirbPath path2_213 = new BirbPath();
            path2_213.setFillColor(new Color(146, 82, 61));
            path2_213.moveTo(244.97, 291.98);
            path2_213.curveTo(244.68, 292.24, 244.39, 292.51, 244.11, 292.77);
            path2_213.curveTo(244.32, 291.58, 244.54, 290.39, 244.75, 289.21);
            path2_213.curveTo(244.82, 290.14, 244.90, 291.06, 244.97, 291.99);
            path2_213.lineTo(244.97, 291.98);
            path2_213.closePath();
            path2_213.fill(g2);
        }

        {
            BirbPath path2_214 = new BirbPath();
            path2_214.setFillColor(new Color(232, 233, 235));
            path2_214.moveTo(257.73, 251.89);
            path2_214.curveTo(257.43, 252.60, 257.13, 253.30, 256.83, 254.01);
            path2_214.curveTo(257.13, 253.30, 257.43, 252.60, 257.73, 251.89);
            path2_214.closePath();
            path2_214.fill(g2);
        }

        {
            BirbPath path2_215 = new BirbPath();
            path2_215.setFillColor(new Color(146, 82, 61));
            path2_215.moveTo(242.76, 299.19);
            path2_215.curveTo(242.56, 299.72, 242.36, 300.25, 242.16, 300.79);
            path2_215.curveTo(242.36, 300.26, 242.56, 299.73, 242.76, 299.19);
            path2_215.closePath();
            path2_215.fill(g2);
        }

        {
            BirbPath path2_216 = new BirbPath();
            path2_216.setFillColor(new Color(146, 82, 61));
            path2_216.moveTo(243.64, 295.16);
            path2_216.curveTo(243.51, 295.71, 243.38, 296.26, 243.25, 296.80);
            path2_216.curveTo(243.38, 296.25, 243.51, 295.70, 243.64, 295.16);
            path2_216.closePath();
            path2_216.fill(g2);
        }

        {
            BirbPath path2_217 = new BirbPath();
            path2_217.setFillColor(new Color(146, 82, 61));
            path2_217.moveTo(249.79, 271.23);
            path2_217.curveTo(249.61, 271.75, 249.42, 272.28, 249.24, 272.80);
            path2_217.curveTo(249.42, 272.27, 249.61, 271.75, 249.79, 271.23);
            path2_217.closePath();
            path2_217.fill(g2);
        }

        {
            BirbPath path2_218 = new BirbPath();
            path2_218.setFillColor(new Color(190, 116, 95));
            path2_218.moveTo(254.01, 545.02);
            path2_218.curveTo(254.28, 549.78, 250.35, 554.40, 247.66, 553.16);
            path2_218.curveTo(243.06, 551.03, 239.91, 545.75, 236.15, 541.80);
            path2_218.curveTo(242.07, 542.84, 248.00, 543.88, 253.92, 544.93);
            path2_218.curveTo(253.92, 544.93, 254.01, 545.03, 254.01, 545.03);
            path2_218.lineTo(254.01, 545.02);
            path2_218.closePath();
            path2_218.fill(g2);
        }

        {
            BirbPath path2_219 = new BirbPath();
            path2_219.setFillColor(new Color(23, 21, 22));
            path2_219.moveTo(192.05, 439.97);
            path2_219.curveTo(192.70, 441.64, 193.34, 443.32, 193.99, 444.99);
            path2_219.curveTo(193.34, 443.32, 192.70, 441.64, 192.05, 439.97);
            path2_219.closePath();
            path2_219.fill(g2);
        }

        {
            BirbPath path2_220 = new BirbPath();
            path2_220.setFillColor(new Color(23, 21, 22));
            path2_220.moveTo(188.33, 430.95);
            path2_220.curveTo(188.80, 431.79, 189.26, 432.62, 189.73, 433.46);
            path2_220.curveTo(189.26, 432.62, 188.80, 431.79, 188.33, 430.95);
            path2_220.closePath();
            path2_220.fill(g2);
        }

        {
            BirbPath path2_221 = new BirbPath();
            path2_221.setFillColor(new Color(50, 47, 48));
            path2_221.moveTo(255.79, 553.58);
            path2_221.curveTo(255.16, 554.34, 254.53, 555.10, 253.90, 555.86);
            path2_221.curveTo(254.53, 555.10, 255.16, 554.34, 255.79, 553.58);
            path2_221.closePath();
            path2_221.fill(g2);
        }

        {
            BirbPath path2_222 = new BirbPath();
            path2_222.setFillColor(new Color(206, 198, 196));
            path2_222.moveTo(186.18, 421.96);
            path2_222.curveTo(186.22, 422.61, 186.25, 423.25, 186.29, 423.90);
            path2_222.curveTo(185.88, 423.90, 185.47, 423.90, 185.06, 423.90);
            path2_222.curveTo(184.76, 423.25, 184.46, 422.59, 184.16, 421.94);
            path2_222.curveTo(184.83, 421.94, 185.51, 421.96, 186.19, 421.97);
            path2_222.lineTo(186.18, 421.96);
            path2_222.closePath();
            path2_222.fill(g2);
        }

        {
            BirbPath path2_223 = new BirbPath();
            path2_223.setFillColor(new Color(23, 21, 22));
            path2_223.moveTo(187.34, 423.96);
            path2_223.curveTo(187.48, 425.10, 187.61, 426.24, 187.75, 427.38);
            path2_223.curveTo(187.61, 426.24, 187.48, 425.10, 187.34, 423.96);
            path2_223.closePath();
            path2_223.fill(g2);
        }

        {
            BirbPath path2_224 = new BirbPath();
            path2_224.setFillColor(new Color(23, 21, 22));
            path2_224.moveTo(194.61, 446.08);
            path2_224.curveTo(195.04, 447.11, 195.46, 448.14, 195.89, 449.17);
            path2_224.curveTo(195.46, 448.14, 195.04, 447.11, 194.61, 446.08);
            path2_224.closePath();
            path2_224.fill(g2);
        }

        {
            BirbPath path2_225 = new BirbPath();
            path2_225.setFillColor(new Color(23, 21, 22));
            path2_225.moveTo(196.89, 451.95);
            path2_225.curveTo(197.26, 452.65, 197.63, 453.35, 197.99, 454.05);
            path2_225.curveTo(197.62, 453.35, 197.25, 452.65, 196.89, 451.95);
            path2_225.closePath();
            path2_225.fill(g2);
        }

        {
            BirbPath path2_226 = new BirbPath();
            path2_226.setFillColor(new Color(190, 116, 95));
            path2_226.moveTo(345.97, 227.03);
            path2_226.curveTo(345.12, 228.32, 344.27, 229.61, 343.42, 230.90);
            path2_226.curveTo(343.16, 231.11, 342.97, 231.38, 342.87, 231.70);
            path2_226.lineTo(342.72, 231.91);
            path2_226.curveTo(342.46, 232.25, 342.20, 232.60, 341.94, 232.94);
            path2_226.curveTo(341.79, 233.60, 341.65, 234.27, 341.50, 234.93);
            path2_226.curveTo(337.36, 236.63, 333.21, 238.33, 329.07, 240.03);
            path2_226.curveTo(328.76, 239.90, 328.45, 239.76, 328.14, 239.63);
            path2_226.curveTo(327.73, 239.13, 327.32, 238.62, 326.91, 238.12);
            path2_226.curveTo(326.58, 237.78, 326.25, 237.44, 325.92, 237.10);
            path2_226.curveTo(325.60, 236.76, 325.28, 236.42, 324.96, 236.07);
            path2_226.curveTo(324.96, 236.07, 324.96, 236.07, 324.96, 236.07);
            path2_226.curveTo(324.60, 235.75, 324.25, 235.44, 323.89, 235.12);
            path2_226.curveTo(322.94, 234.71, 321.99, 234.30, 321.03, 233.88);
            path2_226.curveTo(320.64, 233.67, 320.25, 233.45, 319.86, 233.24);
            path2_226.curveTo(319.86, 233.24, 319.80, 233.20, 319.80, 233.20);
            path2_226.curveTo(319.42, 232.94, 319.04, 232.69, 318.66, 232.43);
            path2_226.curveTo(318.19, 229.64, 317.72, 226.86, 317.24, 224.07);
            path2_226.curveTo(332.04, 232.73, 335.71, 216.35, 344.68, 211.88);
            path2_226.curveTo(345.11, 216.93, 345.54, 221.98, 345.97, 227.03);
            path2_226.lineTo(345.97, 227.03);
            path2_226.closePath();
            path2_226.fill(g2);
        }

        {
            BirbPath path2_227 = new BirbPath();
            path2_227.setFillColor(new Color(190, 116, 95));
            path2_227.moveTo(314.54, 245.07);
            path2_227.curveTo(314.46, 245.42, 314.26, 245.66, 313.93, 245.80);
            path2_227.curveTo(302.54, 233.67, 287.92, 230.94, 272.18, 231.52);
            path2_227.curveTo(272.75, 231.18, 273.32, 230.84, 273.90, 230.50);
            path2_227.curveTo(274.65, 230.41, 275.40, 230.32, 276.14, 230.23);
            path2_227.curveTo(279.40, 229.46, 282.66, 228.70, 285.92, 227.93);
            path2_227.curveTo(286.72, 227.41, 287.52, 226.88, 288.32, 226.36);
            path2_227.curveTo(288.32, 226.36, 288.02, 226.09, 288.02, 226.09);
            path2_227.curveTo(288.02, 226.09, 288.34, 226.34, 288.33, 226.34);
            path2_227.curveTo(289.08, 225.68, 289.83, 225.02, 290.59, 224.36);
            path2_227.curveTo(303.59, 225.46, 306.82, 237.86, 314.54, 245.07);
            path2_227.lineTo(314.54, 245.07);
            path2_227.closePath();
            path2_227.fill(g2);
        }

        {
            BirbPath path2_228 = new BirbPath();
            path2_228.setFillColor(new Color(206, 198, 196));
            path2_228.moveTo(263.15, 193.88);
            path2_228.curveTo(267.08, 190.82, 263.33, 180.45, 271.12, 182.63);
            path2_228.curveTo(278.90, 184.81, 278.81, 193.07, 277.24, 200.29);
            path2_228.curveTo(275.47, 199.88, 273.70, 199.48, 271.94, 199.08);
            path2_228.curveTo(271.94, 199.08, 272.06, 199.02, 272.06, 199.02);
            path2_228.curveTo(271.54, 198.70, 271.01, 198.38, 270.49, 198.07);
            path2_228.curveTo(270.49, 198.07, 270.27, 198.00, 270.26, 198.00);
            path2_228.curveTo(269.16, 197.35, 268.05, 196.70, 266.95, 196.04);
            path2_228.curveTo(266.95, 196.04, 267.01, 196.08, 267.01, 196.08);
            path2_228.curveTo(265.72, 195.35, 264.43, 194.61, 263.14, 193.88);
            path2_228.lineTo(263.14, 193.88);
            path2_228.lineTo(263.15, 193.88);
            path2_228.closePath();
            path2_228.fill(g2);
        }

        {
            BirbPath path2_229 = new BirbPath();
            path2_229.setFillColor(new Color(232, 233, 235));
            path2_229.moveTo(272.18, 231.52);
            path2_229.curveTo(287.92, 230.94, 302.53, 233.67, 313.93, 245.80);
            path2_229.curveTo(310.94, 244.92, 307.05, 244.95, 305.11, 243.02);
            path2_229.curveTo(293.53, 231.49, 278.58, 236.16, 265.07, 234.02);
            path2_229.curveTo(264.96, 233.67, 264.85, 233.32, 264.74, 232.98);
            path2_229.curveTo(265.47, 232.39, 266.20, 231.80, 266.92, 231.21);
            path2_229.curveTo(267.53, 231.17, 268.14, 231.13, 268.75, 231.10);
            path2_229.curveTo(269.90, 231.24, 271.04, 231.39, 272.19, 231.53);
            path2_229.lineTo(272.18, 231.52);
            path2_229.closePath();
            path2_229.fill(g2);
        }

        {
            BirbPath path2_230 = new BirbPath();
            path2_230.setFillColor(new Color(190, 116, 95));
            path2_230.moveTo(271.94, 199.08);
            path2_230.curveTo(273.71, 199.48, 275.47, 199.89, 277.24, 200.29);
            path2_230.curveTo(290.31, 206.27, 303.38, 212.23, 316.40, 218.31);
            path2_230.curveTo(316.97, 218.58, 317.00, 220.02, 317.28, 220.92);
            path2_230.curveTo(299.80, 218.55, 286.40, 207.72, 271.94, 199.08);
            path2_230.lineTo(271.94, 199.08);
            path2_230.closePath();
            path2_230.fill(g2);
        }

        {
            BirbPath path2_231 = new BirbPath();
            path2_231.setFillColor(new Color(206, 198, 196));
            path2_231.moveTo(335.90, 277.99);
            path2_231.curveTo(332.03, 270.49, 328.17, 262.98, 324.30, 255.48);
            path2_231.curveTo(336.74, 264.87, 337.78, 280.67, 345.26, 292.84);
            path2_231.curveTo(343.19, 290.54, 341.12, 288.24, 339.05, 285.94);
            path2_231.curveTo(338.00, 283.29, 336.95, 280.64, 335.90, 277.99);
            path2_231.lineTo(335.90, 277.99);
            path2_231.closePath();
            path2_231.fill(g2);
        }

        {
            BirbPath path2_232 = new BirbPath();
            path2_232.setFillColor(new Color(146, 82, 61));
            path2_232.moveTo(329.06, 240.02);
            path2_232.curveTo(333.20, 238.32, 337.35, 236.62, 341.49, 234.92);
            path2_232.curveTo(340.66, 238.08, 343.09, 242.50, 338.00, 244.02);
            path2_232.curveTo(337.07, 243.88, 336.14, 243.74, 335.21, 243.60);
            path2_232.curveTo(334.14, 243.10, 333.06, 242.59, 331.99, 242.08);
            path2_232.curveTo(331.01, 241.39, 330.03, 240.70, 329.05, 240.02);
            path2_232.lineTo(329.06, 240.02);
            path2_232.closePath();
            path2_232.fill(g2);
        }

        {
            BirbPath path2_233 = new BirbPath();
            path2_233.setFillColor(new Color(50, 47, 48));
            path2_233.moveTo(338.00, 244.02);
            path2_233.curveTo(343.10, 242.49, 340.66, 238.08, 341.49, 234.92);
            path2_233.curveTo(341.63, 234.26, 341.78, 233.60, 341.92, 232.93);
            path2_233.curveTo(342.18, 232.59, 342.44, 232.24, 342.70, 231.90);
            path2_233.curveTo(342.70, 231.90, 342.85, 231.69, 342.85, 231.69);
            path2_233.curveTo(342.85, 231.69, 343.28, 231.80, 343.28, 231.80);
            path2_233.lineTo(343.72, 231.78);
            path2_233.curveTo(343.72, 231.78, 344.01, 232.04, 344.01, 232.04);
            path2_233.curveTo(342.98, 236.57, 341.96, 241.10, 340.93, 245.63);
            path2_233.curveTo(339.95, 245.09, 338.97, 244.55, 337.99, 244.02);
            path2_233.lineTo(338.00, 244.02);
            path2_233.closePath();
            path2_233.fill(g2);
        }

        {
            BirbPath path2_234 = new BirbPath();
            path2_234.setFillColor(new Color(206, 198, 196));
            path2_234.moveTo(241.10, 195.16);
            path2_234.curveTo(242.30, 192.76, 243.50, 190.37, 244.70, 187.97);
            path2_234.curveTo(243.50, 190.37, 242.30, 192.76, 241.10, 195.16);
            path2_234.closePath();
            path2_234.fill(g2);
        }

        {
            BirbPath path2_235 = new BirbPath();
            path2_235.setFillColor(new Color(190, 116, 95));
            path2_235.moveTo(323.91, 254.60);
            path2_235.curveTo(323.11, 253.76, 322.30, 252.93, 321.50, 252.09);
            path2_235.curveTo(322.31, 252.93, 323.11, 253.76, 323.91, 254.60);
            path2_235.closePath();
            path2_235.fill(g2);
        }

        {
            BirbPath path2_236 = new BirbPath();
            path2_236.setFillColor(new Color(222, 151, 123));
            path2_236.moveTo(263.14, 193.89);
            path2_236.curveTo(264.43, 194.62, 265.72, 195.36, 267.01, 196.09);
            path2_236.curveTo(265.72, 195.36, 264.43, 194.62, 263.14, 193.89);
            path2_236.closePath();
            path2_236.fill(g2);
        }

        {
            BirbPath path2_237 = new BirbPath();
            path2_237.setFillColor(new Color(222, 151, 123));
            path2_237.moveTo(266.95, 196.04);
            path2_237.curveTo(268.05, 196.69, 269.15, 197.34, 270.26, 198.00);
            path2_237.curveTo(269.16, 197.35, 268.06, 196.70, 266.95, 196.04);
            path2_237.closePath();
            path2_237.fill(g2);
        }

        {
            BirbPath path2_238 = new BirbPath();
            path2_238.setFillColor(new Color(50, 47, 48));
            path2_238.moveTo(332.00, 242.08);
            path2_238.curveTo(333.07, 242.59, 334.15, 243.09, 335.22, 243.60);
            path2_238.curveTo(334.15, 243.09, 333.07, 242.59, 332.00, 242.08);
            path2_238.closePath();
            path2_238.fill(g2);
        }

        {
            BirbPath path2_239 = new BirbPath();
            path2_239.setFillColor(new Color(50, 47, 48));
            path2_239.moveTo(288.32, 226.35);
            path2_239.curveTo(287.52, 226.87, 286.72, 227.40, 285.92, 227.92);
            path2_239.curveTo(286.72, 227.40, 287.52, 226.87, 288.32, 226.35);
            path2_239.closePath();
            path2_239.fill(g2);
        }

        {
            BirbPath path2_240 = new BirbPath();
            path2_240.setFillColor(new Color(50, 47, 48));
            path2_240.moveTo(276.14, 230.23);
            path2_240.curveTo(275.39, 230.32, 274.65, 230.41, 273.90, 230.50);
            path2_240.curveTo(274.65, 230.41, 275.40, 230.32, 276.14, 230.23);
            path2_240.closePath();
            path2_240.fill(g2);
        }

        {
            BirbPath path2_241 = new BirbPath();
            path2_241.setFillColor(new Color(206, 198, 196));
            path2_241.moveTo(237.04, 199.03);
            path2_241.curveTo(237.75, 198.39, 238.46, 197.74, 239.17, 197.10);
            path2_241.curveTo(238.46, 197.74, 237.75, 198.39, 237.04, 199.03);
            path2_241.closePath();
            path2_241.fill(g2);
        }

        {
            BirbPath path2_242 = new BirbPath();
            path2_242.setFillColor(new Color(50, 47, 48));
            path2_242.moveTo(264.74, 232.97);
            path2_242.curveTo(264.85, 233.32, 264.96, 233.67, 265.07, 234.01);
            path2_242.curveTo(264.46, 234.50, 263.86, 235.00, 263.25, 235.49);
            path2_242.curveTo(263.75, 234.65, 264.24, 233.81, 264.74, 232.96);
            path2_242.lineTo(264.74, 232.97);
            path2_242.closePath();
            path2_242.fill(g2);
        }

        {
            BirbPath path2_243 = new BirbPath();
            path2_243.setFillColor(new Color(50, 47, 48));
            path2_243.moveTo(290.59, 224.36);
            path2_243.curveTo(289.84, 225.02, 289.08, 225.68, 288.33, 226.34);
            path2_243.curveTo(289.08, 225.68, 289.84, 225.02, 290.59, 224.36);
            path2_243.closePath();
            path2_243.fill(g2);
        }

        {
            BirbPath path2_244 = new BirbPath();
            path2_244.setFillColor(new Color(190, 116, 95));
            path2_244.moveTo(268.74, 231.09);
            path2_244.curveTo(268.13, 231.13, 267.52, 231.17, 266.91, 231.20);
            path2_244.curveTo(267.52, 231.16, 268.13, 231.12, 268.74, 231.09);
            path2_244.closePath();
            path2_244.fill(g2);
        }

        {
            BirbPath path2_245 = new BirbPath();
            path2_245.setFillColor(new Color(50, 47, 48));
            path2_245.moveTo(190.01, 219.65);
            path2_245.curveTo(190.67, 219.74, 191.33, 219.84, 191.99, 219.93);
            path2_245.curveTo(191.26, 220.08, 190.53, 220.23, 189.80, 220.38);
            path2_245.curveTo(189.87, 220.14, 189.94, 219.89, 190.00, 219.65);
            path2_245.lineTo(190.01, 219.65);
            path2_245.closePath();
            path2_245.fill(g2);
        }

        {
            BirbPath path2_246 = new BirbPath();
            path2_246.setFillColor(new Color(146, 82, 61));
            path2_246.moveTo(326.90, 238.11);
            path2_246.curveTo(327.31, 238.61, 327.72, 239.12, 328.13, 239.62);
            path2_246.curveTo(327.72, 239.12, 327.31, 238.61, 326.90, 238.11);
            path2_246.closePath();
            path2_246.fill(g2);
        }

        {
            BirbPath path2_247 = new BirbPath();
            path2_247.setFillColor(new Color(222, 151, 123));
            path2_247.moveTo(270.48, 198.07);
            path2_247.curveTo(271.00, 198.39, 271.53, 198.71, 272.05, 199.02);
            path2_247.curveTo(271.53, 198.70, 271.00, 198.38, 270.48, 198.07);
            path2_247.closePath();
            path2_247.fill(g2);
        }

        {
            BirbPath path2_248 = new BirbPath();
            path2_248.setFillColor(new Color(146, 82, 61));
            path2_248.moveTo(323.88, 235.11);
            path2_248.curveTo(324.24, 235.43, 324.59, 235.74, 324.95, 236.06);
            path2_248.curveTo(324.59, 235.74, 324.24, 235.43, 323.88, 235.11);
            path2_248.closePath();
            path2_248.fill(g2);
        }

        {
            BirbPath path2_249 = new BirbPath();
            path2_249.setFillColor(new Color(146, 82, 61));
            path2_249.moveTo(324.95, 236.06);
            path2_249.curveTo(325.27, 236.40, 325.59, 236.74, 325.91, 237.09);
            path2_249.curveTo(325.59, 236.75, 325.27, 236.41, 324.95, 236.06);
            path2_249.closePath();
            path2_249.fill(g2);
        }

        {
            BirbPath path2_250 = new BirbPath();
            path2_250.setFillColor(new Color(146, 82, 61));
            path2_250.moveTo(319.85, 233.23);
            path2_250.curveTo(320.24, 233.44, 320.63, 233.66, 321.02, 233.87);
            path2_250.curveTo(320.63, 233.66, 320.24, 233.44, 319.85, 233.23);
            path2_250.closePath();
            path2_250.fill(g2);
        }

        {
            BirbPath path2_251 = new BirbPath();
            path2_251.setFillColor(new Color(146, 82, 61));
            path2_251.moveTo(318.66, 232.43);
            path2_251.curveTo(319.04, 232.69, 319.42, 232.94, 319.80, 233.20);
            path2_251.curveTo(319.42, 232.94, 319.04, 232.69, 318.66, 232.43);
            path2_251.closePath();
            path2_251.fill(g2);
        }

        {
            BirbPath path2_252 = new BirbPath();
            path2_252.setFillColor(new Color(232, 233, 235));
            path2_252.moveTo(186.18, 421.96);
            path2_252.curveTo(185.50, 421.96, 184.83, 421.94, 184.15, 421.93);
            path2_252.curveTo(180.03, 414.90, 175.90, 407.88, 171.78, 400.85);
            path2_252.curveTo(175.46, 390.60, 179.14, 380.35, 182.83, 370.10);
            path2_252.curveTo(183.36, 368.41, 183.89, 366.73, 184.42, 365.04);
            path2_252.curveTo(184.40, 364.16, 184.38, 363.29, 184.36, 362.41);
            path2_252.curveTo(184.54, 362.19, 184.75, 362.01, 185.00, 361.88);
            path2_252.curveTo(185.66, 362.25, 186.33, 362.62, 186.99, 362.98);
            path2_252.curveTo(186.72, 382.64, 186.45, 402.30, 186.18, 421.95);
            path2_252.lineTo(186.18, 421.96);
            path2_252.closePath();
            path2_252.fill(g2);
        }

        {
            BirbPath path2_253 = new BirbPath();
            path2_253.setFillColor(new Color(146, 82, 61));
            path2_253.moveTo(184.36, 362.42);
            path2_253.curveTo(184.38, 363.30, 184.40, 364.17, 184.42, 365.05);
            path2_253.curveTo(183.89, 366.74, 183.36, 368.42, 182.83, 370.11);
            path2_253.curveTo(179.15, 380.36, 175.47, 390.61, 171.78, 400.86);
            path2_253.curveTo(163.92, 393.55, 171.51, 387.17, 172.96, 380.40);
            path2_253.curveTo(173.92, 375.91, 175.84, 371.10, 174.88, 366.99);
            path2_253.curveTo(174.48, 365.27, 167.81, 364.62, 163.91, 364.17);
            path2_253.curveTo(145.95, 362.12, 127.96, 360.30, 109.98, 358.41);
            path2_253.curveTo(109.70, 358.07, 109.41, 357.73, 109.13, 357.39);
            path2_253.curveTo(134.54, 354.04, 159.27, 360.81, 184.35, 362.43);
            path2_253.lineTo(184.36, 362.42);
            path2_253.closePath();
            path2_253.fill(g2);
        }

        {
            BirbPath path2_254 = new BirbPath();
            path2_254.setFillColor(new Color(50, 47, 48));
            path2_254.moveTo(209.89, 274.15);
            path2_254.curveTo(209.65, 276.08, 209.41, 278.01, 209.17, 279.94);
            path2_254.curveTo(209.13, 282.63, 209.09, 285.31, 209.05, 288.00);
            path2_254.curveTo(209.05, 288.00, 209.05, 288.00, 209.05, 288.00);
            path2_254.curveTo(208.08, 289.34, 207.10, 290.68, 206.13, 292.02);
            path2_254.curveTo(205.77, 292.69, 205.42, 293.36, 205.06, 294.03);
            path2_254.curveTo(197.84, 285.26, 205.79, 280.17, 209.89, 274.15);
            path2_254.lineTo(209.89, 274.15);
            path2_254.closePath();
            path2_254.fill(g2);
        }

        {
            BirbPath path2_255 = new BirbPath();
            path2_255.setFillColor(new Color(206, 198, 196));
            path2_255.moveTo(186.99, 362.99);
            path2_255.curveTo(186.33, 362.62, 185.66, 362.25, 185.00, 361.89);
            path2_255.curveTo(185.00, 360.89, 185.02, 359.90, 185.03, 358.90);
            path2_255.curveTo(185.69, 360.26, 186.34, 361.63, 187.00, 362.99);
            path2_255.lineTo(186.99, 362.99);
            path2_255.closePath();
            path2_255.fill(g2);
        }

        {
            BirbPath path2_256 = new BirbPath();
            path2_256.setFillColor(new Color(146, 82, 61));
            path2_256.moveTo(322.85, 171.72);
            path2_256.curveTo(332.38, 171.53, 341.91, 171.32, 351.44, 171.18);
            path2_256.curveTo(352.69, 171.16, 353.94, 171.50, 355.19, 171.68);
            path2_256.curveTo(354.37, 172.53, 353.33, 173.26, 352.77, 174.26);
            path2_256.curveTo(350.93, 177.57, 338.97, 176.19, 347.95, 184.53);
            path2_256.curveTo(347.95, 184.53, 347.68, 184.89, 347.68, 184.89);
            path2_256.curveTo(347.52, 185.30, 347.36, 185.71, 347.20, 186.11);
            path2_256.lineTo(347.01, 186.04);
            path2_256.curveTo(327.43, 194.39, 308.42, 191.52, 289.76, 182.99);
            path2_256.curveTo(288.10, 182.23, 286.88, 180.50, 285.46, 179.22);
            path2_256.curveTo(286.22, 178.50, 287.28, 177.02, 287.70, 177.18);
            path2_256.curveTo(298.27, 181.37, 306.99, 177.80, 314.99, 170.96);
            path2_256.lineTo(322.85, 171.70);
            path2_256.lineTo(322.85, 171.72);
            path2_256.closePath();
            path2_256.fill(g2);
        }

        {
            BirbPath path2_257 = new BirbPath();
            path2_257.setFillColor(new Color(190, 116, 95));
            path2_257.moveTo(315.00, 170.99);
            path2_257.curveTo(307.00, 177.83, 298.28, 181.40, 287.71, 177.21);
            path2_257.curveTo(287.30, 177.05, 286.23, 178.53, 285.47, 179.25);
            path2_257.curveTo(286.89, 180.53, 288.11, 182.26, 289.77, 183.02);
            path2_257.curveTo(308.43, 191.55, 327.44, 194.42, 347.02, 186.07);
            path2_257.curveTo(346.97, 187.06, 346.92, 188.04, 346.87, 189.03);
            path2_257.curveTo(324.94, 201.22, 304.92, 191.72, 284.98, 183.26);
            path2_257.curveTo(280.63, 181.41, 277.23, 177.64, 278.16, 171.79);
            path2_257.curveTo(279.25, 164.89, 285.16, 166.37, 288.77, 166.65);
            path2_257.curveTo(297.57, 167.34, 306.26, 169.46, 315.00, 171.00);
            path2_257.lineTo(315.00, 170.99);
            path2_257.closePath();
            path2_257.fill(g2);
        }

        {
            BirbPath path2_258 = new BirbPath();
            path2_258.setFillColor(new Color(146, 82, 61));
            path2_258.moveTo(239.98, 114.10);
            path2_258.curveTo(235.09, 99.21, 249.22, 99.94, 256.13, 95.38);
            path2_258.curveTo(259.30, 93.29, 261.82, 92.10, 261.87, 88.13);
            path2_258.lineTo(262.04, 87.91);
            path2_258.curveTo(263.89, 86.93, 265.75, 85.94, 267.60, 84.96);
            path2_258.curveTo(268.25, 87.90, 266.95, 93.44, 273.10, 89.12);
            path2_258.curveTo(266.83, 100.57, 256.13, 110.20, 258.37, 125.13);
            path2_258.curveTo(254.04, 122.58, 260.45, 111.52, 249.64, 114.11);
            path2_258.lineTo(246.52, 112.18);
            path2_258.curveTo(246.62, 110.42, 247.17, 108.53, 246.72, 106.91);
            path2_258.curveTo(245.40, 102.11, 243.47, 104.07, 242.56, 107.02);
            path2_258.curveTo(242.06, 108.66, 242.99, 110.73, 243.27, 112.61);
            path2_258.curveTo(242.17, 113.11, 241.07, 113.60, 239.98, 114.10);
            path2_258.lineTo(239.98, 114.10);
            path2_258.closePath();
            path2_258.fill(g2);
        }

        {
            BirbPath path2_259 = new BirbPath();
            path2_259.setFillColor(new Color(206, 198, 196));
            path2_259.moveTo(287.17, 117.57);
            path2_259.curveTo(291.99, 120.43, 297.90, 123.93, 303.82, 127.43);
            path2_259.curveTo(296.82, 130.97, 290.13, 136.17, 282.72, 137.60);
            path2_259.curveTo(275.41, 139.01, 273.49, 130.71, 273.38, 125.47);
            path2_259.curveTo(273.22, 118.27, 280.56, 119.33, 287.17, 117.58);
            path2_259.lineTo(287.17, 117.57);
            path2_259.closePath();
            path2_259.fill(g2);
        }

        {
            BirbPath path2_260 = new BirbPath();
            path2_260.setFillColor(new Color(206, 198, 196));
            path2_260.moveTo(323.67, 132.40);
            path2_260.curveTo(322.11, 123.80, 319.31, 114.88, 328.30, 108.46);
            path2_260.curveTo(329.33, 107.73, 333.11, 108.72, 333.12, 109.01);
            path2_260.curveTo(333.39, 115.86, 335.46, 123.10, 329.69, 128.93);
            path2_260.curveTo(328.97, 129.66, 328.52, 130.66, 327.94, 131.53);
            path2_260.curveTo(326.52, 131.82, 325.09, 132.11, 323.67, 132.40);
            path2_260.closePath();
            path2_260.fill(g2);
        }

        {
            BirbPath path2_261 = new BirbPath();
            path2_261.setFillColor(new Color(146, 82, 61));
            path2_261.moveTo(340.98, 144.03);
            path2_261.curveTo(345.90, 146.55, 350.82, 149.07, 355.73, 151.59);
            path2_261.curveTo(353.15, 152.13, 350.57, 152.68, 347.99, 153.22);
            path2_261.curveTo(338.76, 147.66, 328.89, 149.30, 319.04, 150.62);
            path2_261.curveTo(316.10, 150.99, 313.15, 151.35, 310.21, 151.71);
            path2_261.curveTo(309.32, 150.97, 308.43, 150.23, 307.54, 149.49);
            path2_261.curveTo(309.75, 148.90, 311.95, 148.30, 314.16, 147.71);
            path2_261.curveTo(318.45, 146.41, 322.73, 145.11, 327.02, 143.81);
            path2_261.curveTo(331.58, 149.64, 336.25, 148.89, 340.97, 144.02);
            path2_261.lineTo(340.98, 144.03);
            path2_261.closePath();
            path2_261.fill(g2);
        }

        {
            BirbPath path2_262 = new BirbPath();
            path2_262.setFillColor(new Color(190, 116, 95));
            path2_262.moveTo(319.04, 150.63);
            path2_262.curveTo(328.89, 149.30, 338.76, 147.67, 347.99, 153.23);
            path2_262.curveTo(345.59, 154.76, 343.19, 156.29, 340.80, 157.82);
            path2_262.curveTo(340.13, 152.41, 335.94, 155.43, 333.48, 155.15);
            path2_262.curveTo(331.84, 154.96, 329.96, 156.86, 328.19, 157.82);
            path2_262.curveTo(325.14, 155.43, 322.09, 153.03, 319.05, 150.64);
            path2_262.lineTo(319.04, 150.63);
            path2_262.closePath();
            path2_262.fill(g2);
        }

        {
            BirbPath path2_263 = new BirbPath();
            path2_263.setFillColor(new Color(190, 116, 95));
            path2_263.moveTo(315.82, 106.32);
            path2_263.curveTo(317.83, 106.15, 319.86, 105.81, 321.85, 105.94);
            path2_263.curveTo(322.22, 105.96, 323.00, 108.56, 322.67, 108.83);
            path2_263.curveTo(319.94, 111.01, 316.97, 114.65, 314.13, 114.60);
            path2_263.curveTo(305.06, 114.44, 296.01, 112.90, 286.95, 111.83);
            path2_263.curveTo(286.49, 111.78, 286.12, 111.07, 285.70, 110.66);
            path2_263.curveTo(287.14, 109.80, 288.59, 108.95, 290.03, 108.09);
            path2_263.curveTo(296.13, 109.06, 302.22, 110.04, 308.32, 111.01);
            path2_263.curveTo(309.94, 110.33, 311.57, 109.64, 313.19, 108.96);
            path2_263.curveTo(314.61, 109.76, 316.03, 110.55, 317.45, 111.35);
            path2_263.curveTo(316.90, 109.67, 316.36, 108.00, 315.81, 106.32);
            path2_263.lineTo(315.82, 106.32);
            path2_263.closePath();
            path2_263.fill(g2);
        }

        {
            BirbPath path2_264 = new BirbPath();
            path2_264.setFillColor(new Color(146, 82, 61));
            path2_264.moveTo(298.89, 94.26);
            path2_264.curveTo(298.26, 94.20, 297.63, 94.13, 297.00, 94.07);
            path2_264.curveTo(297.00, 93.41, 297.00, 92.74, 297.01, 92.08);
            path2_264.curveTo(297.33, 92.05, 297.65, 92.02, 297.97, 91.98);
            path2_264.curveTo(302.35, 91.93, 306.74, 91.87, 311.12, 91.82);
            path2_264.curveTo(314.67, 92.32, 318.23, 92.82, 321.78, 93.32);
            path2_264.curveTo(321.38, 101.93, 314.58, 94.42, 311.88, 97.25);
            path2_264.curveTo(311.25, 97.19, 310.62, 97.14, 309.99, 97.08);
            path2_264.curveTo(309.27, 96.85, 308.54, 96.62, 307.82, 96.39);
            path2_264.curveTo(305.62, 96.17, 303.42, 95.96, 301.21, 95.74);
            path2_264.curveTo(300.43, 95.24, 299.66, 94.75, 298.88, 94.25);
            path2_264.lineTo(298.89, 94.26);
            path2_264.closePath();
            path2_264.fill(g2);
        }

        {
            BirbPath path2_265 = new BirbPath();
            path2_265.setFillColor(new Color(146, 82, 61));
            path2_265.moveTo(357.92, 101.27);
            path2_265.curveTo(355.55, 97.88, 348.53, 103.57, 348.16, 96.27);
            path2_265.curveTo(351.39, 96.09, 354.61, 95.91, 357.84, 95.73);
            path2_265.curveTo(363.00, 96.10, 368.56, 95.52, 371.43, 101.39);
            path2_265.curveTo(369.57, 101.36, 367.72, 101.32, 365.86, 101.29);
            path2_265.curveTo(363.21, 101.29, 360.57, 101.29, 357.92, 101.28);
            path2_265.lineTo(357.92, 101.27);
            path2_265.closePath();
            path2_265.fill(g2);
        }

        {
            BirbPath path2_266 = new BirbPath();
            path2_266.setFillColor(new Color(146, 82, 61));
            path2_266.moveTo(345.97, 227.03);
            path2_266.curveTo(345.54, 221.98, 345.11, 216.93, 344.68, 211.88);
            path2_266.curveTo(345.53, 210.24, 346.39, 208.61, 347.24, 206.97);
            path2_266.curveTo(349.48, 208.67, 351.72, 210.37, 353.96, 212.06);
            path2_266.curveTo(353.96, 213.37, 353.96, 214.68, 353.96, 216.00);
            path2_266.curveTo(351.29, 219.68, 348.63, 223.35, 345.96, 227.03);
            path2_266.lineTo(345.97, 227.03);
            path2_266.closePath();
            path2_266.fill(g2);
        }

        {
            BirbPath path2_267 = new BirbPath();
            path2_267.setFillColor(new Color(190, 116, 95));
            path2_267.moveTo(332.96, 131.84);
            path2_267.curveTo(337.59, 131.05, 342.27, 129.48, 346.84, 129.77);
            path2_267.curveTo(349.41, 129.93, 351.80, 133.14, 354.27, 134.97);
            path2_267.curveTo(351.32, 135.87, 348.39, 137.40, 345.40, 137.52);
            path2_267.curveTo(340.93, 137.71, 336.41, 136.91, 331.92, 136.52);
            path2_267.curveTo(334.02, 136.31, 336.12, 136.11, 338.23, 135.90);
            path2_267.curveTo(340.58, 135.57, 342.93, 135.27, 345.25, 134.82);
            path2_267.curveTo(345.43, 134.78, 345.41, 133.67, 345.48, 133.06);
            path2_267.curveTo(343.09, 133.13, 340.70, 133.21, 338.31, 133.28);
            path2_267.curveTo(336.53, 132.79, 334.74, 132.31, 332.96, 131.82);
            path2_267.lineTo(332.96, 131.84);
            path2_267.closePath();
            path2_267.fill(g2);
        }

        {
            BirbPath path2_268 = new BirbPath();
            path2_268.setFillColor(new Color(50, 47, 48));
            path2_268.moveTo(249.63, 114.11);
            path2_268.curveTo(260.44, 111.52, 254.03, 122.58, 258.36, 125.13);
            path2_268.curveTo(258.38, 126.43, 258.39, 127.73, 258.41, 129.03);
            path2_268.curveTo(257.61, 129.26, 256.81, 129.49, 256.01, 129.72);
            path2_268.curveTo(255.45, 128.23, 254.89, 126.74, 254.33, 125.25);
            path2_268.curveTo(252.92, 126.87, 251.50, 128.49, 250.09, 130.11);
            path2_268.lineTo(250.37, 130.19);
            path2_268.curveTo(250.37, 130.19, 250.32, 130.48, 250.32, 130.48);
            path2_268.curveTo(250.22, 126.02, 250.13, 121.56, 250.03, 117.10);
            path2_268.curveTo(249.90, 116.11, 249.76, 115.11, 249.63, 114.12);
            path2_268.lineTo(249.63, 114.11);
            path2_268.closePath();
            path2_268.fill(g2);
        }

        {
            BirbPath path2_269 = new BirbPath();
            path2_269.setFillColor(new Color(50, 47, 48));
            path2_269.moveTo(273.10, 89.12);
            path2_269.curveTo(266.95, 93.44, 268.26, 87.91, 267.60, 84.96);
            path2_269.curveTo(268.39, 84.24, 269.19, 83.52, 269.99, 82.80);
            path2_269.curveTo(272.30, 82.12, 274.62, 81.43, 276.93, 80.75);
            path2_269.curveTo(278.66, 79.20, 280.38, 77.65, 282.11, 76.10);
            path2_269.curveTo(283.03, 76.72, 283.96, 77.35, 284.88, 77.97);
            path2_269.curveTo(284.42, 78.69, 283.96, 79.40, 283.51, 80.12);
            path2_269.curveTo(280.04, 83.12, 276.57, 86.12, 273.09, 89.12);
            path2_269.lineTo(273.10, 89.12);
            path2_269.closePath();
            path2_269.fill(g2);
        }

        {
            BirbPath path2_270 = new BirbPath();
            path2_270.setFillColor(new Color(190, 116, 95));
            path2_270.moveTo(311.88, 97.25);
            path2_270.curveTo(314.58, 94.42, 321.38, 101.94, 321.78, 93.32);
            path2_270.curveTo(323.45, 95.03, 325.28, 96.63, 326.65, 98.56);
            path2_270.curveTo(326.87, 98.88, 324.75, 101.71, 324.23, 101.57);
            path2_270.curveTo(320.04, 100.38, 315.98, 98.75, 311.88, 97.25);
            path2_270.lineTo(311.88, 97.25);
            path2_270.closePath();
            path2_270.fill(g2);
        }

        {
            BirbPath path2_271 = new BirbPath();
            path2_271.setFillColor(new Color(146, 82, 61));
            path2_271.moveTo(308.33, 111.01);
            path2_271.curveTo(302.23, 110.04, 296.14, 109.06, 290.04, 108.09);
            path2_271.curveTo(294.71, 106.99, 299.38, 105.90, 304.05, 104.80);
            path2_271.curveTo(303.51, 106.31, 302.97, 107.81, 302.43, 109.32);
            path2_271.curveTo(304.28, 109.57, 306.14, 109.82, 307.99, 110.07);
            path2_271.curveTo(308.10, 110.38, 308.22, 110.70, 308.33, 111.01);
            path2_271.lineTo(308.33, 111.01);
            path2_271.closePath();
            path2_271.fill(g2);
        }

        {
            BirbPath path2_272 = new BirbPath();
            path2_272.setFillColor(new Color(190, 116, 95));
            path2_272.moveTo(340.98, 144.03);
            path2_272.curveTo(336.25, 148.90, 331.59, 149.65, 327.03, 143.82);
            path2_272.curveTo(331.68, 143.89, 336.33, 143.96, 340.98, 144.03);
            path2_272.closePath();
            path2_272.fill(g2);
        }

        {
            BirbPath path2_273 = new BirbPath();
            path2_273.setFillColor(new Color(146, 82, 61));
            path2_273.moveTo(328.19, 157.81);
            path2_273.curveTo(329.96, 156.85, 331.84, 154.95, 333.48, 155.14);
            path2_273.curveTo(335.95, 155.43, 340.13, 152.40, 340.80, 157.81);
            path2_273.curveTo(336.59, 157.81, 332.39, 157.81, 328.18, 157.81);
            path2_273.lineTo(328.19, 157.81);
            path2_273.closePath();
            path2_273.fill(g2);
        }

        {
            BirbPath path2_274 = new BirbPath();
            path2_274.setFillColor(new Color(190, 116, 95));
            path2_274.moveTo(314.17, 147.72);
            path2_274.curveTo(311.96, 148.31, 309.76, 148.91, 307.55, 149.50);
            path2_274.curveTo(308.44, 150.24, 309.33, 150.98, 310.22, 151.72);
            path2_274.curveTo(308.62, 151.62, 307.02, 151.52, 305.42, 151.41);
            path2_274.curveTo(305.81, 149.64, 306.27, 146.32, 306.59, 146.33);
            path2_274.curveTo(309.13, 146.43, 311.65, 147.17, 314.17, 147.71);
            path2_274.lineTo(314.17, 147.72);
            path2_274.closePath();
            path2_274.fill(g2);
        }

        {
            BirbPath path2_275 = new BirbPath();
            path2_275.setFillColor(new Color(146, 82, 61));
            path2_275.moveTo(315.82, 106.32);
            path2_275.curveTo(316.37, 108.00, 316.91, 109.67, 317.46, 111.35);
            path2_275.curveTo(316.04, 110.55, 314.62, 109.76, 313.20, 108.96);
            path2_275.curveTo(311.67, 108.41, 310.13, 107.86, 308.60, 107.31);
            path2_275.curveTo(308.28, 106.91, 307.96, 106.52, 307.64, 106.12);
            path2_275.curveTo(307.75, 105.72, 307.86, 105.31, 307.97, 104.91);
            path2_275.curveTo(310.59, 105.38, 313.20, 105.85, 315.82, 106.32);
            path2_275.closePath();
            path2_275.fill(g2);
        }

        {
            BirbPath path2_276 = new BirbPath();
            path2_276.setFillColor(new Color(8, 7, 11));
            path2_276.moveTo(352.00, 201.00);
            path2_276.curveTo(352.63, 204.08, 353.26, 207.16, 353.89, 210.24);
            path2_276.curveTo(351.91, 208.18, 349.94, 206.12, 347.96, 204.06);
            path2_276.curveTo(347.80, 202.40, 347.63, 200.74, 347.47, 199.09);
            path2_276.curveTo(348.98, 199.73, 350.49, 200.37, 352.00, 201.01);
            path2_276.lineTo(352.00, 201.00);
            path2_276.closePath();
            path2_276.fill(g2);
        }

        {
            BirbPath path2_277 = new BirbPath();
            path2_277.setFillColor(new Color(23, 21, 22));
            path2_277.moveTo(323.67, 132.40);
            path2_277.curveTo(325.09, 132.11, 326.52, 131.82, 327.94, 131.53);
            path2_277.curveTo(328.89, 131.75, 329.84, 131.97, 330.79, 132.19);
            path2_277.curveTo(330.74, 133.32, 330.68, 134.45, 330.62, 135.58);
            path2_277.curveTo(328.46, 135.71, 326.29, 135.85, 324.13, 135.98);
            path2_277.curveTo(323.90, 134.99, 323.67, 134.01, 323.44, 133.02);
            path2_277.curveTo(323.71, 132.88, 323.79, 132.67, 323.67, 132.39);
            path2_277.lineTo(323.67, 132.40);
            path2_277.closePath();
            path2_277.fill(g2);
        }

        {
            BirbPath path2_278 = new BirbPath();
            path2_278.setFillColor(new Color(50, 47, 48));
            path2_278.moveTo(347.97, 204.06);
            path2_278.curveTo(349.95, 206.12, 351.92, 208.18, 353.90, 210.24);
            path2_278.curveTo(353.92, 210.85, 353.94, 211.46, 353.97, 212.06);
            path2_278.curveTo(351.73, 210.36, 349.49, 208.67, 347.25, 206.97);
            path2_278.curveTo(347.49, 206.00, 347.73, 205.03, 347.97, 204.06);
            path2_278.closePath();
            path2_278.fill(g2);
        }

        {
            BirbPath path2_279 = new BirbPath();
            path2_279.setFillColor(new Color(190, 116, 95));
            path2_279.moveTo(311.12, 91.82);
            path2_279.curveTo(306.74, 91.87, 302.35, 91.93, 297.97, 91.98);
            path2_279.curveTo(302.32, 88.87, 306.70, 89.26, 311.12, 91.82);
            path2_279.closePath();
            path2_279.fill(g2);
        }

        {
            BirbPath path2_280 = new BirbPath();
            path2_280.setFillColor(new Color(23, 21, 22));
            path2_280.moveTo(250.09, 130.10);
            path2_280.curveTo(251.50, 128.48, 252.92, 126.86, 254.33, 125.24);
            path2_280.curveTo(254.89, 126.73, 255.45, 128.22, 256.01, 129.72);
            path2_280.curveTo(255.66, 130.07, 255.30, 130.41, 254.95, 130.76);
            path2_280.curveTo(254.52, 130.80, 254.08, 130.84, 253.65, 130.88);
            path2_280.curveTo(252.46, 130.62, 251.27, 130.37, 250.09, 130.11);
            path2_280.lineTo(250.09, 130.10);
            path2_280.closePath();
            path2_280.fill(g2);
        }

        {
            BirbPath path2_281 = new BirbPath();
            path2_281.setFillColor(new Color(232, 233, 235));
            path2_281.moveTo(346.87, 189.02);
            path2_281.curveTo(346.92, 188.03, 346.97, 187.05, 347.02, 186.06);
            path2_281.curveTo(347.02, 186.06, 347.21, 186.13, 347.21, 186.13);
            path2_281.curveTo(347.37, 185.72, 347.53, 185.31, 347.69, 184.91);
            path2_281.curveTo(347.69, 184.91, 347.96, 184.55, 347.96, 184.55);
            path2_281.curveTo(348.59, 183.90, 349.21, 183.25, 349.84, 182.59);
            path2_281.curveTo(349.60, 186.68, 349.37, 190.76, 349.13, 194.85);
            path2_281.curveTo(348.38, 192.91, 347.63, 190.97, 346.88, 189.03);
            path2_281.lineTo(346.87, 189.02);
            path2_281.closePath();
            path2_281.fill(g2);
        }

        {
            BirbPath path2_282 = new BirbPath();
            path2_282.setFillColor(new Color(146, 82, 61));
            path2_282.moveTo(318.05, 135.24);
            path2_282.curveTo(316.77, 133.83, 315.06, 132.58, 314.44, 130.92);
            path2_282.curveTo(314.20, 130.30, 316.48, 128.72, 317.61, 127.58);
            path2_282.curveTo(317.80, 129.69, 317.99, 131.80, 318.18, 133.92);
            path2_282.curveTo(318.14, 134.36, 318.09, 134.80, 318.05, 135.24);
            path2_282.closePath();
            path2_282.fill(g2);
        }

        {
            BirbPath path2_283 = new BirbPath();
            path2_283.setFillColor(new Color(146, 82, 61));
            path2_283.moveTo(330.62, 135.58);
            path2_283.curveTo(330.68, 134.45, 330.73, 133.32, 330.79, 132.19);
            path2_283.curveTo(331.51, 132.08, 332.23, 131.96, 332.96, 131.85);
            path2_283.curveTo(334.74, 132.33, 336.53, 132.82, 338.31, 133.31);
            path2_283.curveTo(338.28, 134.18, 338.25, 135.05, 338.22, 135.92);
            path2_283.curveTo(336.12, 136.13, 334.02, 136.33, 331.91, 136.54);
            path2_283.curveTo(331.48, 136.22, 331.05, 135.90, 330.62, 135.58);
            path2_283.lineTo(330.62, 135.58);
            path2_283.closePath();
            path2_283.fill(g2);
        }

        {
            BirbPath path2_284 = new BirbPath();
            path2_284.setFillColor(new Color(23, 21, 22));
            path2_284.moveTo(307.64, 106.12);
            path2_284.curveTo(307.96, 106.52, 308.28, 106.91, 308.60, 107.31);
            path2_284.curveTo(308.40, 108.23, 308.19, 109.15, 307.99, 110.07);
            path2_284.curveTo(306.14, 109.82, 304.28, 109.57, 302.43, 109.32);
            path2_284.curveTo(302.97, 107.81, 303.51, 106.31, 304.05, 104.80);
            path2_284.curveTo(304.40, 104.89, 304.75, 104.99, 305.10, 105.08);
            path2_284.curveTo(305.95, 105.43, 306.79, 105.77, 307.64, 106.12);
            path2_284.lineTo(307.64, 106.12);
            path2_284.closePath();
            path2_284.fill(g2);
        }

        {
            BirbPath path2_285 = new BirbPath();
            path2_285.setFillColor(new Color(190, 116, 95));
            path2_285.moveTo(318.05, 135.24);
            path2_285.curveTo(318.09, 134.80, 318.14, 134.36, 318.18, 133.92);
            path2_285.curveTo(319.93, 133.62, 321.69, 133.32, 323.44, 133.02);
            path2_285.curveTo(323.67, 134.01, 323.90, 134.99, 324.13, 135.98);
            path2_285.curveTo(322.10, 135.73, 320.07, 135.49, 318.04, 135.24);
            path2_285.lineTo(318.05, 135.24);
            path2_285.closePath();
            path2_285.fill(g2);
        }

        {
            BirbPath path2_286 = new BirbPath();
            path2_286.setFillColor(new Color(50, 47, 48));
            path2_286.moveTo(352.00, 201.00);
            path2_286.curveTo(350.49, 200.36, 348.98, 199.72, 347.47, 199.08);
            path2_286.curveTo(348.01, 197.98, 348.54, 196.88, 349.08, 195.79);
            path2_286.curveTo(349.08, 195.79, 349.51, 196.01, 349.51, 196.01);
            path2_286.lineTo(349.99, 195.98);
            path2_286.lineTo(354.14, 200.95);
            path2_286.curveTo(353.43, 200.97, 352.71, 200.98, 352.00, 201.00);
            path2_286.lineTo(352.00, 201.00);
            path2_286.closePath();
            path2_286.fill(g2);
        }

        {
            BirbPath path2_287 = new BirbPath();
            path2_287.setFillColor(new Color(190, 116, 95));
            path2_287.moveTo(297.01, 92.08);
            path2_287.curveTo(297.01, 92.74, 297.01, 93.41, 297.00, 94.07);
            path2_287.curveTo(295.86, 93.88, 294.73, 93.70, 293.59, 93.51);
            path2_287.curveTo(294.73, 93.03, 295.87, 92.56, 297.01, 92.08);
            path2_287.lineTo(297.01, 92.08);
            path2_287.closePath();
            path2_287.fill(g2);
        }

        {
            BirbPath path2_288 = new BirbPath();
            path2_288.setFillColor(new Color(146, 82, 61));
            path2_288.moveTo(254.96, 130.76);
            path2_288.curveTo(255.31, 130.41, 255.67, 130.07, 256.02, 129.72);
            path2_288.curveTo(256.82, 129.49, 257.62, 129.26, 258.42, 129.03);
            path2_288.curveTo(258.16, 129.92, 257.90, 130.82, 257.64, 131.71);
            path2_288.curveTo(256.75, 131.39, 255.86, 131.07, 254.96, 130.75);
            path2_288.lineTo(254.96, 130.76);
            path2_288.closePath();
            path2_288.fill(g2);
        }

        {
            BirbPath path2_289 = new BirbPath();
            path2_289.setFillColor(new Color(190, 116, 95));
            path2_289.moveTo(307.83, 96.39);
            path2_289.curveTo(308.55, 96.62, 309.28, 96.85, 310.00, 97.08);
            path2_289.curveTo(309.28, 96.85, 308.55, 96.62, 307.83, 96.39);
            path2_289.closePath();
            path2_289.fill(g2);
        }

        {
            BirbPath path2_290 = new BirbPath();
            path2_290.setFillColor(new Color(190, 116, 95));
            path2_290.moveTo(298.89, 94.26);
            path2_290.curveTo(299.67, 94.76, 300.44, 95.26, 301.22, 95.75);
            path2_290.curveTo(300.44, 95.25, 299.67, 94.75, 298.89, 94.26);
            path2_290.closePath();
            path2_290.fill(g2);
        }

        {
            BirbPath path2_291 = new BirbPath();
            path2_291.setFillColor(new Color(50, 47, 48));
            path2_291.moveTo(307.64, 106.12);
            path2_291.curveTo(306.79, 105.77, 305.94, 105.43, 305.10, 105.08);
            path2_291.curveTo(306.06, 105.02, 307.01, 104.97, 307.97, 104.91);
            path2_291.curveTo(307.86, 105.31, 307.75, 105.72, 307.64, 106.12);
            path2_291.lineTo(307.64, 106.12);
            path2_291.closePath();
            path2_291.fill(g2);
        }

        {
            BirbPath path2_292 = new BirbPath();
            path2_292.setFillColor(new Color(190, 116, 95));
            path2_292.moveTo(364.75, 164.63);
            path2_292.curveTo(364.79, 164.52, 364.82, 164.42, 364.86, 164.31);
            path2_292.curveTo(364.98, 164.35, 365.12, 164.37, 365.19, 164.45);
            path2_292.curveTo(365.23, 164.49, 365.13, 164.65, 365.09, 164.76);
            path2_292.curveTo(364.97, 164.72, 364.86, 164.67, 364.74, 164.63);
            path2_292.lineTo(364.75, 164.63);
            path2_292.closePath();
            path2_292.fill(g2);
        }

        {
            BirbPath path2_293 = new BirbPath();
            path2_293.setFillColor(new Color(206, 198, 196));
            path2_293.moveTo(349.99, 195.97);
            path2_293.lineTo(349.51, 196.00);
            path2_293.curveTo(349.51, 196.00, 349.08, 195.78, 349.08, 195.78);
            path2_293.curveTo(349.05, 195.51, 349.03, 195.25, 349.04, 194.98);
            path2_293.curveTo(349.36, 195.31, 349.67, 195.64, 349.99, 195.97);
            path2_293.lineTo(349.99, 195.97);
            path2_293.closePath();
            path2_293.fill(g2);
        }

        {
            BirbPath path2_294 = new BirbPath();
            path2_294.setFillColor(new Color(50, 47, 48));
            path2_294.moveTo(302.11, 48.97);
            path2_294.curveTo(303.29, 54.53, 297.87, 53.66, 295.50, 55.76);
            path2_294.curveTo(289.10, 48.31, 283.40, 69.21, 276.86, 56.22);
            path2_294.curveTo(277.59, 55.96, 278.32, 55.70, 279.06, 55.44);
            path2_294.curveTo(280.69, 54.79, 282.32, 54.15, 283.94, 53.50);
            path2_294.curveTo(286.61, 52.59, 289.27, 51.68, 291.94, 50.77);
            path2_294.curveTo(292.65, 50.63, 293.36, 50.49, 294.07, 50.35);
            path2_294.curveTo(295.43, 50.22, 296.79, 50.09, 298.15, 49.96);
            path2_294.curveTo(298.74, 49.80, 299.32, 49.65, 299.91, 49.49);
            path2_294.curveTo(300.64, 49.32, 301.37, 49.14, 302.11, 48.97);
            path2_294.lineTo(302.11, 48.97);
            path2_294.closePath();
            path2_294.fill(g2);
        }

        {
            BirbPath path2_295 = new BirbPath();
            path2_295.setFillColor(new Color(146, 82, 61));
            path2_295.moveTo(283.93, 53.51);
            path2_295.curveTo(282.30, 54.16, 280.67, 54.80, 279.05, 55.45);
            path2_295.curveTo(280.68, 54.80, 282.31, 54.16, 283.93, 53.51);
            path2_295.closePath();
            path2_295.fill(g2);
        }

        {
            BirbPath path2_296 = new BirbPath();
            path2_296.setFillColor(new Color(146, 82, 61));
            path2_296.moveTo(299.91, 49.49);
            path2_296.curveTo(299.32, 49.65, 298.73, 49.80, 298.15, 49.96);
            path2_296.curveTo(298.74, 49.80, 299.33, 49.65, 299.91, 49.49);
            path2_296.closePath();
            path2_296.fill(g2);
        }

        {
            BirbPath path2_297 = new BirbPath();
            path2_297.setFillColor(new Color(206, 198, 196));
            path2_297.moveTo(294.07, 50.35);
            path2_297.curveTo(293.36, 50.49, 292.65, 50.63, 291.94, 50.77);
            path2_297.curveTo(292.65, 50.63, 293.36, 50.49, 294.07, 50.35);
            path2_297.closePath();
            path2_297.fill(g2);
        }

        {
            BirbPath path2_298 = new BirbPath();
            path2_298.setFillColor(new Color(23, 21, 22));
            path2_298.moveTo(378.70, 98.00);
            path2_298.curveTo(376.72, 96.09, 374.74, 94.18, 372.76, 92.27);
            path2_298.curveTo(372.15, 91.55, 371.53, 90.82, 370.92, 90.09);
            path2_298.curveTo(370.67, 89.66, 370.41, 89.23, 370.16, 88.81);
            path2_298.curveTo(369.93, 88.46, 369.71, 88.11, 369.48, 87.76);
            path2_298.curveTo(369.01, 87.16, 368.55, 86.57, 368.08, 85.97);
            path2_298.curveTo(368.08, 85.97, 368.10, 85.95, 368.10, 85.95);
            path2_298.curveTo(365.71, 83.11, 363.58, 79.99, 360.88, 77.48);
            path2_298.curveTo(357.23, 74.08, 353.14, 71.14, 349.25, 68.01);
            path2_298.curveTo(350.86, 67.04, 352.38, 65.42, 354.08, 65.19);
            path2_298.curveTo(362.25, 64.13, 369.53, 65.48, 373.36, 74.05);
            path2_298.curveTo(373.40, 74.70, 373.44, 75.36, 373.48, 76.01);
            path2_298.curveTo(369.90, 82.80, 376.27, 85.10, 379.30, 88.90);
            path2_298.curveTo(379.10, 91.93, 378.91, 94.96, 378.71, 97.99);
            path2_298.lineTo(378.70, 98.00);
            path2_298.closePath();
            path2_298.fill(g2);
        }

        {
            BirbPath path2_299 = new BirbPath();
            path2_299.setFillColor(new Color(50, 47, 48));
            path2_299.moveTo(348.18, 54.62);
            path2_299.curveTo(349.47, 55.18, 350.76, 55.75, 352.05, 56.31);
            path2_299.curveTo(349.66, 57.18, 347.29, 58.17, 344.83, 58.79);
            path2_299.curveTo(344.46, 58.88, 343.66, 57.26, 343.05, 56.43);
            path2_299.curveTo(344.76, 55.83, 346.47, 55.23, 348.18, 54.63);
            path2_299.lineTo(348.18, 54.62);
            path2_299.closePath();
            path2_299.fill(g2);
        }

    }

    private static void drawPart3(Graphics2D g2) {
        {
            BirbPath path3_300 = new BirbPath();
            path3_300.setFillColor(new Color(222, 151, 123));
            path3_300.moveTo(254.37, 71.85);
            path3_300.curveTo(254.85, 71.36, 255.34, 70.88, 255.82, 70.40);
            path3_300.curveTo(255.33, 70.89, 254.85, 71.37, 254.37, 71.85);
            path3_300.closePath();
            path3_300.fill(g2);
        }

        {
            BirbPath path3_301 = new BirbPath();
            path3_301.setFillColor(new Color(222, 151, 123));
            path3_301.moveTo(261.87, 88.13);
            path3_301.curveTo(258.19, 89.21, 254.50, 90.29, 250.82, 91.36);
            path3_301.curveTo(250.97, 88.39, 249.94, 84.16, 251.50, 82.71);
            path3_301.curveTo(255.26, 79.23, 260.22, 77.05, 264.70, 74.35);
            path3_301.curveTo(263.81, 78.87, 262.92, 83.39, 262.03, 87.90);
            path3_301.curveTo(262.03, 87.90, 261.86, 88.12, 261.86, 88.12);
            path3_301.lineTo(261.87, 88.13);
            path3_301.closePath();
            path3_301.fill(g2);
        }

        {
            BirbPath path3_302 = new BirbPath();
            path3_302.setFillColor(new Color(222, 151, 123));
            path3_302.moveTo(249.63, 114.11);
            path3_302.curveTo(249.76, 115.10, 249.90, 116.10, 250.03, 117.09);
            path3_302.curveTo(248.62, 122.82, 247.20, 128.55, 245.79, 134.27);
            path3_302.curveTo(238.05, 132.81, 241.49, 124.88, 238.07, 120.92);
            path3_302.curveTo(238.41, 120.26, 238.74, 119.61, 239.08, 118.96);
            path3_302.curveTo(240.27, 119.41, 241.45, 119.86, 242.64, 120.31);
            path3_302.curveTo(243.03, 119.26, 243.42, 118.20, 243.82, 117.15);
            path3_302.curveTo(242.53, 116.80, 241.24, 116.44, 239.95, 116.09);
            path3_302.curveTo(239.95, 115.43, 239.97, 114.76, 239.98, 114.10);
            path3_302.curveTo(241.08, 113.60, 242.17, 113.11, 243.27, 112.61);
            path3_302.curveTo(244.35, 112.47, 245.43, 112.32, 246.52, 112.18);
            path3_302.lineTo(249.64, 114.11);
            path3_302.lineTo(249.63, 114.11);
            path3_302.closePath();
            path3_302.fill(g2);
        }

        {
            BirbPath path3_303 = new BirbPath();
            path3_303.setFillColor(new Color(146, 82, 61));
            path3_303.moveTo(239.95, 116.09);
            path3_303.curveTo(241.24, 116.44, 242.53, 116.80, 243.82, 117.15);
            path3_303.curveTo(243.43, 118.20, 243.04, 119.26, 242.64, 120.31);
            path3_303.curveTo(241.45, 119.86, 240.27, 119.41, 239.08, 118.96);
            path3_303.curveTo(239.06, 118.33, 239.03, 117.71, 239.01, 117.08);
            path3_303.curveTo(239.14, 116.75, 239.28, 116.43, 239.41, 116.11);
            path3_303.curveTo(239.59, 116.17, 239.77, 116.17, 239.95, 116.09);
            path3_303.lineTo(239.95, 116.09);
            path3_303.closePath();
            path3_303.fill(g2);
        }

        {
            BirbPath path3_304 = new BirbPath();
            path3_304.setFillColor(new Color(146, 82, 61));
            path3_304.moveTo(276.93, 80.75);
            path3_304.curveTo(274.62, 81.43, 272.30, 82.12, 269.99, 82.80);
            path3_304.curveTo(272.30, 82.12, 274.62, 81.43, 276.93, 80.75);
            path3_304.closePath();
            path3_304.fill(g2);
        }

        {
            BirbPath path3_305 = new BirbPath();
            path3_305.setFillColor(new Color(146, 82, 61));
            path3_305.moveTo(297.88, 68.94);
            path3_305.curveTo(298.22, 68.50, 298.57, 68.05, 298.91, 67.61);
            path3_305.curveTo(299.09, 67.79, 299.27, 67.98, 299.45, 68.16);
            path3_305.curveTo(299.00, 68.49, 298.55, 68.83, 298.10, 69.16);
            path3_305.curveTo(298.10, 69.16, 297.88, 68.94, 297.88, 68.94);
            path3_305.lineTo(297.88, 68.94);
            path3_305.closePath();
            path3_305.fill(g2);
        }

        {
            BirbPath path3_306 = new BirbPath();
            path3_306.setFillColor(new Color(222, 151, 123));
            path3_306.moveTo(239.41, 116.11);
            path3_306.curveTo(239.28, 116.43, 239.14, 116.76, 239.01, 117.08);
            path3_306.curveTo(239.14, 116.76, 239.28, 116.43, 239.41, 116.11);
            path3_306.closePath();
            path3_306.fill(g2);
        }

        {
            BirbPath path3_307 = new BirbPath();
            path3_307.setFillColor(new Color(222, 151, 123));
            path3_307.moveTo(357.92, 101.27);
            path3_307.curveTo(360.57, 101.27, 363.21, 101.27, 365.86, 101.28);
            path3_307.curveTo(365.55, 103.79, 365.24, 106.30, 364.93, 108.81);
            path3_307.curveTo(363.95, 108.71, 362.98, 108.62, 362.00, 108.52);
            path3_307.curveTo(359.68, 107.98, 357.37, 107.45, 355.05, 106.91);
            path3_307.curveTo(356.01, 105.03, 356.96, 103.15, 357.92, 101.27);
            path3_307.closePath();
            path3_307.fill(g2);
        }

        {
            BirbPath path3_308 = new BirbPath();
            path3_308.setFillColor(new Color(23, 21, 22));
            path3_308.moveTo(357.82, 112.94);
            path3_308.curveTo(356.55, 113.33, 355.28, 113.71, 354.01, 114.10);
            path3_308.curveTo(352.52, 112.39, 347.00, 113.21, 350.44, 108.41);
            path3_308.curveTo(351.61, 108.29, 352.79, 108.17, 353.96, 108.05);
            path3_308.curveTo(355.25, 109.68, 356.53, 111.31, 357.82, 112.94);
            path3_308.closePath();
            path3_308.fill(g2);
        }

        {
            BirbPath path3_309 = new BirbPath();
            path3_309.setFillColor(new Color(146, 82, 61));
            path3_309.moveTo(350.44, 108.41);
            path3_309.curveTo(347.01, 113.21, 352.52, 112.39, 354.01, 114.10);
            path3_309.curveTo(352.28, 114.26, 350.30, 115.00, 348.89, 114.40);
            path3_309.curveTo(347.62, 113.86, 346.98, 111.85, 346.06, 110.49);
            path3_309.curveTo(347.52, 109.79, 348.98, 109.10, 350.44, 108.40);
            path3_309.lineTo(350.44, 108.41);
            path3_309.closePath();
            path3_309.fill(g2);
        }

        {
            BirbPath path3_310 = new BirbPath();
            path3_310.setFillColor(new Color(146, 82, 61));
            path3_310.moveTo(357.82, 112.94);
            path3_310.curveTo(356.53, 111.31, 355.25, 109.68, 353.96, 108.05);
            path3_310.curveTo(354.32, 107.67, 354.69, 107.29, 355.06, 106.90);
            path3_310.curveTo(357.38, 107.44, 359.69, 107.97, 362.01, 108.51);
            path3_310.curveTo(361.91, 109.08, 361.82, 109.64, 361.72, 110.21);
            path3_310.curveTo(361.11, 110.49, 360.49, 110.76, 359.88, 111.04);
            path3_310.curveTo(359.19, 111.67, 358.51, 112.30, 357.82, 112.93);
            path3_310.lineTo(357.82, 112.94);
            path3_310.closePath();
            path3_310.fill(g2);
        }

        {
            BirbPath path3_311 = new BirbPath();
            path3_311.setFillColor(new Color(50, 47, 48));
            path3_311.moveTo(361.71, 110.22);
            path3_311.curveTo(361.81, 109.65, 361.90, 109.09, 362.00, 108.52);
            path3_311.curveTo(362.98, 108.62, 363.95, 108.71, 364.93, 108.81);
            path3_311.curveTo(366.16, 110.15, 367.39, 111.49, 368.62, 112.83);
            path3_311.curveTo(367.35, 113.37, 366.08, 113.90, 364.81, 114.44);
            path3_311.curveTo(364.22, 113.97, 363.63, 113.50, 363.05, 113.04);
            path3_311.curveTo(362.60, 112.10, 362.16, 111.16, 361.71, 110.22);
            path3_311.lineTo(361.71, 110.22);
            path3_311.closePath();
            path3_311.fill(g2);
        }

        {
            BirbPath path3_312 = new BirbPath();
            path3_312.setFillColor(new Color(146, 82, 61));
            path3_312.moveTo(364.81, 114.44);
            path3_312.curveTo(366.08, 113.90, 367.35, 113.37, 368.62, 112.83);
            path3_312.curveTo(368.86, 113.75, 369.11, 114.67, 369.35, 115.59);
            path3_312.curveTo(367.84, 115.21, 366.33, 114.82, 364.81, 114.44);
            path3_312.closePath();
            path3_312.fill(g2);
        }

        {
            BirbPath path3_313 = new BirbPath();
            path3_313.setFillColor(new Color(222, 151, 123));
            path3_313.moveTo(361.71, 110.22);
            path3_313.curveTo(362.16, 111.16, 362.60, 112.10, 363.05, 113.04);
            path3_313.curveTo(361.99, 112.38, 360.93, 111.71, 359.88, 111.05);
            path3_313.curveTo(360.49, 110.77, 361.11, 110.50, 361.72, 110.22);
            path3_313.lineTo(361.71, 110.22);
            path3_313.closePath();
            path3_313.fill(g2);
        }

        {
            BirbPath path3_314 = new BirbPath();
            path3_314.setFillColor(new Color(146, 82, 61));
            path3_314.moveTo(368.07, 85.98);
            path3_314.curveTo(368.54, 86.58, 369.00, 87.17, 369.47, 87.77);
            path3_314.curveTo(369.00, 87.17, 368.54, 86.58, 368.07, 85.98);
            path3_314.closePath();
            path3_314.fill(g2);
        }

        {
            BirbPath path3_315 = new BirbPath();
            path3_315.setFillColor(new Color(146, 82, 61));
            path3_315.moveTo(370.15, 88.81);
            path3_315.curveTo(370.40, 89.24, 370.66, 89.67, 370.91, 90.09);
            path3_315.curveTo(370.66, 89.66, 370.40, 89.23, 370.15, 88.81);
            path3_315.closePath();
            path3_315.fill(g2);
        }

        {
            BirbPath path3_316 = new BirbPath();
            path3_316.setFillColor(new Color(146, 82, 61));
            path3_316.moveTo(379.29, 88.91);
            path3_316.curveTo(376.26, 85.10, 369.89, 82.81, 373.47, 76.02);
            path3_316.curveTo(375.41, 80.32, 377.35, 84.62, 379.29, 88.91);
            path3_316.closePath();
            path3_316.fill(g2);
        }

        {
            BirbPath path3_317 = new BirbPath();
            path3_317.setFillColor(new Color(146, 82, 61));
            path3_317.moveTo(386.05, 106.00);
            path3_317.curveTo(385.62, 107.04, 385.18, 108.08, 384.75, 109.11);
            path3_317.curveTo(382.95, 106.03, 381.16, 102.95, 379.36, 99.87);
            path3_317.curveTo(384.41, 98.83, 384.83, 102.86, 386.05, 106.00);
            path3_317.closePath();
            path3_317.fill(g2);
        }

        {
            BirbPath path3_318 = new BirbPath();
            path3_318.setFillColor(new Color(146, 82, 61));
            path3_318.moveTo(245.79, 134.27);
            path3_318.curveTo(247.20, 128.54, 248.62, 122.81, 250.03, 117.09);
            path3_318.curveTo(250.13, 121.55, 250.22, 126.01, 250.32, 130.47);
            path3_318.curveTo(250.01, 133.17, 250.45, 136.77, 245.79, 134.27);
            path3_318.closePath();
            path3_318.fill(g2);
        }

        {
            BirbPath path3_319 = new BirbPath();
            path3_319.setFillColor(new Color(206, 198, 196));
            path3_319.moveTo(249.10, 150.10);
            path3_319.curveTo(248.76, 149.65, 248.43, 149.20, 248.10, 148.75);
            path3_319.curveTo(249.65, 148.69, 251.20, 148.64, 252.76, 148.58);
            path3_319.curveTo(252.53, 149.07, 252.29, 149.55, 252.06, 150.04);
            path3_319.curveTo(251.08, 150.06, 250.10, 150.08, 249.11, 150.10);
            path3_319.lineTo(249.10, 150.10);
            path3_319.closePath();
            path3_319.fill(g2);
        }

        {
            BirbPath path3_320 = new BirbPath();
            path3_320.setFillColor(new Color(232, 233, 235));
            path3_320.moveTo(335.90, 277.99);
            path3_320.curveTo(336.95, 280.64, 338.00, 283.29, 339.05, 285.94);
            path3_320.curveTo(338.86, 302.16, 335.20, 317.37, 325.99, 330.98);
            path3_320.curveTo(325.99, 330.98, 325.99, 330.98, 325.99, 330.98);
            path3_320.curveTo(304.02, 340.15, 294.51, 364.05, 274.01, 374.96);
            path3_320.curveTo(269.15, 380.14, 261.97, 384.65, 260.23, 390.73);
            path3_320.curveTo(259.00, 395.03, 266.72, 390.44, 270.13, 392.04);
            path3_320.curveTo(260.92, 403.89, 241.70, 397.84, 233.95, 412.28);
            path3_320.curveTo(232.84, 410.89, 231.73, 409.51, 230.62, 408.13);
            path3_320.curveTo(230.50, 406.68, 230.39, 405.23, 230.27, 403.78);
            path3_320.curveTo(230.43, 403.11, 230.58, 402.44, 230.74, 401.77);
            path3_320.curveTo(230.87, 401.24, 231.00, 400.70, 231.14, 400.17);
            path3_320.curveTo(231.94, 397.42, 232.74, 394.67, 233.54, 391.92);
            path3_320.curveTo(233.71, 391.36, 233.87, 390.79, 234.04, 390.22);
            path3_320.curveTo(234.47, 388.73, 234.90, 387.24, 235.32, 385.76);
            path3_320.curveTo(235.57, 383.61, 235.83, 381.46, 236.08, 379.31);
            path3_320.curveTo(236.19, 378.13, 236.31, 376.96, 236.42, 375.79);
            path3_320.curveTo(236.54, 374.63, 236.66, 373.46, 236.79, 372.29);
            path3_320.curveTo(236.91, 369.86, 237.02, 367.43, 237.14, 365.00);
            path3_320.curveTo(237.42, 364.25, 237.69, 363.49, 237.97, 362.74);
            path3_320.curveTo(237.97, 362.74, 238.40, 362.98, 238.40, 362.98);
            path3_320.lineTo(238.89, 362.95);
            path3_320.curveTo(244.26, 358.96, 249.64, 354.96, 255.01, 350.97);
            path3_320.curveTo(253.81, 353.97, 253.45, 358.20, 251.24, 359.72);
            path3_320.curveTo(246.88, 362.70, 247.01, 365.85, 248.39, 369.89);
            path3_320.curveTo(250.40, 368.36, 252.55, 366.97, 254.41, 365.27);
            path3_320.curveTo(258.03, 361.94, 261.49, 358.42, 265.01, 354.98);
            path3_320.curveTo(260.70, 363.28, 256.17, 371.49, 252.20, 379.95);
            path3_320.curveTo(251.10, 382.30, 251.63, 385.42, 251.41, 388.19);
            path3_320.curveTo(253.58, 386.99, 256.34, 386.29, 257.82, 384.52);
            path3_320.curveTo(271.23, 368.48, 284.09, 351.97, 297.81, 336.21);
            path3_320.curveTo(303.85, 329.27, 320.15, 324.97, 300.51, 315.13);
            path3_320.curveTo(291.05, 310.39, 292.53, 321.65, 287.64, 324.01);
            path3_320.curveTo(283.74, 325.89, 281.20, 330.61, 278.06, 334.06);
            path3_320.curveTo(277.53, 330.71, 285.23, 326.47, 276.96, 323.97);
            path3_320.curveTo(277.63, 320.31, 278.29, 316.64, 278.96, 312.98);
            path3_320.curveTo(291.60, 313.39, 299.88, 303.65, 310.07, 298.71);
            path3_320.curveTo(319.76, 294.01, 327.38, 285.07, 335.92, 278.00);
            path3_320.lineTo(335.90, 277.99);
            path3_320.closePath();
            path3_320.fill(g2);
        }

        {
            BirbPath path3_321 = new BirbPath();
            path3_321.setFillColor(new Color(146, 82, 61));
            path3_321.moveTo(269.21, 500.38);
            path3_321.curveTo(259.98, 495.78, 254.35, 486.77, 253.41, 478.14);
            path3_321.curveTo(251.05, 456.42, 236.77, 440.26, 229.95, 420.80);
            path3_321.curveTo(229.68, 419.55, 229.42, 418.31, 229.15, 417.06);
            path3_321.curveTo(229.18, 414.70, 229.21, 412.34, 229.23, 409.97);
            path3_321.curveTo(229.47, 409.91, 229.71, 409.88, 229.96, 409.88);
            path3_321.curveTo(231.20, 421.37, 243.15, 424.37, 248.18, 432.86);
            path3_321.curveTo(230.17, 458.70, 264.89, 438.20, 263.08, 449.81);
            path3_321.curveTo(263.08, 449.81, 263.11, 449.90, 263.11, 449.90);
            path3_321.curveTo(263.44, 450.20, 263.77, 450.50, 264.11, 450.80);
            path3_321.curveTo(264.11, 450.80, 264.17, 450.86, 264.17, 450.86);
            path3_321.curveTo(264.49, 451.18, 264.80, 451.49, 265.12, 451.80);
            path3_321.curveTo(265.12, 451.80, 265.24, 451.83, 265.24, 451.83);
            path3_321.curveTo(266.81, 457.90, 262.07, 459.45, 258.14, 460.59);
            path3_321.curveTo(252.87, 462.12, 253.59, 465.95, 254.18, 469.35);
            path3_321.curveTo(255.04, 474.29, 256.75, 479.07, 258.09, 483.92);
            path3_321.curveTo(260.65, 481.61, 263.24, 479.34, 265.75, 476.98);
            path3_321.curveTo(270.08, 472.92, 274.19, 468.32, 281.05, 471.87);
            path3_321.curveTo(281.05, 471.87, 281.10, 471.90, 281.10, 471.90);
            path3_321.curveTo(283.02, 477.35, 286.89, 480.49, 292.52, 481.54);
            path3_321.curveTo(293.35, 481.96, 294.18, 482.38, 295.01, 482.80);
            path3_321.curveTo(296.00, 483.87, 297.00, 484.94, 297.99, 486.01);
            path3_321.curveTo(298.60, 486.35, 299.21, 486.69, 299.82, 487.03);
            path3_321.curveTo(299.82, 487.03, 299.94, 487.16, 299.94, 487.16);
            path3_321.curveTo(308.69, 494.32, 317.43, 501.48, 326.18, 508.64);
            path3_321.curveTo(323.43, 509.05, 320.52, 509.01, 317.96, 509.95);
            path3_321.curveTo(300.87, 516.18, 289.00, 491.73, 271.29, 502.10);
            path3_321.curveTo(271.11, 501.91, 270.91, 501.75, 270.69, 501.62);
            path3_321.curveTo(270.69, 501.62, 270.64, 501.33, 270.64, 501.33);
            path3_321.lineTo(270.35, 501.30);
            path3_321.curveTo(270.16, 501.08, 269.95, 500.89, 269.72, 500.72);
            path3_321.curveTo(269.72, 500.72, 269.61, 500.38, 269.61, 500.38);
            path3_321.lineTo(269.25, 500.36);
            path3_321.lineTo(269.21, 500.38);
            path3_321.closePath();
            path3_321.fill(g2);
        }

        {
            BirbPath path3_322 = new BirbPath();
            path3_322.setFillColor(new Color(222, 151, 123));
            path3_322.moveTo(297.97, 486.02);
            path3_322.curveTo(296.98, 484.95, 295.98, 483.88, 294.99, 482.81);
            path3_322.curveTo(313.99, 472.15, 331.38, 487.73, 349.84, 486.27);
            path3_322.curveTo(350.42, 486.22, 351.76, 488.01, 351.65, 488.16);
            path3_322.curveTo(349.96, 490.53, 348.09, 492.78, 346.26, 495.05);
            path3_322.curveTo(344.72, 496.96, 343.18, 498.87, 341.64, 500.78);
            path3_322.curveTo(344.76, 501.40, 348.60, 503.52, 350.87, 502.41);
            path3_322.curveTo(363.39, 496.29, 376.88, 499.50, 389.77, 497.43);
            path3_322.curveTo(389.55, 497.87, 389.34, 498.31, 389.11, 498.75);
            path3_322.curveTo(387.71, 499.51, 386.31, 500.27, 384.90, 501.03);
            path3_322.curveTo(381.86, 500.82, 378.82, 500.64, 375.78, 500.40);
            path3_322.curveTo(359.40, 499.12, 344.15, 512.74, 327.11, 503.82);
            path3_322.curveTo(317.65, 498.87, 313.50, 485.29, 299.91, 487.18);
            path3_322.curveTo(299.91, 487.18, 299.79, 487.05, 299.79, 487.05);
            path3_322.curveTo(299.18, 486.71, 298.57, 486.37, 297.96, 486.03);
            path3_322.lineTo(297.97, 486.02);
            path3_322.closePath();
            path3_322.fill(g2);
        }

        {
            BirbPath path3_323 = new BirbPath();
            path3_323.setFillColor(new Color(190, 116, 95));
            path3_323.moveTo(281.02, 471.88);
            path3_323.curveTo(274.17, 468.33, 270.05, 472.93, 265.72, 476.99);
            path3_323.curveTo(263.21, 479.35, 260.62, 481.62, 258.06, 483.93);
            path3_323.curveTo(256.71, 479.08, 255.00, 474.29, 254.15, 469.36);
            path3_323.curveTo(253.56, 465.97, 252.84, 462.13, 258.11, 460.60);
            path3_323.curveTo(262.04, 459.46, 266.78, 457.91, 265.21, 451.84);
            path3_323.curveTo(268.18, 456.10, 271.16, 460.37, 274.13, 464.63);
            path3_323.curveTo(274.42, 465.05, 274.71, 465.47, 275.00, 465.88);
            path3_323.curveTo(275.00, 465.88, 275.07, 465.94, 275.07, 465.94);
            path3_323.curveTo(275.38, 466.25, 275.70, 466.56, 276.01, 466.87);
            path3_323.curveTo(276.01, 466.87, 276.07, 466.93, 276.07, 466.93);
            path3_323.curveTo(276.50, 467.21, 276.93, 467.50, 277.36, 467.78);
            path3_323.curveTo(278.58, 469.14, 279.80, 470.51, 281.02, 471.87);
            path3_323.lineTo(281.02, 471.88);
            path3_323.closePath();
            path3_323.fill(g2);
        }

        {
            BirbPath path3_324 = new BirbPath();
            path3_324.setFillColor(new Color(146, 82, 61));
            path3_324.moveTo(433.32, 440.03);
            path3_324.curveTo(434.86, 444.96, 439.28, 452.25, 437.48, 454.45);
            path3_324.curveTo(425.12, 469.54, 441.03, 479.55, 442.95, 491.86);
            path3_324.curveTo(442.95, 492.18, 442.93, 492.49, 442.88, 492.80);
            path3_324.curveTo(441.94, 492.63, 440.99, 492.47, 440.05, 492.31);
            path3_324.curveTo(432.97, 490.19, 439.33, 479.20, 430.68, 478.11);
            path3_324.curveTo(430.09, 470.35, 429.49, 462.60, 428.90, 454.84);
            path3_324.curveTo(428.75, 454.14, 428.61, 453.44, 428.46, 452.73);
            path3_324.curveTo(429.75, 449.82, 431.05, 446.90, 432.34, 443.99);
            path3_324.curveTo(432.52, 443.33, 432.70, 442.67, 432.89, 442.01);
            path3_324.curveTo(433.04, 441.35, 433.18, 440.69, 433.33, 440.03);
            path3_324.lineTo(433.32, 440.03);
            path3_324.closePath();
            path3_324.fill(g2);
        }

        {
            BirbPath path3_325 = new BirbPath();
            path3_325.setFillColor(new Color(222, 151, 123));
            path3_325.moveTo(248.18, 432.86);
            path3_325.curveTo(243.15, 424.38, 231.21, 421.37, 229.96, 409.88);
            path3_325.curveTo(230.18, 409.30, 230.40, 408.71, 230.62, 408.12);
            path3_325.curveTo(231.73, 409.50, 232.84, 410.89, 233.95, 412.27);
            path3_325.curveTo(234.20, 423.07, 256.84, 416.86, 249.82, 433.17);
            path3_325.curveTo(249.27, 433.06, 248.73, 432.95, 248.18, 432.85);
            path3_325.lineTo(248.18, 432.86);
            path3_325.closePath();
            path3_325.fill(g2);
        }

        {
            BirbPath path3_326 = new BirbPath();
            path3_326.setFillColor(new Color(190, 116, 95));
            path3_326.moveTo(248.18, 432.86);
            path3_326.curveTo(248.73, 432.97, 249.27, 433.07, 249.82, 433.18);
            path3_326.curveTo(249.96, 433.64, 250.09, 434.10, 250.23, 434.57);
            path3_326.curveTo(250.50, 435.01, 250.78, 435.44, 251.05, 435.88);
            path3_326.curveTo(251.05, 435.88, 251.10, 435.93, 251.10, 435.93);
            path3_326.curveTo(251.40, 436.25, 251.70, 436.58, 252.00, 436.90);
            path3_326.curveTo(252.00, 436.90, 252.06, 436.98, 252.06, 436.98);
            path3_326.curveTo(252.36, 437.29, 252.66, 437.61, 252.96, 437.92);
            path3_326.curveTo(252.96, 437.92, 253.04, 438.00, 253.04, 438.00);
            path3_326.curveTo(253.34, 438.31, 253.65, 438.62, 253.95, 438.93);
            path3_326.curveTo(253.95, 438.93, 254.02, 439.02, 254.02, 439.02);
            path3_326.curveTo(254.32, 439.33, 254.61, 439.64, 254.91, 439.95);
            path3_326.curveTo(254.91, 439.95, 255.02, 440.05, 255.02, 440.05);
            path3_326.curveTo(255.33, 440.35, 255.63, 440.64, 255.94, 440.94);
            path3_326.curveTo(255.94, 440.94, 256.02, 441.02, 256.02, 441.02);
            path3_326.curveTo(256.33, 441.33, 256.63, 441.63, 256.94, 441.94);
            path3_326.curveTo(256.94, 441.94, 257.02, 442.02, 257.02, 442.02);
            path3_326.curveTo(257.31, 442.41, 257.60, 442.79, 257.89, 443.18);
            path3_326.curveTo(259.61, 445.39, 261.33, 447.61, 263.05, 449.82);
            path3_326.curveTo(264.86, 438.21, 230.15, 458.71, 248.15, 432.87);
            path3_326.lineTo(248.18, 432.86);
            path3_326.closePath();
            path3_326.fill(g2);
        }

        {
            BirbPath path3_327 = new BirbPath();
            path3_327.setFillColor(new Color(50, 47, 48));
            path3_327.moveTo(430.68, 478.11);
            path3_327.curveTo(439.33, 479.20, 432.97, 490.19, 440.05, 492.31);
            path3_327.curveTo(440.03, 492.59, 440.01, 492.88, 440.00, 493.16);
            path3_327.curveTo(436.10, 492.11, 432.21, 491.06, 428.31, 490.01);
            path3_327.curveTo(428.36, 487.68, 428.41, 485.35, 428.47, 483.03);
            path3_327.curveTo(429.21, 481.39, 429.95, 479.75, 430.68, 478.12);
            path3_327.lineTo(430.68, 478.11);
            path3_327.closePath();
            path3_327.fill(g2);
        }

        {
            BirbPath path3_328 = new BirbPath();
            path3_328.setFillColor(new Color(146, 82, 61));
            path3_328.moveTo(389.12, 498.74);
            path3_328.curveTo(389.34, 498.30, 389.56, 497.86, 389.77, 497.43);
            path3_328.curveTo(399.24, 494.86, 408.72, 492.29, 418.20, 489.72);
            path3_328.curveTo(418.30, 491.10, 418.41, 492.47, 418.52, 493.85);
            path3_328.curveTo(408.72, 495.48, 398.92, 497.11, 389.12, 498.74);
            path3_328.closePath();
            path3_328.fill(g2);
        }

        {
            BirbPath path3_329 = new BirbPath();
            path3_329.setFillColor(new Color(232, 233, 235));
            path3_329.moveTo(418.51, 493.85);
            path3_329.curveTo(418.40, 492.47, 418.30, 491.10, 418.19, 489.72);
            path3_329.curveTo(421.62, 487.49, 425.04, 485.26, 428.46, 483.02);
            path3_329.curveTo(428.41, 485.35, 428.36, 487.68, 428.30, 490.00);
            path3_329.curveTo(427.85, 490.98, 427.40, 491.96, 426.95, 492.93);
            path3_329.curveTo(424.97, 494.33, 422.98, 495.74, 421.00, 497.14);
            path3_329.curveTo(420.17, 496.04, 419.33, 494.94, 418.50, 493.84);
            path3_329.lineTo(418.51, 493.85);
            path3_329.closePath();
            path3_329.fill(g2);
        }

        {
            BirbPath path3_330 = new BirbPath();
            path3_330.setFillColor(new Color(190, 116, 95));
            path3_330.moveTo(292.50, 481.55);
            path3_330.curveTo(286.87, 480.50, 283.00, 477.36, 281.08, 471.91);
            path3_330.curveTo(284.89, 475.12, 288.69, 478.34, 292.50, 481.55);
            path3_330.closePath();
            path3_330.fill(g2);
        }

        {
            BirbPath path3_331 = new BirbPath();
            path3_331.setFillColor(new Color(190, 116, 95));
            path3_331.moveTo(428.46, 452.74);
            path3_331.curveTo(428.61, 453.44, 428.75, 454.14, 428.90, 454.85);
            path3_331.curveTo(427.13, 456.40, 425.36, 457.94, 423.58, 459.49);
            path3_331.curveTo(423.36, 459.09, 422.87, 458.44, 422.96, 458.34);
            path3_331.curveTo(424.75, 456.44, 426.61, 454.60, 428.45, 452.75);
            path3_331.lineTo(428.46, 452.74);
            path3_331.closePath();
            path3_331.fill(g2);
        }

        {
            BirbPath path3_332 = new BirbPath();
            path3_332.setFillColor(new Color(232, 233, 235));
            path3_332.moveTo(271.02, 391.98);
            path3_332.curveTo(273.37, 389.98, 275.72, 387.99, 278.07, 385.99);
            path3_332.curveTo(275.72, 387.99, 273.37, 389.98, 271.02, 391.98);
            path3_332.closePath();
            path3_332.fill(g2);
        }

        {
            BirbPath path3_333 = new BirbPath();
            path3_333.setFillColor(new Color(232, 233, 235));
            path3_333.moveTo(282.03, 383.04);
            path3_333.curveTo(283.73, 381.71, 285.44, 380.38, 287.14, 379.05);
            path3_333.curveTo(285.44, 380.38, 283.73, 381.71, 282.03, 383.04);
            path3_333.closePath();
            path3_333.fill(g2);
        }

        {
            BirbPath path3_334 = new BirbPath();
            path3_334.setFillColor(new Color(190, 116, 95));
            path3_334.moveTo(438.48, 358.85);
            path3_334.curveTo(437.36, 361.17, 436.24, 363.50, 435.12, 365.82);
            path3_334.curveTo(436.24, 363.50, 437.36, 361.17, 438.48, 358.85);
            path3_334.closePath();
            path3_334.fill(g2);
        }

        {
            BirbPath path3_335 = new BirbPath();
            path3_335.setFillColor(new Color(222, 151, 123));
            path3_335.moveTo(423.92, 462.14);
            path3_335.curveTo(423.61, 462.65, 423.39, 463.00, 423.17, 463.35);
            path3_335.curveTo(422.87, 463.09, 422.36, 462.86, 422.31, 462.56);
            path3_335.curveTo(422.26, 462.22, 422.63, 461.82, 422.81, 461.45);
            path3_335.curveTo(423.14, 461.66, 423.47, 461.86, 423.91, 462.14);
            path3_335.lineTo(423.92, 462.14);
            path3_335.closePath();
            path3_335.fill(g2);
        }

        {
            BirbPath path3_336 = new BirbPath();
            path3_336.setFillColor(new Color(190, 116, 95));
            path3_336.moveTo(432.89, 442.01);
            path3_336.curveTo(432.71, 442.67, 432.52, 443.33, 432.34, 443.99);
            path3_336.curveTo(432.52, 443.33, 432.71, 442.67, 432.89, 442.01);
            path3_336.closePath();
            path3_336.fill(g2);
        }

        {
            BirbPath path3_337 = new BirbPath();
            path3_337.setFillColor(new Color(222, 151, 123));
            path3_337.moveTo(256.95, 441.93);
            path3_337.curveTo(256.64, 441.62, 256.34, 441.32, 256.03, 441.01);
            path3_337.curveTo(256.34, 441.32, 256.64, 441.62, 256.95, 441.93);
            path3_337.closePath();
            path3_337.fill(g2);
        }

        {
            BirbPath path3_338 = new BirbPath();
            path3_338.setFillColor(new Color(222, 151, 123));
            path3_338.moveTo(255.95, 440.93);
            path3_338.curveTo(255.64, 440.63, 255.34, 440.34, 255.03, 440.04);
            path3_338.curveTo(255.34, 440.34, 255.64, 440.63, 255.95, 440.93);
            path3_338.closePath();
            path3_338.fill(g2);
        }

        {
            BirbPath path3_339 = new BirbPath();
            path3_339.setFillColor(new Color(222, 151, 123));
            path3_339.moveTo(254.92, 439.94);
            path3_339.curveTo(254.62, 439.63, 254.33, 439.32, 254.03, 439.01);
            path3_339.curveTo(254.33, 439.32, 254.62, 439.63, 254.92, 439.94);
            path3_339.closePath();
            path3_339.fill(g2);
        }

        {
            BirbPath path3_340 = new BirbPath();
            path3_340.setFillColor(new Color(222, 151, 123));
            path3_340.moveTo(253.96, 438.93);
            path3_340.curveTo(253.66, 438.62, 253.35, 438.31, 253.05, 438.00);
            path3_340.curveTo(253.35, 438.31, 253.66, 438.62, 253.96, 438.93);
            path3_340.closePath();
            path3_340.fill(g2);
        }

        {
            BirbPath path3_341 = new BirbPath();
            path3_341.setFillColor(new Color(222, 151, 123));
            path3_341.moveTo(252.00, 436.90);
            path3_341.curveTo(251.70, 436.58, 251.40, 436.25, 251.10, 435.93);
            path3_341.curveTo(251.40, 436.25, 251.70, 436.58, 252.00, 436.90);
            path3_341.closePath();
            path3_341.fill(g2);
        }

        {
            BirbPath path3_342 = new BirbPath();
            path3_342.setFillColor(new Color(222, 151, 123));
            path3_342.moveTo(251.05, 435.88);
            path3_342.curveTo(250.78, 435.45, 250.50, 435.01, 250.23, 434.57);
            path3_342.curveTo(250.50, 435.00, 250.78, 435.44, 251.05, 435.88);
            path3_342.closePath();
            path3_342.fill(g2);
        }

        {
            BirbPath path3_343 = new BirbPath();
            path3_343.setFillColor(new Color(190, 116, 95));
            path3_343.moveTo(264.10, 450.80);
            path3_343.curveTo(263.77, 450.50, 263.44, 450.20, 263.10, 449.90);
            path3_343.curveTo(263.43, 450.20, 263.76, 450.50, 264.10, 450.80);
            path3_343.closePath();
            path3_343.fill(g2);
        }

        {
            BirbPath path3_344 = new BirbPath();
            path3_344.setFillColor(new Color(222, 151, 123));
            path3_344.moveTo(277.36, 467.79);
            path3_344.curveTo(276.93, 467.51, 276.50, 467.22, 276.07, 466.94);
            path3_344.curveTo(276.50, 467.22, 276.93, 467.51, 277.36, 467.79);
            path3_344.closePath();
            path3_344.fill(g2);
        }

        {
            BirbPath path3_345 = new BirbPath();
            path3_345.setFillColor(new Color(222, 151, 123));
            path3_345.moveTo(276.02, 466.87);
            path3_345.curveTo(275.71, 466.56, 275.39, 466.25, 275.08, 465.94);
            path3_345.curveTo(275.39, 466.25, 275.71, 466.56, 276.02, 466.87);
            path3_345.closePath();
            path3_345.fill(g2);
        }

        {
            BirbPath path3_346 = new BirbPath();
            path3_346.setFillColor(new Color(222, 151, 123));
            path3_346.moveTo(257.91, 443.17);
            path3_346.curveTo(257.62, 442.78, 257.33, 442.40, 257.04, 442.01);
            path3_346.curveTo(257.33, 442.40, 257.62, 442.78, 257.91, 443.17);
            path3_346.closePath();
            path3_346.fill(g2);
        }

        {
            BirbPath path3_347 = new BirbPath();
            path3_347.setFillColor(new Color(222, 151, 123));
            path3_347.moveTo(275.01, 465.88);
            path3_347.curveTo(274.72, 465.46, 274.43, 465.05, 274.14, 464.63);
            path3_347.curveTo(274.43, 465.05, 274.72, 465.47, 275.01, 465.88);
            path3_347.closePath();
            path3_347.fill(g2);
        }

        {
            BirbPath path3_348 = new BirbPath();
            path3_348.setFillColor(new Color(190, 116, 95));
            path3_348.moveTo(447.83, 357.03);
            path3_348.curveTo(447.58, 357.07, 447.32, 357.10, 447.07, 357.14);
            path3_348.curveTo(447.30, 356.93, 447.55, 356.90, 447.83, 357.03);
            path3_348.closePath();
            path3_348.fill(g2);
        }

        {
            BirbPath path3_349 = new BirbPath();
            path3_349.setFillColor(new Color(190, 116, 95));
            path3_349.moveTo(265.10, 451.81);
            path3_349.curveTo(264.78, 451.50, 264.47, 451.18, 264.15, 450.87);
            path3_349.curveTo(264.47, 451.18, 264.78, 451.50, 265.10, 451.81);
            path3_349.closePath();
            path3_349.fill(g2);
        }

        {
            BirbPath path3_350 = new BirbPath();
            path3_350.setFillColor(new Color(222, 151, 123));
            path3_350.moveTo(252.97, 437.93);
            path3_350.curveTo(252.67, 437.62, 252.37, 437.30, 252.07, 436.99);
            path3_350.curveTo(252.37, 437.30, 252.67, 437.62, 252.97, 437.93);
            path3_350.closePath();
            path3_350.fill(g2);
        }

        {
            BirbPath path3_351 = new BirbPath();
            path3_351.setFillColor(new Color(238, 239, 241));
            path3_351.moveTo(431.96, 286.00);
            path3_351.curveTo(429.67, 288.16, 432.98, 294.43, 423.60, 291.31);
            path3_351.curveTo(412.03, 287.46, 419.32, 303.36, 413.48, 308.58);
            path3_351.curveTo(410.49, 311.25, 409.66, 312.85, 406.53, 310.04);
            path3_351.curveTo(402.31, 306.25, 398.48, 305.21, 392.77, 308.45);
            path3_351.curveTo(384.24, 313.29, 379.35, 306.39, 375.04, 300.43);
            path3_351.curveTo(371.57, 295.62, 373.34, 293.61, 377.84, 288.79);
            path3_351.curveTo(386.10, 279.95, 391.46, 269.36, 406.04, 275.88);
            path3_351.curveTo(406.04, 275.88, 406.05, 275.97, 406.05, 275.97);
            path3_351.curveTo(407.37, 277.29, 408.70, 278.60, 410.02, 279.92);
            path3_351.lineTo(410.05, 279.94);
            path3_351.curveTo(412.62, 284.89, 417.11, 285.37, 421.94, 285.03);
            path3_351.curveTo(425.28, 285.35, 428.62, 285.68, 431.96, 286.00);
            path3_351.lineTo(431.96, 286.00);
            path3_351.closePath();
            path3_351.fill(g2);
        }

        {
            BirbPath path3_352 = new BirbPath();
            path3_352.setFillColor(new Color(146, 82, 61));
            path3_352.moveTo(412.00, 263.02);
            path3_352.curveTo(418.15, 262.58, 423.99, 263.18, 428.62, 267.91);
            path3_352.curveTo(428.39, 268.56, 428.15, 269.21, 427.92, 269.85);
            path3_352.curveTo(425.63, 269.26, 423.35, 268.67, 421.06, 268.08);
            path3_352.curveTo(421.00, 267.76, 421.04, 267.45, 421.18, 267.15);
            path3_352.curveTo(422.11, 267.09, 423.05, 267.04, 423.98, 266.98);
            path3_352.curveTo(424.11, 267.13, 424.24, 267.28, 424.37, 267.43);
            path3_352.curveTo(424.36, 267.33, 424.37, 267.19, 424.32, 267.15);
            path3_352.curveTo(424.22, 267.08, 424.07, 267.06, 423.94, 267.03);
            path3_352.curveTo(420.73, 266.47, 417.52, 265.87, 414.30, 265.45);
            path3_352.curveTo(414.05, 265.42, 413.64, 266.68, 413.30, 267.34);
            path3_352.lineTo(426.88, 272.15);
            path3_352.curveTo(428.22, 273.84, 429.55, 275.52, 430.89, 277.21);
            path3_352.curveTo(430.79, 277.90, 430.69, 278.60, 430.58, 279.29);
            path3_352.curveTo(429.71, 279.89, 428.85, 280.49, 427.98, 281.09);
            path3_352.curveTo(422.88, 279.06, 417.77, 277.02, 412.67, 274.99);
            path3_352.curveTo(413.09, 274.31, 413.50, 273.63, 413.92, 272.94);
            path3_352.curveTo(415.67, 273.54, 417.42, 274.13, 419.17, 274.73);
            path3_352.curveTo(419.07, 274.88, 418.96, 275.03, 418.85, 275.17);
            path3_352.curveTo(418.64, 275.77, 418.42, 276.37, 418.21, 276.97);
            path3_352.curveTo(421.05, 277.48, 423.89, 278.07, 426.75, 278.38);
            path3_352.curveTo(427.07, 278.42, 427.57, 276.91, 427.98, 276.12);
            path3_352.curveTo(423.29, 274.46, 418.59, 272.81, 413.90, 271.15);
            path3_352.curveTo(412.62, 268.44, 411.33, 265.74, 410.05, 263.03);
            path3_352.curveTo(410.05, 263.03, 409.96, 263.11, 409.96, 263.11);
            path3_352.curveTo(410.64, 263.09, 411.32, 263.06, 412.00, 263.04);
            path3_352.lineTo(412.00, 263.02);
            path3_352.closePath();
            path3_352.fill(g2);
        }

        {
            BirbPath path3_353 = new BirbPath();
            path3_353.setFillColor(new Color(206, 198, 196));
            path3_353.moveTo(412.67, 274.97);
            path3_353.curveTo(417.77, 277.00, 422.88, 279.04, 427.98, 281.07);
            path3_353.curveTo(427.68, 281.59, 427.38, 282.12, 427.07, 282.64);
            path3_353.curveTo(428.99, 281.92, 431.42, 281.69, 432.69, 280.35);
            path3_353.curveTo(434.20, 278.76, 434.70, 276.22, 435.64, 274.09);
            path3_353.curveTo(436.39, 275.05, 437.99, 276.48, 437.75, 276.90);
            path3_353.curveTo(436.02, 280.04, 433.93, 282.99, 431.96, 285.99);
            path3_353.curveTo(428.62, 285.67, 425.28, 285.34, 421.94, 285.02);
            path3_353.curveTo(417.98, 283.32, 414.01, 281.63, 410.05, 279.93);
            path3_353.curveTo(410.05, 279.93, 410.02, 279.91, 410.02, 279.91);
            path3_353.curveTo(409.32, 278.63, 408.61, 277.35, 407.91, 276.07);
            path3_353.curveTo(407.91, 276.07, 408.18, 275.76, 408.18, 275.76);
            path3_353.curveTo(408.87, 275.84, 409.56, 275.92, 410.25, 275.99);
            path3_353.curveTo(411.06, 275.64, 411.86, 275.29, 412.67, 274.95);
            path3_353.lineTo(412.67, 274.97);
            path3_353.closePath();
            path3_353.fill(g2);
        }

        {
            BirbPath path3_354 = new BirbPath();
            path3_354.setFillColor(new Color(232, 233, 235));
            path3_354.moveTo(412.67, 274.97);
            path3_354.curveTo(411.86, 275.32, 411.06, 275.67, 410.25, 276.01);
            path3_354.curveTo(409.37, 275.64, 408.48, 275.27, 407.60, 274.89);
            path3_354.curveTo(406.96, 274.60, 406.32, 274.32, 405.67, 274.03);
            path3_354.curveTo(405.40, 273.55, 405.13, 273.08, 404.86, 272.61);
            path3_354.curveTo(405.49, 271.03, 406.13, 269.44, 406.76, 267.86);
            path3_354.curveTo(406.88, 267.65, 406.89, 267.43, 406.79, 267.21);
            path3_354.curveTo(407.88, 265.81, 408.96, 264.41, 410.05, 263.01);
            path3_354.curveTo(411.33, 265.72, 412.62, 268.42, 413.90, 271.13);
            path3_354.curveTo(413.90, 271.73, 413.91, 272.32, 413.92, 272.92);
            path3_354.curveTo(413.50, 273.60, 413.09, 274.28, 412.67, 274.97);
            path3_354.lineTo(412.67, 274.97);
            path3_354.closePath();
            path3_354.fill(g2);
        }

        {
            BirbPath path3_355 = new BirbPath();
            path3_355.setFillColor(new Color(206, 198, 196));
            path3_355.moveTo(426.88, 272.13);
            path3_355.lineTo(413.30, 267.32);
            path3_355.curveTo(413.64, 266.66, 414.05, 265.40, 414.30, 265.43);
            path3_355.curveTo(417.53, 265.85, 420.73, 266.45, 423.94, 267.01);
            path3_355.lineTo(423.99, 266.97);
            path3_355.curveTo(423.06, 267.03, 422.12, 267.08, 421.18, 267.14);
            path3_355.curveTo(419.58, 266.90, 417.99, 266.65, 416.38, 266.47);
            path3_355.curveTo(416.35, 266.47, 416.23, 267.31, 416.16, 267.75);
            path3_355.curveTo(417.79, 267.85, 419.43, 267.96, 421.06, 268.06);
            path3_355.curveTo(423.35, 268.65, 425.63, 269.24, 427.92, 269.83);
            path3_355.curveTo(427.57, 270.59, 427.22, 271.36, 426.88, 272.12);
            path3_355.lineTo(426.88, 272.13);
            path3_355.closePath();
            path3_355.fill(g2);
        }

        {
            BirbPath path3_356 = new BirbPath();
            path3_356.setFillColor(new Color(232, 233, 235));
            path3_356.moveTo(365.92, 289.08);
            path3_356.curveTo(365.56, 288.08, 365.19, 287.08, 364.82, 286.07);
            path3_356.curveTo(365.18, 287.07, 365.55, 288.07, 365.92, 289.08);
            path3_356.closePath();
            path3_356.fill(g2);
        }

        {
            BirbPath path3_357 = new BirbPath();
            path3_357.setFillColor(new Color(190, 116, 95));
            path3_357.moveTo(430.58, 279.27);
            path3_357.curveTo(430.68, 278.58, 430.78, 277.88, 430.89, 277.19);
            path3_357.curveTo(430.79, 277.89, 430.69, 278.58, 430.58, 279.27);
            path3_357.closePath();
            path3_357.fill(g2);
        }

        {
            BirbPath path3_358 = new BirbPath();
            path3_358.setFillColor(new Color(206, 198, 196));
            path3_358.moveTo(405.67, 274.03);
            path3_358.curveTo(406.31, 274.32, 406.95, 274.60, 407.60, 274.89);
            path3_358.curveTo(407.79, 275.18, 407.98, 275.48, 408.17, 275.77);
            path3_358.curveTo(408.17, 275.77, 407.90, 276.08, 407.90, 276.08);
            path3_358.curveTo(407.28, 276.04, 406.66, 276.00, 406.04, 275.97);
            path3_358.curveTo(406.04, 275.97, 406.03, 275.88, 406.03, 275.88);
            path3_358.curveTo(405.91, 275.27, 405.79, 274.65, 405.67, 274.04);
            path3_358.lineTo(405.67, 274.03);
            path3_358.closePath();
            path3_358.fill(g2);
        }

        {
            BirbPath path3_359 = new BirbPath();
            path3_359.setFillColor(new Color(232, 233, 235));
            path3_359.moveTo(402.02, 268.01);
            path3_359.curveTo(402.35, 267.99, 402.68, 267.95, 403.00, 267.88);
            path3_359.curveTo(403.09, 268.56, 403.18, 269.25, 403.28, 269.93);
            path3_359.curveTo(402.86, 269.29, 402.44, 268.64, 402.02, 268.00);
            path3_359.lineTo(402.02, 268.01);
            path3_359.closePath();
            path3_359.fill(g2);
        }

        {
            BirbPath path3_360 = new BirbPath();
            path3_360.setFillColor(new Color(206, 198, 196));
            path3_360.moveTo(404.10, 270.98);
            path3_360.curveTo(404.33, 271.33, 404.57, 271.68, 404.80, 272.02);
            path3_360.curveTo(404.56, 271.67, 404.33, 271.32, 404.10, 270.98);
            path3_360.closePath();
            path3_360.fill(g2);
        }

        {
            BirbPath path3_361 = new BirbPath();
            path3_361.setFillColor(new Color(8, 7, 11));
            path3_361.moveTo(426.97, 492.94);
            path3_361.curveTo(427.42, 491.96, 427.87, 490.98, 428.32, 490.01);
            path3_361.curveTo(432.22, 491.06, 436.11, 492.11, 440.00, 493.16);
            path3_361.curveTo(440.64, 493.43, 441.28, 493.70, 441.93, 493.97);
            path3_361.curveTo(440.21, 497.15, 438.50, 500.32, 436.78, 503.50);
            path3_361.curveTo(433.51, 503.72, 430.25, 503.94, 426.98, 504.16);
            path3_361.curveTo(425.35, 505.43, 423.72, 506.70, 422.08, 507.97);
            path3_361.curveTo(413.88, 512.68, 403.17, 513.36, 397.97, 522.92);
            path3_361.curveTo(387.08, 521.82, 391.89, 507.60, 382.91, 504.91);
            path3_361.curveTo(383.30, 504.32, 383.70, 503.72, 384.09, 503.13);
            path3_361.curveTo(384.36, 502.43, 384.63, 501.73, 384.90, 501.02);
            path3_361.curveTo(386.30, 500.26, 387.70, 499.50, 389.11, 498.74);
            path3_361.curveTo(398.91, 497.11, 408.71, 495.48, 418.51, 493.85);
            path3_361.curveTo(419.34, 494.95, 420.18, 496.05, 421.01, 497.15);
            path3_361.curveTo(422.15, 498.53, 423.29, 499.92, 424.44, 501.30);
            path3_361.curveTo(425.28, 498.51, 426.12, 495.73, 426.96, 492.94);
            path3_361.lineTo(426.97, 492.94);
            path3_361.closePath();
            path3_361.fill(g2);
        }

        {
            BirbPath path3_362 = new BirbPath();
            path3_362.setFillColor(new Color(190, 116, 95));
            path3_362.moveTo(428.00, 532.03);
            path3_362.curveTo(428.28, 536.27, 424.74, 539.86, 422.40, 538.43);
            path3_362.curveTo(417.71, 535.55, 413.64, 530.91, 410.92, 526.09);
            path3_362.curveTo(410.19, 524.80, 415.83, 517.34, 417.61, 517.68);
            path3_362.curveTo(424.75, 519.03, 427.49, 525.09, 428.00, 532.04);
            path3_362.lineTo(428.00, 532.03);
            path3_362.closePath();
            path3_362.fill(g2);
        }

        {
            BirbPath path3_363 = new BirbPath();
            path3_363.setFillColor(new Color(50, 47, 48));
            path3_363.moveTo(422.09, 507.97);
            path3_363.curveTo(423.72, 506.70, 425.35, 505.43, 426.99, 504.16);
            path3_363.curveTo(425.36, 505.43, 423.73, 506.70, 422.09, 507.97);
            path3_363.closePath();
            path3_363.fill(g2);
        }

        {
            BirbPath path3_364 = new BirbPath();
            path3_364.setFillColor(new Color(50, 47, 48));
            path3_364.moveTo(447.99, 506.97);
            path3_364.curveTo(448.32, 507.23, 448.64, 507.49, 448.96, 507.75);
            path3_364.curveTo(448.63, 507.49, 448.31, 507.23, 447.99, 506.97);
            path3_364.closePath();
            path3_364.fill(g2);
        }

        {
            BirbPath path3_365 = new BirbPath();
            path3_365.setFillColor(new Color(50, 47, 48));
            path3_365.moveTo(445.11, 505.90);
            path3_365.curveTo(445.43, 506.00, 445.70, 506.17, 445.93, 506.41);
            path3_365.curveTo(445.66, 506.24, 445.39, 506.07, 445.11, 505.90);
            path3_365.closePath();
            path3_365.fill(g2);
        }

        {
            BirbPath path3_366 = new BirbPath();
            path3_366.setFillColor(new Color(235, 236, 238));
            path3_366.moveTo(274.01, 374.97);
            path3_366.curveTo(294.51, 364.06, 304.01, 340.16, 325.99, 330.99);
            path3_366.curveTo(313.25, 351.07, 295.27, 364.96, 274.01, 374.97);
            path3_366.closePath();
            path3_366.fill(g2);
        }

        {
            BirbPath path3_367 = new BirbPath();
            path3_367.setFillColor(new Color(206, 198, 196));
            path3_367.moveTo(360.06, 206.71);
            path3_367.curveTo(359.35, 205.83, 358.64, 204.94, 357.93, 204.06);
            path3_367.curveTo(358.64, 204.94, 359.35, 205.83, 360.06, 206.71);
            path3_367.closePath();
            path3_367.fill(g2);
        }

        {
            BirbPath path3_368 = new BirbPath();
            path3_368.setFillColor(new Color(50, 47, 48));
            path3_368.moveTo(375.62, 226.37);
            path3_368.curveTo(373.37, 226.72, 371.13, 227.07, 368.88, 227.42);
            path3_368.curveTo(371.13, 227.07, 373.37, 226.72, 375.62, 226.37);
            path3_368.closePath();
            path3_368.fill(g2);
        }

        {
            BirbPath path3_369 = new BirbPath();
            path3_369.setFillColor(new Color(50, 47, 48));
            path3_369.moveTo(382.05, 223.82);
            path3_369.curveTo(382.03, 224.56, 382.01, 225.31, 381.98, 226.05);
            path3_369.curveTo(382.00, 225.31, 382.02, 224.56, 382.05, 223.82);
            path3_369.closePath();
            path3_369.fill(g2);
        }

        {
            BirbPath path3_370 = new BirbPath();
            path3_370.setFillColor(new Color(222, 151, 123));
            path3_370.moveTo(463.44, 498.93);
            path3_370.curveTo(462.36, 499.86, 461.28, 500.79, 460.20, 501.72);
            path3_370.curveTo(460.49, 500.68, 460.78, 499.65, 461.08, 498.61);
            path3_370.curveTo(461.87, 498.72, 462.66, 498.82, 463.45, 498.93);
            path3_370.lineTo(463.44, 498.93);
            path3_370.closePath();
            path3_370.fill(g2);
        }

        {
            BirbPath path3_371 = new BirbPath();
            path3_371.setFillColor(new Color(50, 47, 48));
            path3_371.moveTo(467.92, 494.97);
            path3_371.curveTo(468.02, 495.25, 468.09, 495.54, 468.12, 495.84);
            path3_371.curveTo(467.64, 495.78, 467.16, 495.73, 466.68, 495.67);
            path3_371.curveTo(467.09, 495.44, 467.51, 495.20, 467.92, 494.97);
            path3_371.closePath();
            path3_371.fill(g2);
        }

        {
            BirbPath path3_372 = new BirbPath();
            path3_372.setFillColor(new Color(23, 21, 22));
            path3_372.moveTo(441.93, 493.97);
            path3_372.curveTo(441.29, 493.70, 440.64, 493.43, 440.00, 493.16);
            path3_372.curveTo(440.02, 492.88, 440.04, 492.59, 440.06, 492.31);
            path3_372.curveTo(441.00, 492.48, 441.95, 492.64, 442.89, 492.80);
            path3_372.curveTo(442.57, 493.19, 442.25, 493.58, 441.93, 493.97);
            path3_372.closePath();
            path3_372.fill(g2);
        }

        {
            BirbPath path3_373 = new BirbPath();
            path3_373.setFillColor(new Color(146, 82, 61));
            path3_373.moveTo(343.73, 231.78);
            path3_373.lineTo(343.29, 231.80);
            path3_373.curveTo(343.29, 231.80, 342.86, 231.69, 342.86, 231.69);
            path3_373.curveTo(342.97, 231.37, 343.15, 231.10, 343.41, 230.89);
            path3_373.curveTo(343.61, 231.15, 343.72, 231.45, 343.73, 231.78);
            path3_373.lineTo(343.73, 231.78);
            path3_373.closePath();
            path3_373.fill(g2);
        }

        {
            BirbPath path3_374 = new BirbPath();
            path3_374.setFillColor(new Color(232, 233, 235));
            path3_374.moveTo(412.00, 263.02);
            path3_374.curveTo(411.32, 263.04, 410.64, 263.07, 409.96, 263.09);
            path3_374.curveTo(410.63, 262.75, 411.31, 262.41, 411.98, 262.07);
            path3_374.curveTo(411.94, 262.39, 411.94, 262.70, 411.99, 263.02);
            path3_374.lineTo(412.00, 263.02);
            path3_374.closePath();
            path3_374.fill(g2);
        }

        {
            BirbPath path3_375 = new BirbPath();
            path3_375.setFillColor(new Color(206, 198, 196));
            path3_375.moveTo(406.80, 267.21);
            path3_375.curveTo(406.90, 267.43, 406.90, 267.65, 406.77, 267.86);
            path3_375.curveTo(406.68, 267.69, 406.59, 267.53, 406.53, 267.36);
            path3_375.curveTo(406.53, 267.35, 406.70, 267.26, 406.80, 267.21);
            path3_375.closePath();
            path3_375.fill(g2);
        }

        {
            BirbPath path3_376 = new BirbPath();
            path3_376.setFillColor(new Color(190, 116, 95));
            path3_376.moveTo(384.91, 501.02);
            path3_376.curveTo(384.64, 501.72, 384.37, 502.42, 384.10, 503.13);
            path3_376.curveTo(368.07, 506.15, 352.03, 509.17, 336.00, 512.19);
            path3_376.curveTo(334.71, 512.09, 333.42, 511.99, 332.14, 511.89);
            path3_376.curveTo(330.51, 511.45, 328.88, 511.01, 327.25, 510.57);
            path3_376.curveTo(326.89, 509.93, 326.52, 509.29, 326.16, 508.65);
            path3_376.curveTo(317.41, 501.49, 308.67, 494.33, 299.92, 487.17);
            path3_376.curveTo(313.51, 485.28, 317.66, 498.86, 327.12, 503.81);
            path3_376.curveTo(344.16, 512.73, 359.41, 499.11, 375.79, 500.39);
            path3_376.curveTo(378.83, 500.63, 381.87, 500.81, 384.91, 501.02);
            path3_376.lineTo(384.91, 501.02);
            path3_376.closePath();
            path3_376.fill(g2);
        }

        {
            BirbPath path3_377 = new BirbPath();
            path3_377.setFillColor(new Color(50, 47, 48));
            path3_377.moveTo(326.16, 508.65);
            path3_377.curveTo(326.52, 509.29, 326.89, 509.93, 327.25, 510.57);
            path3_377.curveTo(307.60, 514.29, 288.68, 513.16, 271.27, 502.10);
            path3_377.curveTo(288.98, 491.73, 300.85, 516.18, 317.94, 509.95);
            path3_377.curveTo(320.50, 509.02, 323.41, 509.05, 326.16, 508.64);
            path3_377.lineTo(326.16, 508.65);
            path3_377.closePath();
            path3_377.fill(g2);
        }

        {
            BirbPath path3_378 = new BirbPath();
            path3_378.setFillColor(new Color(190, 116, 95));
            path3_378.moveTo(236.08, 379.32);
            path3_378.curveTo(235.83, 381.47, 235.57, 383.62, 235.32, 385.77);
            path3_378.curveTo(235.57, 383.62, 235.83, 381.47, 236.08, 379.32);
            path3_378.closePath();
            path3_378.fill(g2);
        }

        {
            BirbPath path3_379 = new BirbPath();
            path3_379.setFillColor(new Color(190, 116, 95));
            path3_379.moveTo(230.62, 408.13);
            path3_379.curveTo(230.40, 408.72, 230.18, 409.30, 229.96, 409.89);
            path3_379.curveTo(229.71, 409.89, 229.47, 409.92, 229.23, 409.98);
            path3_379.curveTo(229.58, 407.92, 229.92, 405.85, 230.26, 403.79);
            path3_379.curveTo(230.38, 405.24, 230.49, 406.69, 230.61, 408.14);
            path3_379.lineTo(230.62, 408.13);
            path3_379.closePath();
            path3_379.fill(g2);
        }

        {
            BirbPath path3_380 = new BirbPath();
            path3_380.setFillColor(new Color(190, 116, 95));
            path3_380.moveTo(236.79, 372.30);
            path3_380.curveTo(236.67, 373.47, 236.55, 374.63, 236.42, 375.80);
            path3_380.curveTo(236.54, 374.63, 236.66, 373.47, 236.79, 372.30);
            path3_380.closePath();
            path3_380.fill(g2);
        }

        {
            BirbPath path3_381 = new BirbPath();
            path3_381.setFillColor(new Color(50, 47, 48));
            path3_381.moveTo(229.15, 417.06);
            path3_381.curveTo(229.42, 418.31, 229.68, 419.55, 229.95, 420.80);
            path3_381.curveTo(229.68, 419.55, 229.42, 418.31, 229.15, 417.06);
            path3_381.closePath();
            path3_381.fill(g2);
        }

        {
            BirbPath path3_382 = new BirbPath();
            path3_382.setFillColor(new Color(190, 116, 95));
            path3_382.moveTo(234.04, 390.23);
            path3_382.curveTo(233.87, 390.80, 233.70, 391.36, 233.54, 391.93);
            path3_382.curveTo(233.71, 391.36, 233.88, 390.80, 234.04, 390.23);
            path3_382.closePath();
            path3_382.fill(g2);
        }

        {
            BirbPath path3_383 = new BirbPath();
            path3_383.setFillColor(new Color(190, 116, 95));
            path3_383.moveTo(231.13, 400.18);
            path3_383.curveTo(231.00, 400.71, 230.86, 401.25, 230.73, 401.78);
            path3_383.curveTo(230.86, 401.25, 230.99, 400.71, 231.13, 400.18);
            path3_383.closePath();
            path3_383.fill(g2);
        }

        {
            BirbPath path3_384 = new BirbPath();
            path3_384.setFillColor(new Color(50, 47, 48));
            path3_384.moveTo(269.21, 500.38);
            path3_384.lineTo(269.57, 500.40);
            path3_384.curveTo(269.57, 500.40, 269.68, 500.74, 269.68, 500.74);
            path3_384.curveTo(269.44, 500.74, 269.28, 500.62, 269.21, 500.39);
            path3_384.lineTo(269.21, 500.38);
            path3_384.closePath();
            path3_384.fill(g2);
        }

        {
            BirbPath path3_385 = new BirbPath();
            path3_385.setFillColor(new Color(50, 47, 48));
            path3_385.moveTo(270.31, 501.31);
            path3_385.lineTo(270.60, 501.34);
            path3_385.curveTo(270.60, 501.34, 270.66, 501.63, 270.65, 501.63);
            path3_385.curveTo(270.41, 501.65, 270.30, 501.54, 270.30, 501.31);
            path3_385.lineTo(270.31, 501.31);
            path3_385.closePath();
            path3_385.fill(g2);
        }

        {
            BirbPath path3_386 = new BirbPath();
            path3_386.setFillColor(new Color(50, 47, 48));
            path3_386.moveTo(390.21, 524.59);
            path3_386.curveTo(390.85, 525.43, 391.51, 525.98, 391.42, 526.25);
            path3_386.curveTo(391.24, 526.74, 390.65, 527.13, 390.14, 527.39);
            path3_386.curveTo(390.01, 527.46, 389.27, 526.83, 389.29, 526.57);
            path3_386.curveTo(389.34, 526.05, 389.73, 525.57, 390.21, 524.59);
            path3_386.lineTo(390.21, 524.59);
            path3_386.closePath();
            path3_386.fill(g2);
        }

        {
            BirbPath path3_387 = new BirbPath();
            path3_387.setFillColor(new Color(222, 151, 123));
            path3_387.moveTo(277.36, 552.92);
            path3_387.curveTo(276.17, 553.80, 274.97, 554.67, 273.77, 555.54);
            path3_387.curveTo(273.49, 554.83, 273.20, 554.12, 272.92, 553.41);
            path3_387.curveTo(273.64, 553.29, 274.36, 553.17, 275.09, 553.06);
            path3_387.curveTo(275.85, 553.01, 276.60, 552.97, 277.36, 552.92);
            path3_387.closePath();
            path3_387.fill(g2);
        }

        {
            BirbPath path3_388 = new BirbPath();
            path3_388.setFillColor(new Color(206, 198, 196));
            path3_388.moveTo(275.09, 553.06);
            path3_388.curveTo(274.37, 553.18, 273.65, 553.30, 272.92, 553.41);
            path3_388.curveTo(272.95, 552.91, 272.98, 552.41, 273.00, 551.91);
            path3_388.curveTo(273.69, 552.29, 274.39, 552.67, 275.08, 553.05);
            path3_388.lineTo(275.09, 553.06);
            path3_388.closePath();
            path3_388.fill(g2);
        }

        {
            BirbPath path3_389 = new BirbPath();
            path3_389.setFillColor(new Color(50, 47, 48));
            path3_389.moveTo(270.15, 545.95);
            path3_389.curveTo(269.93, 545.36, 269.71, 544.77, 269.49, 544.18);
            path3_389.curveTo(272.40, 544.48, 275.30, 544.78, 278.21, 545.08);
            path3_389.curveTo(275.52, 545.37, 272.84, 545.66, 270.15, 545.95);
            path3_389.closePath();
            path3_389.fill(g2);
        }

        {
            BirbPath path3_390 = new BirbPath();
            path3_390.setFillColor(new Color(206, 198, 196));
            path3_390.moveTo(282.98, 548.02);
            path3_390.curveTo(282.69, 548.19, 282.41, 548.35, 282.12, 548.52);
            path3_390.curveTo(281.79, 547.80, 281.47, 547.08, 281.14, 546.36);
            path3_390.curveTo(281.07, 545.51, 281.00, 544.65, 280.93, 543.79);
            path3_390.curveTo(281.62, 543.84, 282.31, 543.89, 283.00, 543.94);
            path3_390.curveTo(283.00, 545.30, 283.00, 546.66, 282.99, 548.03);
            path3_390.lineTo(282.98, 548.02);
            path3_390.closePath();
            path3_390.fill(g2);
        }

        {
            BirbPath path3_391 = new BirbPath();
            path3_391.setFillColor(new Color(50, 47, 48));
            path3_391.moveTo(280.26, 563.89);
            path3_391.curveTo(281.28, 566.85, 279.94, 566.95, 277.72, 565.99);
            path3_391.curveTo(278.57, 565.29, 279.41, 564.59, 280.26, 563.89);
            path3_391.closePath();
            path3_391.fill(g2);
        }

        {
            BirbPath path3_392 = new BirbPath();
            path3_392.setFillColor(new Color(222, 151, 123));
            path3_392.moveTo(238.89, 362.96);
            path3_392.lineTo(238.40, 362.99);
            path3_392.curveTo(238.40, 362.99, 237.97, 362.75, 237.97, 362.75);
            path3_392.curveTo(237.52, 356.84, 237.07, 350.92, 236.63, 345.02);
            path3_392.curveTo(240.77, 346.21, 240.89, 335.78, 245.91, 341.30);
            path3_392.curveTo(253.13, 349.24, 241.90, 351.54, 240.33, 356.89);
            path3_392.curveTo(239.74, 358.88, 239.37, 360.94, 238.90, 362.96);
            path3_392.lineTo(238.89, 362.96);
            path3_392.closePath();
            path3_392.fill(g2);
        }

        {
            BirbPath path3_393 = new BirbPath();
            path3_393.setFillColor(new Color(23, 21, 22));
            path3_393.moveTo(236.14, 340.01);
            path3_393.curveTo(236.07, 341.68, 236.00, 343.35, 235.93, 345.03);
            path3_393.curveTo(232.05, 346.27, 228.17, 347.51, 224.28, 348.75);
            path3_393.curveTo(224.65, 347.22, 224.59, 344.69, 225.45, 344.32);
            path3_393.curveTo(230.09, 342.37, 228.29, 333.17, 236.03, 335.03);
            path3_393.curveTo(236.06, 336.69, 236.10, 338.35, 236.13, 340.01);
            path3_393.lineTo(236.14, 340.01);
            path3_393.closePath();
            path3_393.fill(g2);
        }

        {
            BirbPath path3_394 = new BirbPath();
            path3_394.setFillColor(new Color(23, 21, 22));
            path3_394.moveTo(209.05, 288.01);
            path3_394.curveTo(209.09, 285.32, 209.13, 282.64, 209.17, 279.95);
            path3_394.curveTo(211.44, 282.67, 215.21, 285.42, 209.05, 288.01);
            path3_394.closePath();
            path3_394.fill(g2);
        }

        {
            BirbPath path3_395 = new BirbPath();
            path3_395.setFillColor(new Color(50, 47, 48));
            path3_395.moveTo(236.14, 340.01);
            path3_395.curveTo(236.11, 338.35, 236.07, 336.69, 236.04, 335.03);
            path3_395.curveTo(236.55, 334.98, 237.05, 334.92, 237.56, 334.87);
            path3_395.curveTo(237.09, 336.59, 236.62, 338.30, 236.15, 340.02);
            path3_395.lineTo(236.14, 340.01);
            path3_395.closePath();
            path3_395.fill(g2);
        }

        {
            BirbPath path3_396 = new BirbPath();
            path3_396.setFillColor(new Color(23, 21, 22));
            path3_396.moveTo(206.12, 292.03);
            path3_396.curveTo(207.09, 290.69, 208.07, 289.35, 209.04, 288.01);
            path3_396.curveTo(208.07, 289.35, 207.09, 290.69, 206.12, 292.03);
            path3_396.closePath();
            path3_396.fill(g2);
        }

        {
            BirbPath path3_397 = new BirbPath();
            path3_397.setFillColor(new Color(235, 236, 238));
            path3_397.moveTo(265.01, 354.98);
            path3_397.curveTo(261.49, 358.42, 258.03, 361.93, 254.41, 365.27);
            path3_397.curveTo(252.56, 366.98, 250.41, 368.36, 248.39, 369.89);
            path3_397.curveTo(247.01, 365.86, 246.88, 362.70, 251.24, 359.72);
            path3_397.curveTo(253.46, 358.21, 253.82, 353.98, 255.01, 350.97);
            path3_397.curveTo(255.31, 350.93, 255.61, 350.91, 255.92, 350.92);
            path3_397.curveTo(258.62, 347.94, 261.31, 344.96, 264.01, 341.99);
            path3_397.curveTo(264.01, 341.99, 264.03, 341.97, 264.03, 341.97);
            path3_397.curveTo(265.66, 340.26, 267.30, 338.55, 268.93, 336.83);
            path3_397.curveTo(269.30, 335.88, 269.67, 334.92, 270.05, 333.97);
            path3_397.curveTo(271.35, 332.60, 272.66, 331.24, 273.96, 329.87);
            path3_397.curveTo(274.96, 327.90, 275.95, 325.92, 276.95, 323.95);
            path3_397.curveTo(285.22, 326.45, 277.52, 330.70, 278.05, 334.04);
            path3_397.curveTo(278.05, 334.35, 278.05, 334.66, 278.01, 334.96);
            path3_397.curveTo(277.04, 336.02, 276.07, 337.07, 275.10, 338.13);
            path3_397.curveTo(275.04, 339.07, 274.98, 340.02, 274.92, 340.96);
            path3_397.curveTo(273.29, 342.98, 271.65, 345.00, 270.02, 347.02);
            path3_397.curveTo(268.35, 349.67, 266.68, 352.32, 265.01, 354.96);
            path3_397.lineTo(265.01, 354.98);
            path3_397.closePath();
            path3_397.fill(g2);
        }

        {
            BirbPath path3_398 = new BirbPath();
            path3_398.setFillColor(new Color(232, 233, 235));
            path3_398.moveTo(264.02, 342.00);
            path3_398.curveTo(261.32, 344.98, 258.63, 347.96, 255.93, 350.93);
            path3_398.curveTo(258.63, 347.95, 261.32, 344.97, 264.02, 342.00);
            path3_398.closePath();
            path3_398.fill(g2);
        }

        {
            BirbPath path3_399 = new BirbPath();
            path3_399.setFillColor(new Color(232, 233, 235));
            path3_399.moveTo(268.94, 336.84);
            path3_399.curveTo(267.31, 338.55, 265.67, 340.26, 264.04, 341.98);
            path3_399.curveTo(265.67, 340.27, 267.31, 338.56, 268.94, 336.84);
            path3_399.closePath();
            path3_399.fill(g2);
        }

    }

    private static void drawPart4(Graphics2D g2) {
        {
            BirbPath path4_400 = new BirbPath();
            path4_400.setFillColor(new Color(232, 233, 235));
            path4_400.moveTo(273.97, 329.89);
            path4_400.curveTo(272.67, 331.26, 271.36, 332.62, 270.06, 333.99);
            path4_400.curveTo(271.37, 332.62, 272.67, 331.26, 273.97, 329.89);
            path4_400.closePath();
            path4_400.fill(g2);
        }

        {
            BirbPath path4_401 = new BirbPath();
            path4_401.setFillColor(new Color(146, 82, 61));
            path4_401.moveTo(342.71, 231.90);
            path4_401.curveTo(342.45, 232.24, 342.19, 232.59, 341.93, 232.93);
            path4_401.curveTo(342.19, 232.59, 342.45, 232.24, 342.71, 231.90);
            path4_401.closePath();
            path4_401.fill(g2);
        }

        {
            BirbPath path4_402 = new BirbPath();
            path4_402.setFillColor(new Color(206, 198, 196));
            path4_402.moveTo(182.83, 370.11);
            path4_402.curveTo(183.36, 368.42, 183.89, 366.74, 184.42, 365.05);
            path4_402.curveTo(183.89, 366.74, 183.36, 368.42, 182.83, 370.11);
            path4_402.closePath();
            path4_402.fill(g2);
        }

        {
            BirbPath path4_403 = new BirbPath();
            path4_403.setFillColor(new Color(222, 151, 123));
            path4_403.moveTo(347.68, 184.91);
            path4_403.curveTo(347.52, 185.32, 347.36, 185.73, 347.20, 186.13);
            path4_403.curveTo(347.36, 185.72, 347.52, 185.31, 347.68, 184.91);
            path4_403.closePath();
            path4_403.fill(g2);
        }

        {
            BirbPath path4_404 = new BirbPath();
            path4_404.setFillColor(new Color(50, 47, 48));
            path4_404.moveTo(246.52, 112.18);
            path4_404.curveTo(245.44, 112.32, 244.36, 112.46, 243.27, 112.61);
            path4_404.curveTo(242.99, 110.73, 242.06, 108.66, 242.56, 107.02);
            path4_404.curveTo(243.46, 104.07, 245.39, 102.11, 246.72, 106.91);
            path4_404.curveTo(247.17, 108.53, 246.61, 110.42, 246.52, 112.18);
            path4_404.closePath();
            path4_404.fill(g2);
        }

        {
            BirbPath path4_405 = new BirbPath();
            path4_405.setFillColor(new Color(222, 151, 123));
            path4_405.moveTo(307.99, 110.07);
            path4_405.curveTo(308.19, 109.15, 308.39, 108.23, 308.60, 107.31);
            path4_405.curveTo(310.13, 107.86, 311.67, 108.41, 313.20, 108.96);
            path4_405.curveTo(311.58, 109.64, 309.95, 110.33, 308.33, 111.01);
            path4_405.curveTo(308.22, 110.70, 308.10, 110.38, 307.99, 110.07);
            path4_405.lineTo(307.99, 110.07);
            path4_405.closePath();
            path4_405.fill(g2);
        }

        {
            BirbPath path4_406 = new BirbPath();
            path4_406.setFillColor(new Color(50, 47, 48));
            path4_406.moveTo(338.22, 135.91);
            path4_406.curveTo(338.25, 135.04, 338.28, 134.17, 338.31, 133.30);
            path4_406.curveTo(340.70, 133.23, 343.09, 133.15, 345.48, 133.08);
            path4_406.curveTo(345.41, 133.69, 345.43, 134.80, 345.25, 134.84);
            path4_406.curveTo(342.93, 135.29, 340.57, 135.58, 338.23, 135.92);
            path4_406.lineTo(338.22, 135.91);
            path4_406.closePath();
            path4_406.fill(g2);
        }

        {
            BirbPath path4_407 = new BirbPath();
            path4_407.setFillColor(new Color(206, 198, 196));
            path4_407.moveTo(274.92, 340.98);
            path4_407.curveTo(274.98, 340.04, 275.04, 339.09, 275.10, 338.15);
            path4_407.curveTo(276.07, 337.09, 277.04, 336.04, 278.01, 334.99);
            path4_407.curveTo(278.04, 334.68, 278.06, 334.37, 278.05, 334.07);
            path4_407.curveTo(281.19, 330.61, 283.73, 325.89, 287.63, 324.02);
            path4_407.curveTo(292.52, 321.66, 291.05, 310.40, 300.50, 315.14);
            path4_407.curveTo(320.14, 324.98, 303.84, 329.29, 297.80, 336.22);
            path4_407.curveTo(284.08, 351.98, 271.22, 368.49, 257.81, 384.53);
            path4_407.curveTo(256.33, 386.30, 253.57, 387.00, 251.40, 388.20);
            path4_407.curveTo(251.62, 385.43, 251.09, 382.31, 252.19, 379.96);
            path4_407.curveTo(256.16, 371.50, 260.68, 363.29, 265.00, 354.99);
            path4_407.curveTo(266.67, 352.34, 268.34, 349.69, 270.01, 347.05);
            path4_407.curveTo(271.64, 345.03, 273.28, 343.01, 274.91, 340.99);
            path4_407.lineTo(274.92, 340.98);
            path4_407.closePath();
            path4_407.fill(g2);
        }

        {
            BirbPath path4_408 = new BirbPath();
            path4_408.setFillColor(new Color(190, 116, 95));
            path4_408.moveTo(297.97, 486.02);
            path4_408.curveTo(298.58, 486.36, 299.19, 486.70, 299.80, 487.04);
            path4_408.curveTo(299.19, 486.70, 298.58, 486.36, 297.97, 486.02);
            path4_408.closePath();
            path4_408.fill(g2);
        }

        {
            BirbPath path4_409 = new BirbPath();
            path4_409.setFillColor(new Color(50, 47, 48));
            path4_409.moveTo(426.97, 492.94);
            path4_409.curveTo(426.13, 495.73, 425.29, 498.51, 424.45, 501.30);
            path4_409.curveTo(423.31, 499.92, 422.17, 498.53, 421.02, 497.15);
            path4_409.curveTo(423.00, 495.75, 424.99, 494.34, 426.97, 492.94);
            path4_409.lineTo(426.97, 492.94);
            path4_409.closePath();
            path4_409.fill(g2);
        }

        {
            BirbPath path4_410 = new BirbPath();
            path4_410.setFillColor(new Color(235, 236, 238));
            path4_410.moveTo(410.05, 279.94);
            path4_410.curveTo(414.02, 281.64, 417.98, 283.33, 421.94, 285.03);
            path4_410.curveTo(417.10, 285.37, 412.62, 284.89, 410.05, 279.94);
            path4_410.closePath();
            path4_410.fill(g2);
        }

        {
            BirbPath path4_411 = new BirbPath();
            path4_411.setFillColor(new Color(235, 236, 238));
            path4_411.moveTo(406.05, 275.97);
            path4_411.curveTo(406.67, 276.01, 407.29, 276.05, 407.91, 276.08);
            path4_411.curveTo(408.61, 277.36, 409.32, 278.64, 410.02, 279.92);
            path4_411.curveTo(408.70, 278.60, 407.37, 277.29, 406.05, 275.97);
            path4_411.closePath();
            path4_411.fill(g2);
        }

        {
            BirbPath path4_412 = new BirbPath();
            path4_412.setFillColor(new Color(206, 198, 196));
            path4_412.moveTo(413.92, 272.92);
            path4_412.curveTo(413.92, 272.32, 413.91, 271.73, 413.90, 271.13);
            path4_412.curveTo(418.59, 272.79, 423.29, 274.44, 427.98, 276.10);
            path4_412.curveTo(427.56, 276.89, 427.07, 278.39, 426.75, 278.36);
            path4_412.curveTo(423.88, 278.04, 421.05, 277.45, 418.21, 276.95);
            path4_412.curveTo(418.42, 276.35, 418.64, 275.75, 418.85, 275.15);
            path4_412.curveTo(420.63, 275.74, 422.41, 276.35, 424.20, 276.88);
            path4_412.curveTo(424.26, 276.90, 424.54, 276.17, 424.71, 275.79);
            path4_412.curveTo(422.86, 275.43, 421.01, 275.07, 419.16, 274.71);
            path4_412.curveTo(417.41, 274.11, 415.66, 273.52, 413.91, 272.92);
            path4_412.lineTo(413.92, 272.92);
            path4_412.closePath();
            path4_412.fill(g2);
        }

        {
            BirbPath path4_413 = new BirbPath();
            path4_413.setFillColor(new Color(50, 47, 48));
            path4_413.moveTo(421.06, 268.07);
            path4_413.curveTo(419.43, 267.97, 417.79, 267.86, 416.16, 267.76);
            path4_413.curveTo(416.24, 267.31, 416.36, 266.48, 416.38, 266.48);
            path4_413.curveTo(417.98, 266.66, 419.58, 266.91, 421.18, 267.15);
            path4_413.curveTo(421.05, 267.45, 421.01, 267.75, 421.06, 268.08);
            path4_413.lineTo(421.06, 268.07);
            path4_413.closePath();
            path4_413.fill(g2);
        }

        {
            BirbPath path4_414 = new BirbPath();
            path4_414.setFillColor(new Color(206, 198, 196));
            path4_414.moveTo(423.94, 267.02);
            path4_414.curveTo(424.07, 267.06, 424.22, 267.07, 424.32, 267.14);
            path4_414.curveTo(424.38, 267.18, 424.36, 267.32, 424.37, 267.42);
            path4_414.curveTo(424.24, 267.27, 424.11, 267.12, 423.98, 266.97);
            path4_414.curveTo(423.98, 266.97, 423.93, 267.01, 423.93, 267.01);
            path4_414.lineTo(423.94, 267.02);
            path4_414.closePath();
            path4_414.fill(g2);
        }

        {
            BirbPath path4_415 = new BirbPath();
            path4_415.setFillColor(new Color(222, 151, 123));
            path4_415.moveTo(408.18, 275.78);
            path4_415.curveTo(407.99, 275.49, 407.80, 275.19, 407.61, 274.90);
            path4_415.curveTo(408.49, 275.27, 409.37, 275.64, 410.25, 276.02);
            path4_415.curveTo(409.56, 275.94, 408.87, 275.86, 408.18, 275.79);
            path4_415.lineTo(408.18, 275.78);
            path4_415.closePath();
            path4_415.fill(g2);
        }

        {
            BirbPath path4_416 = new BirbPath();
            path4_416.setFillColor(new Color(232, 233, 235));
            path4_416.moveTo(274.92, 340.98);
            path4_416.curveTo(273.29, 343.00, 271.65, 345.02, 270.02, 347.04);
            path4_416.curveTo(271.65, 345.02, 273.29, 343.00, 274.92, 340.98);
            path4_416.closePath();
            path4_416.fill(g2);
        }

        {
            BirbPath path4_417 = new BirbPath();
            path4_417.setFillColor(new Color(232, 233, 235));
            path4_417.moveTo(278.01, 334.98);
            path4_417.curveTo(277.04, 336.03, 276.07, 337.09, 275.10, 338.14);
            path4_417.curveTo(276.07, 337.09, 277.04, 336.03, 278.01, 334.98);
            path4_417.closePath();
            path4_417.fill(g2);
        }

        {
            BirbPath path4_418 = new BirbPath();
            path4_418.setFillColor(new Color(146, 82, 61));
            path4_418.moveTo(419.17, 274.71);
            path4_418.curveTo(421.02, 275.07, 422.87, 275.43, 424.72, 275.79);
            path4_418.curveTo(424.54, 276.17, 424.26, 276.90, 424.21, 276.88);
            path4_418.curveTo(422.41, 276.35, 420.64, 275.74, 418.86, 275.15);
            path4_418.curveTo(418.97, 275.01, 419.08, 274.86, 419.18, 274.71);
            path4_418.lineTo(419.17, 274.71);
            path4_418.closePath();
            path4_418.fill(g2);
        }

    }

    // Test method to render the frame
    public static void main(String[] args) {
        BufferedImage img = new BufferedImage(800, 600, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = img.createGraphics();
        
        // Set up rendering hints for better quality
        //g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        //g2.setRenderingHint(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
        
        // Clear background
        g2.setColor(Color.WHITE);
        g2.fillRect(0, 0, 800, 600);
        
        // Draw the frame
        drawFrame(g2);
        
        g2.dispose();
        System.out.println("Frame rendered successfully!");
    }
}